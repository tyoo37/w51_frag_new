{
 "cells": [
  {
   "cell_type": "code",
   "execution_count": 13,
   "id": "8e564baa-78ac-4e25-936b-bbc8e9246343",
   "metadata": {},
   "outputs": [],
   "source": [
    "from dendrocat import RadioSource\n",
    "from astropy.io import fits\n",
    "from spectral_cube import SpectralCube\n",
    "import matplotlib.pyplot as plt\n",
    "from matplotlib.colors import LogNorm\n",
    "import numpy as np\n",
    "import sys\n",
    "import importlib\n",
    "from astropy.wcs import WCS\n",
    "from scipy import interpolate\n",
    "import pandas as pd\n",
    "import sympy as syp\n",
    "from astropy import units as u\n",
    "import radio_beam\n",
    "from astropy.table import Table\n",
    "from radio_beam import Beam\n",
    "from astropy import coordinates\n",
    "from astropy import wcs\n",
    "from astropy.nddata.utils import Cutout2D\n",
    "from dendrocat.aperture import Ellipse\n",
    "from regions import Regions, PixCoord\n",
    "from astropy import stats\n",
    "from itertools import chain\n",
    "from radio_beam import Beams\n",
    "from astropy.convolution import convolve\n",
    "import Paths.Paths as paths\n",
    "Path = paths.filepaths()\n",
    "\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 14,
   "id": "0cc814bf-f6b7-40ac-9b06-0c2dab904ebe",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "/home/t.yoo/w51/w51_frag_new/flux/tables/w51e_b3.fits\n",
      "125\n",
      "125\n",
      "94\n",
      "94\n",
      "273.9439074087228 304.67435409931244 230.77942993755272 320.95028792483896\n",
      "273.9439074087228 304.67435409931244 230.77942993755272 320.95028792483896\n",
      "hoho         flux        \n",
      "         Jy         \n",
      "--------------------\n",
      " 0.06138385709232212\n",
      "0.054332779773291554\n",
      " 0.10185955627338587\n",
      "0.023173278398706688\n",
      " 0.18997025589619432\n",
      "0.037999481111187824\n",
      "  0.0286072966633386\n",
      "  0.1686925796431111\n",
      "  0.3303018566407999\n",
      " 0.27221517084095653\n",
      "                 ...\n",
      "0.055249377814172614\n",
      " 0.03446309991966793\n",
      " 0.07465300949322434\n",
      "  0.0247471170669746\n",
      "0.054788001725759275\n",
      "0.029210791190614083\n",
      " 0.05975523982395654\n",
      "0.027316231882114173\n",
      "0.022767511766821548\n",
      "0.022023619979414003\n",
      "Length = 125 rows\n"
     ]
    },
    {
     "data": {
      "text/plain": [
       "\"\\nfor i in range(len(w51e_b3_major)):\\n    print(i, w51e_catalog['is_matched'][i],'%3.2e'%w51e_b3_flux_rescaled_int.value[i], '%3.2e'%w51e_b6_flux_rescaled_int.value[i], w51e_b3_avg_size[i], w51e_b6_avg_size[i], w51e_b3_error_code[i], w51e_b6_error_code[i])\\nfor i in range(len(w51n_b3_major)):\\n    print(i, w51n_catalog['is_matched'][i],'%3.2e'%w51n_b3_flux_rescaled_int.value[i], '%3.2e'%w51n_b6_flux_rescaled_int.value[i], w51n_b3_avg_size[i], w51n_b6_avg_size[i], w51n_b3_error_code[i], w51n_b6_error_code[i])\\n\""
      ]
     },
     "execution_count": 14,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "from astropy.table import Table\n",
    "import matplotlib as mpl\n",
    "import astropy.constants as c\n",
    "from mpl_toolkits.axes_grid1.inset_locator import inset_axes\n",
    "from astropy.modeling.models import BlackBody\n",
    "plt.rcParams['axes.labelsize']=25\n",
    "plt.rcParams['xtick.labelsize']=25\n",
    "plt.rcParams['ytick.labelsize']=25\n",
    "plt.rcParams['axes.titlesize']=25\n",
    "mpl.rcParams['axes.linewidth'] = 5\n",
    "mpl.rcParams['xtick.major.size'] = 10\n",
    "mpl.rcParams['xtick.major.width'] = 4\n",
    "mpl.rcParams['xtick.minor.size'] = 5\n",
    "mpl.rcParams['xtick.minor.width'] = 2\n",
    "mpl.rcParams['ytick.major.size'] = 10\n",
    "mpl.rcParams['ytick.major.width'] = 4\n",
    "mpl.rcParams['ytick.minor.size'] = 5\n",
    "mpl.rcParams['ytick.minor.width'] = 2\n",
    "params = {\"xtick.top\": True, \"ytick.right\": True, \"xtick.direction\": \"in\", \"ytick.direction\": \"in\"}\n",
    "plt.rcParams.update(params)\n",
    "\n",
    "\n",
    "def get_noise(fitsfile, noiseregion):\n",
    "    fitsdata = fits.open(b6data)\n",
    "    image = fitsdata[0].data\n",
    "    if len(image.shape)!=2:\n",
    "        image = image[0][0] \n",
    "    hdrNB = fits.getheader(fitsfile)  \n",
    "    wcsNB = WCS(hdrNB,naxis=2)\n",
    "    container = []\n",
    "    for reg in noiseregion:\n",
    "        pix_reg = reg.to_pixel(wcsNB)\n",
    "        noisemask = pix_reg.to_mask()\n",
    "        noiseim = noisemask.cutout(image)\n",
    "        container.append(noiseim.flatten())\n",
    "    noiseim = list(chain.from_iterable(container))\n",
    "    std = stats.mad_std(noiseim,ignore_nan=True)\n",
    "\n",
    "    return std\n",
    "def kappa(nu, nu0=271.1*u.GHz, kappa0=0.0114*u.cm**2*u.g**-1, beta=1.75):\n",
    "    \"\"\"\n",
    "    Compute the opacity $\\kappa$ given a reference frequency (or wavelength)\n",
    "    and a power law governing the opacity as a fuction of frequency:\n",
    "    $$ \\kappa = \\kappa_0 \\left(\\\\frac{\\\\nu}{\\\\nu_0}\\\\right)^{\\\\beta} $$\n",
    "    The default kappa=0.0114 at 271.1 GHz comes from extrapolating the\n",
    "    Ossenkopf & Henning 1994 opacities for the thin-ice-mantle, 10^6 year model\n",
    "    anchored at 1.0 mm with an assumed beta of 1.75.\n",
    "    Parameters\n",
    "    ----------\n",
    "    nu: astropy.Quantity [u.spectral() equivalent]\n",
    "        The frequency at which to evaluate kappa\n",
    "    nu0: astropy.Quantity [u.spectral() equivalent]\n",
    "        The reference frequency at which $\\kappa$ is defined\n",
    "    kappa0: astropy.Quantity [cm^2/g]\n",
    "        The dust opacity per gram of H2 along the line of sight.  Because of\n",
    "        the H2 conversion, this factor implicitly includes a dust to gas ratio\n",
    "        (usually assumed 100)\n",
    "    beta: float\n",
    "        The power-law index governing kappa as a function of nu\n",
    "    \"\"\"\n",
    "    return (kappa0*(nu.to(u.GHz,u.spectral())/nu0.to(u.GHz,u.spectral()))**(beta)).to(u.cm**2/u.g)\n",
    "def get_S_thin(T_thin, surf_den_H_2, freq, r_thick,size):\n",
    "    d = 5.41 * u.kpc\n",
    "    radius = size * u.AU\n",
    "    \n",
    "    kappa_ = kappa(freq)\n",
    "    \n",
    "    avg_gas_mass = 2.8 * c.u\n",
    "    surf_den = surf_den_H_2 * avg_gas_mass\n",
    "    F_nu = np.pi * 2 * c.h * freq**3 / (c.c**2) * (np.e**(c.h*freq/(c.k_B*T_thin)) - 1)**(-1) * (1 - np.e**((-kappa_ * surf_den).to(u.dimensionless_unscaled)))\n",
    "    \n",
    "    S_nu_hole = (F_nu / np.pi) * ((np.pi * radius**2) - (np.pi * r_thick**2)) / d**2\n",
    "    \n",
    "    return S_nu_hole.to(u.mJy)\n",
    "\n",
    "def thick_bb_emission(T, freq, radii):\n",
    "    B_nu = (2 * freq**3 *c.h / (c.c**2) * 1 / (np.e**(c.h*freq/(c.k_B*T))-1)).to(u.W/u.m**2/u.Hz)\n",
    "    d = 8.4 * u.kpc\n",
    "    S_nu = B_nu * np.pi * radii**2 / d**2 \n",
    "    \n",
    "    return S_nu.to(u.mJy)\n",
    "\n",
    "def total_emission(T_thin, T_thick, freq, surf_den, r_thick, r_total):\n",
    "    flux = np.zeros((len(r_thick),len(surf_den)))\n",
    "    for i,r in enumerate(r_thick):\n",
    "        for j,den in enumerate(surf_den):\n",
    "            flux[i,j] =  get_S_thin(T_thin, surf_den, freq, r_thick,r_total)+thick_bb_emission(T_thick, freq, r_thick)\n",
    "    return flux\n",
    "def get_bb_intensity(freq, surf_den,T_thin):\n",
    "    \n",
    "    kappa_ = kappa(freq)\n",
    "    \n",
    "    I_nu =  2 * c.h * freq**3 / (c.c**2) * (np.e**(c.h*freq/(c.k_B*T_thin)) - 1)**(-1) * (1 - np.e**((-kappa_ * surf_den).to(u.dimensionless_unscaled))) /u.sr\n",
    "    \n",
    "    \n",
    "    \n",
    "    return I_nu.to(u.Jy/u.arcsec**2)\n",
    "\n",
    "def flux_gaussian_multiple_apertures(flux, major, minor, major_corr, minor_corr): # major, minor in sigma\n",
    "    flux_rarr =flux * (1 - np.exp(-major_corr*minor_corr/2/major/minor))\n",
    "    return flux_rarr\n",
    "\n",
    "            \n",
    "       \n",
    "hdrNB6 = fits.getheader(Path.w51e_b6_tt0)  \n",
    "my_beamNB6 = Beam.from_fits_header(hdrNB6)\n",
    "hdrNB3 = fits.getheader(Path.w51e_b3_tt0)\n",
    "my_beamNB3 = Beam.from_fits_header(hdrNB3)\n",
    "wcsNB3 = WCS(hdrNB3,naxis=2)\n",
    "wcsNB6 = WCS(hdrNB6,naxis=2)\n",
    "r_max = np.sqrt(my_beamNB3.major/2*my_beamNB3.minor/2) * np.pi/180* 5.41*1000*206265\n",
    "r_max = r_max.value\n",
    "T_thin = 50 * u.K\n",
    "T_thick = 50 * u.K\n",
    "freq93 = 92.98 * u.GHz\n",
    "freq225 = 226.69 * u.GHz\n",
    "\n",
    "r_min = 1 # AU\n",
    "#r_max = 713/2 # AU\n",
    "r_thick = np.linspace(r_min, r_max, 1000) * u.AU\n",
    "avg_gas_mass = 2.8 * c.u # from https://dust-emissivity.readthedocs.io/en/latest/api/dust_emissivity.blackbody.modified_blackbody.html\n",
    "H_2_den_min = 1e+21 / u.cm**2\n",
    "H_2_den_max = 1e+27 / u.cm**2\n",
    "den_min = ((H_2_den_min  * avg_gas_mass).to(u.kg/u.m**2)).value\n",
    "den_max = ((H_2_den_max * avg_gas_mass).to(u.kg/u.m**2)).value\n",
    "surf_den = np.geomspace(den_min, den_max, 1000) * u.kg / u.m**2\n",
    "\n",
    "b3flux_20 = get_bb_intensity(freq93, surf_den, 20*u.K)\n",
    "b6flux_20 = get_bb_intensity(freq225, surf_den, 20*u.K)\n",
    "\n",
    "b3flux_50 = get_bb_intensity(freq93, surf_den, 50*u.K)\n",
    "b6flux_50 = get_bb_intensity(freq225, surf_den, 50*u.K)\n",
    "\n",
    "b3flux_100 = get_bb_intensity(freq93, surf_den, 100*u.K)\n",
    "b6flux_100 = get_bb_intensity(freq225, surf_den, 100*u.K)\n",
    "\n",
    "b3flux_200 = get_bb_intensity(freq93, surf_den, 200*u.K)\n",
    "b6flux_200 = get_bb_intensity(freq225, surf_den, 200*u.K)\n",
    "\n",
    "b3flux_500 = get_bb_intensity(freq93, surf_den, 500*u.K)\n",
    "b6flux_500 = get_bb_intensity(freq225, surf_den, 500*u.K)\n",
    "\n",
    "\n",
    "\"\"\"\n",
    "w51e_b3noise = get_noise(w51e_b3_tt0,w51e_b3_noiseregion)\n",
    "w51e_b6noise = get_noise(w51e_b6,w51e_b3_noiseregion)\n",
    "w51n_b3noise = get_noise(w51e_b3_tt0,w51e_b3_noiseregion)\n",
    "w51n_b6noise = get_noise(w51e_b3_tt0,w51e_b3_noiseregion)\n",
    "\"\"\"\n",
    "\n",
    "\n",
    "w51e_catalog = Table.read(Path.w51e_dendro_matched_catalog_new) \n",
    "w51n_catalog = Table.read(Path.w51n_dendro_matched_catalog_new) \n",
    "\n",
    "w51e_peak_flux_b3 = w51e_catalog['flux_peak_b3']\n",
    "w51e_peak_flux_b6 = w51e_catalog['flux_peak_b6']\n",
    "w51n_peak_flux_b3 = w51n_catalog['flux_peak_b3']\n",
    "w51n_peak_flux_b6 = w51n_catalog['flux_peak_b6']\n",
    "\n",
    "w51e_b3_flux_fits = Table.read(Path.w51e_b3_flux)\n",
    "w51e_b6_flux_fits = Table.read(Path.w51e_b6_flux)\n",
    "w51n_b3_flux_fits = Table.read(Path.w51n_b3_flux)\n",
    "w51n_b6_flux_fits = Table.read(Path.w51n_b6_flux)\n",
    "print(Path.w51e_b3_flux)\n",
    "w51e_b6_flux_conv_fits = Table.read(Path.w51e_b6_conv_flux)\n",
    "w51n_b6_flux_conv_fits = Table.read(Path.w51n_b6_conv_flux)\n",
    "\n",
    "w51e_b3_major = w51e_b3_flux_fits['deconvolved_major']\n",
    "w51e_b6_major = w51e_b6_flux_conv_fits['deconvolved_major'] #FWHM, deg\n",
    "w51n_b3_major = w51n_b3_flux_fits['deconvolved_major']\n",
    "w51n_b6_major = w51n_b6_flux_conv_fits['deconvolved_major']\n",
    "w51e_b3_minor = w51e_b3_flux_fits['deconvolved_minor']\n",
    "w51e_b6_minor = w51e_b6_flux_conv_fits['deconvolved_minor']\n",
    "w51n_b3_minor = w51n_b3_flux_fits['deconvolved_minor']\n",
    "w51n_b6_minor = w51n_b6_flux_conv_fits['deconvolved_minor']\n",
    "\n",
    "\n",
    "\"\"\"\n",
    "w51e_b3_major_upperr = w51e_b3_flux_fits['deconvolved_major_upperr']\n",
    "w51e_b6_major_upperr = w51e_b6_flux_fits['deconvolved_major_upperr']\n",
    "w51n_b3_major_upperr = w51n_b3_flux_fits['deconvolved_major_upperr']\n",
    "w51n_b6_major_upperr = w51n_b6_flux_fits['deconvolved_major_upperr']\n",
    "w51e_b3_minor_upperr = w51e_b3_flux_fits['deconvolved_minor_upperr']\n",
    "w51e_b6_minor_upperr = w51e_b6_flux_fits['deconvolved_minor_upperr']\n",
    "w51n_b3_minor_upperr = w51n_b3_flux_fits['deconvolved_minor_upperr']\n",
    "w51n_b6_minor_upperr = w51n_b6_flux_fits['deconvolved_minor_upperr']\n",
    "\n",
    "w51e_b3_major_lowerr = w51e_b3_flux_fits['deconvolved_major_lowerr']\n",
    "w51e_b6_major_lowerr = w51e_b6_flux_fits['deconvolved_major_lowerr']\n",
    "w51n_b3_major_lowerr = w51n_b3_flux_fits['deconvolved_major_lowerr']\n",
    "w51n_b6_major_lowerr = w51n_b6_flux_fits['deconvolved_major_lowerr']\n",
    "w51e_b3_minor_lowerr = w51e_b3_flux_fits['deconvolved_minor_lowerr']\n",
    "w51e_b6_minor_lowerr = w51e_b6_flux_fits['deconvolved_minor_lowerr']\n",
    "w51n_b3_minor_lowerr = w51n_b3_flux_fits['deconvolved_minor_lowerr']\n",
    "w51n_b6_minor_lowerr = w51n_b6_flux_fits['deconvolved_minor_lowerr']\n",
    "\"\"\"\n",
    "w51e_b3_int_flux = w51e_b3_flux_fits['flux']\n",
    "w51e_b6_int_flux = w51e_b6_flux_conv_fits['flux']\n",
    "w51n_b3_int_flux = w51n_b3_flux_fits['flux']\n",
    "w51n_b6_int_flux = w51n_b6_flux_conv_fits['flux']\n",
    "print(len(w51e_b3_int_flux))\n",
    "print(len(w51e_b6_int_flux))\n",
    "print(len(w51n_b3_int_flux))\n",
    "print(len(w51n_b6_int_flux))\n",
    "\n",
    "#w51e_b3_error_code = w51e_b3_flux_fits['error_code']\n",
    "#w51e_b6_error_code  = w51e_b6_flux_conv_fits['error_code']\n",
    "#w51n_b3_error_code  = w51n_b3_flux_fits['error_code']\n",
    "#w51n_b6_error_code  = w51n_b6_flux_conv_fits['error_code']\n",
    "\n",
    "scaleNB6 = wcsNB6.proj_plane_pixel_scales()[0]\n",
    "scaleNB3 = wcsNB3.proj_plane_pixel_scales()[0]\n",
    "sig_to_fwhm = np.sqrt(2*np.log(2))*2\n",
    "#b6_min_size_maj =sig_to_fwhm*np.sqrt((my_beamNB6.major.value/scaleNB6.value/sig_to_fwhm+0.05)**2 \n",
    "#                                 - (my_beamNB6.major.value/scaleNB6.value/sig_to_fwhm)**2)*scaleNB6.value\n",
    "#b6_min_size_min =sig_to_fwhm*np.sqrt((my_beamNB6.minor.value/scaleNB6.value/sig_to_fwhm+0.05)**2 \n",
    "#                                 - (my_beamNB6.minor.value/scaleNB6.value/sig_to_fwhm)**2)*scaleNB6.value\n",
    "\n",
    "#b3_min_size_maj =sig_to_fwhm*np.sqrt((my_beamNB3.major.value/scaleNB3.value/sig_to_fwhm+0.05)**2 \n",
    "#                                 - (my_beamNB3.major.value/scaleNB3.value/sig_to_fwhm)**2)*scaleNB3.value\n",
    "#b3_min_size_min =sig_to_fwhm*np.sqrt((my_beamNB3.minor.value/scaleNB3.value/sig_to_fwhm+0.05)**2 \n",
    "#                                 - (my_beamNB3.minor.value/scaleNB3.value/sig_to_fwhm)**2)*scaleNB3.value\n",
    "\n",
    "\n",
    "\n",
    "w51e_b3_int_flux[w51e_b3_int_flux<0]=np.nan\n",
    "w51n_b3_int_flux[w51n_b3_int_flux<0]=np.nan\n",
    "w51e_b6_int_flux[w51e_b6_int_flux<0]=np.nan\n",
    "w51n_b6_int_flux[w51n_b6_int_flux<0]=np.nan\n",
    "\n",
    "w51e_b3_unresolved = np.logical_and(w51e_b3_major<=0, np.isfinite(w51e_b3_int_flux))\n",
    "w51n_b3_unresolved = np.logical_and(w51n_b3_major<=0, np.isfinite(w51n_b3_int_flux))\n",
    "w51e_b6_unresolved = np.logical_and(w51e_b6_major<=0, np.isfinite(w51e_b6_int_flux))\n",
    "w51n_b6_unresolved = np.logical_and(w51n_b6_major<=0, np.isfinite(w51n_b6_int_flux))\n",
    "\n",
    "\n",
    "w51e_b3_resolved = np.logical_and(w51e_b3_major>0, np.isfinite(w51e_b3_int_flux))\n",
    "w51n_b3_resolved = np.logical_and(w51n_b3_major>0, np.isfinite(w51n_b3_int_flux))\n",
    "w51e_b6_resolved = np.logical_and(w51e_b6_major>0, np.isfinite(w51e_b6_int_flux))\n",
    "w51n_b6_resolved = np.logical_and(w51n_b6_major>0, np.isfinite(w51n_b6_int_flux))\n",
    "\n",
    "w51e_b3_res_b6_res = np.logical_and(w51e_b3_resolved, w51e_b6_resolved)\n",
    "w51n_b3_res_b6_res = np.logical_and(w51n_b3_resolved, w51n_b6_resolved)\n",
    "w51e_b3_unres_b6_res = np.logical_and(w51e_b3_unresolved, w51e_b6_resolved)\n",
    "w51n_b3_unres_b6_res = np.logical_and(w51n_b3_unresolved, w51n_b6_resolved)\n",
    "w51e_b3_res_b6_unres = np.logical_and(w51e_b3_resolved, w51e_b6_unresolved)\n",
    "w51n_b3_res_b6_unres = np.logical_and(w51n_b3_resolved, w51n_b6_unresolved)\n",
    "w51e_b3_unres_b6_unres = np.logical_and(w51e_b3_unresolved, w51e_b6_unresolved)\n",
    "w51n_b3_unres_b6_unres = np.logical_and(w51n_b3_unresolved, w51n_b6_unresolved)\n",
    "\n",
    "\n",
    "w51e_b3_major[w51e_b3_major<=0]=np.nan\n",
    "w51n_b3_major[w51n_b3_major<=0]=np.nan\n",
    "w51e_b6_major[w51e_b6_major<=0]=np.nan\n",
    "w51n_b6_major[w51n_b6_major<=0]=np.nan\n",
    "\n",
    "w51e_b3_minor[w51e_b3_minor<=0]=np.nan\n",
    "w51n_b3_minor[w51n_b3_minor<=0]=np.nan\n",
    "w51e_b6_minor[w51e_b6_minor<=0]=np.nan\n",
    "w51n_b6_minor[w51n_b6_minor<=0]=np.nan\n",
    "\n",
    "\n",
    "w51e_b3_int_flux_err = w51e_b3_flux_fits['flux_err']\n",
    "w51e_b6_int_flux_err = w51e_b6_flux_conv_fits['flux_err']\n",
    "w51n_b3_int_flux_err = w51n_b3_flux_fits['flux_err']\n",
    "w51n_b6_int_flux_err = w51n_b6_flux_conv_fits['flux_err']\n",
    "\n",
    "\n",
    "\"\"\"\n",
    "w51e_b3_int_upp_flux[w51e_b3_int_flux<0]=np.nan\n",
    "w51e_b6_int_upp_flux[w51e_b6_int_flux<0]=np.nan\n",
    "w51n_b3_int_upp_flux[w51n_b3_int_flux<0]=np.nan\n",
    "w51n_b6_int_upp_flux[w51n_b6_int_flux<0]=np.nan\n",
    "\n",
    "w51e_b3_int_low_flux[w51e_b3_int_flux<0]=np.nan\n",
    "w51e_b6_int_low_flux[w51e_b6_int_flux<0]=np.nan\n",
    "w51n_b3_int_low_flux[w51n_b3_int_flux<0]=np.nan\n",
    "w51n_b6_int_low_flux[w51n_b6_int_flux<0]=np.nan\n",
    "\"\"\"\n",
    "\n",
    "w51e_b3_err = 2.065537678896079e-05\n",
    "w51e_b6_err = 0.00012361802520203196\n",
    "w51n_b3_err = 2.220660593897177e-05\n",
    "w51n_b6_err = 8.95845803518789e-05\n",
    "\n",
    "\n",
    "\"\"\"\n",
    "w51e_b3_avg_size = np.sqrt(w51e_b3_major/2 * w51e_b3_minor/2) * np.pi/180 * 5.41*1000*206265\n",
    "w51e_b6_avg_size = np.sqrt(w51e_b6_major/2 * w51e_b6_minor/2) * np.pi/180 * 5.41*1000*206265\n",
    "w51n_b3_avg_size = np.sqrt(w51n_b3_major/2 * w51n_b3_minor/2) * np.pi/180 * 5.1*1000*206265\n",
    "w51n_b6_avg_size = np.sqrt(w51n_b6_major/2 * w51n_b6_minor/2) * np.pi/180 * 5.1*1000*206265\n",
    "\"\"\"\n",
    "def arcsec_to_au(dist=5.41):\n",
    "    #dist in kpc\n",
    "    return 2 /2.355 * np.pi/180 * dist*1000*206265\n",
    "\n",
    "    \n",
    "#w51e_b3_avg_size = np.array([np.max((w51e_b3_major[i], w51e_b3_minor[i])) for i in range(len(w51e_b3_major.value))]) * arcsec_to_au() \n",
    "#w51e_b6_avg_size = np.array([np.max((w51e_b6_major[i], w51e_b6_minor[i])) for i in range(len(w51e_b6_major.value))]) * arcsec_to_au()\n",
    "#w51n_b3_avg_size = np.array([np.max((w51n_b3_major[i], w51n_b3_minor[i])) for i in range(len(w51n_b3_major.value))]) * arcsec_to_au(dist=5.1)\n",
    "#w51n_b6_avg_size = np.array([np.max((w51n_b6_major[i], w51n_b6_minor[i])) for i in range(len(w51n_b6_major.value))]) * arcsec_to_au(dist=5.1)\n",
    "\n",
    "w51e_b3_avg_size_major = w51e_b3_major * arcsec_to_au()\n",
    "w51e_b6_avg_size_major = w51e_b6_major * arcsec_to_au()\n",
    "w51n_b3_avg_size_major = w51n_b3_major * arcsec_to_au()\n",
    "w51n_b6_avg_size_major = w51n_b6_major * arcsec_to_au()\n",
    "\n",
    "w51e_b3_avg_size_minor = w51e_b3_major * arcsec_to_au()\n",
    "w51e_b6_avg_size_minor = w51e_b6_major * arcsec_to_au()\n",
    "w51n_b3_avg_size_minor = w51n_b3_major * arcsec_to_au()\n",
    "w51n_b6_avg_size_minor = w51n_b6_major * arcsec_to_au()\n",
    "\n",
    "\n",
    "print(np.nanmin(w51e_b3_avg_size_major), np.nanmin(w51e_b6_avg_size_major), np.nanmin(w51n_b3_avg_size_major), np.nanmin(w51n_b6_avg_size_major))\n",
    "print(np.nanmin(w51e_b3_avg_size_minor), np.nanmin(w51e_b6_avg_size_minor), np.nanmin(w51n_b3_avg_size_minor), np.nanmin(w51n_b6_avg_size_minor))\n",
    "w51e_b3_avg_size_major[w51e_b3_unresolved] = np.nanmin(w51e_b3_avg_size_major)\n",
    "w51e_b6_avg_size_major[w51e_b6_unresolved] = np.nanmin(w51e_b6_avg_size_major)\n",
    "w51n_b3_avg_size_major[w51n_b3_unresolved] = np.nanmin(w51n_b3_avg_size_major)\n",
    "w51n_b6_avg_size_major[w51n_b6_unresolved] = np.nanmin(w51n_b6_avg_size_major)\n",
    "\n",
    "w51e_b3_avg_size_minor[w51e_b3_unresolved] = np.nanmin(w51e_b3_avg_size_minor)\n",
    "w51e_b6_avg_size_minor[w51e_b6_unresolved] = np.nanmin(w51e_b6_avg_size_minor)\n",
    "w51n_b3_avg_size_major[w51n_b3_unresolved] = np.nanmin(w51n_b3_avg_size_minor)\n",
    "w51n_b6_avg_size_major[w51n_b6_unresolved] = np.nanmin(w51n_b6_avg_size_minor)\n",
    "\n",
    "w51e_b3_major[w51e_b3_unresolved] = np.nanmin(w51e_b3_avg_size_major)/arcsec_to_au()\n",
    "w51e_b6_major[w51e_b6_unresolved] = np.nanmin(w51e_b6_avg_size_major)/arcsec_to_au()\n",
    "w51e_b3_minor[w51e_b3_unresolved] = np.nanmin(w51e_b3_avg_size_minor)/arcsec_to_au()\n",
    "w51e_b6_minor[w51e_b6_unresolved] = np.nanmin(w51e_b6_avg_size_minor)/arcsec_to_au()\n",
    "\n",
    "w51n_b3_major[w51n_b3_unresolved] = np.nanmin(w51n_b3_avg_size_major)/arcsec_to_au()\n",
    "w51n_b6_major[w51n_b6_unresolved] = np.nanmin(w51n_b6_avg_size_major)/arcsec_to_au()\n",
    "w51n_b3_minor[w51n_b3_unresolved] = np.nanmin(w51n_b3_avg_size_minor)/arcsec_to_au()\n",
    "w51n_b6_minor[w51n_b6_unresolved] = np.nanmin(w51n_b6_avg_size_minor)/arcsec_to_au()\n",
    "\n",
    "w51e_b3_flux_rescaled = w51e_b3_int_flux * (1-np.exp(-(2/2.355)**2*8*np.log(2)))                                      \n",
    "w51e_b6_flux_rescaled = flux_gaussian_multiple_apertures(w51e_b6_int_flux, w51e_b3_major/np.sqrt(8*np.log(2)), w51e_b3_minor/np.sqrt(8*np.log(2)), \n",
    "                                                         w51e_b3_major*2/2.355, w51e_b3_minor*2/2.355)\n",
    "\n",
    "w51n_b3_flux_rescaled = w51n_b3_int_flux * (1-np.exp(-(2/2.355)**2*8*np.log(2)))\n",
    "w51n_b6_flux_rescaled = flux_gaussian_multiple_apertures(w51n_b6_int_flux, w51n_b3_major/np.sqrt(8*np.log(2)), w51n_b3_minor/np.sqrt(8*np.log(2)), \n",
    "                                                         w51n_b3_major*2/2.355, w51n_b3_minor*2/2.355)\n",
    "\n",
    "w51e_b3_flux_err_rescaled = w51e_b3_int_flux_err * (1-np.exp(-(2/2.355)**2*8*np.log(2)))                                      \n",
    "w51e_b6_flux_err_rescaled = flux_gaussian_multiple_apertures(w51e_b6_int_flux_err, w51e_b3_major/np.sqrt(8*np.log(2)), w51e_b3_minor/np.sqrt(8*np.log(2)), \n",
    "                                                         w51e_b3_major*2/2.355, w51e_b3_minor*2/2.355)\n",
    "w51n_b3_flux_err_rescaled = w51n_b3_int_flux_err * (1-np.exp(-(2/2.355)**2*8*np.log(2)))\n",
    "w51n_b6_flux_err_rescaled = flux_gaussian_multiple_apertures(w51n_b6_int_flux_err, w51n_b3_major/np.sqrt(8*np.log(2)), w51n_b3_minor/np.sqrt(8*np.log(2)), \n",
    "                                                         w51n_b3_major*2/2.355, w51n_b3_minor*2/2.355)\n",
    "\n",
    "angular_size_in_sky_w51e_b3 = 2*w51e_b3_avg_size_major / 5400  * u.arcsec # au / pc -> arcsec, radius x 2\n",
    "angular_size_in_sky_w51e_b6 = 2*w51e_b6_avg_size_major/ 5400* u.arcsec \n",
    "angular_size_in_sky_w51n_b3 = 2*w51n_b3_avg_size_major / 5400* u.arcsec \n",
    "angular_size_in_sky_w51n_b6 = 2*w51n_b6_avg_size_major / 5400* u.arcsec \n",
    "\n",
    "\n",
    "\n",
    "# keep same size (b3 size)\n",
    "w51e_b3_flux_rescaled_int = w51e_b3_flux_rescaled / angular_size_in_sky_w51e_b3 **2  #Jy/arcsec**2\n",
    "w51e_b6_flux_rescaled_int = w51e_b6_flux_rescaled / angular_size_in_sky_w51e_b6 **2\n",
    "w51n_b3_flux_rescaled_int = w51n_b3_flux_rescaled / angular_size_in_sky_w51n_b3 **2\n",
    "w51n_b6_flux_rescaled_int = w51n_b6_flux_rescaled / angular_size_in_sky_w51n_b6 **2\n",
    "\n",
    "\n",
    "#print(w51e_b3_flux_rescaled.to(u.Jy), w51e_b6_flux_rescaled.to(u.Jy))\n",
    "print('hoho',w51e_b3_flux_rescaled_int)\n",
    "\n",
    "\n",
    "#print(w51n_b3_flux_rescaled_int, w51n_b6_flux_rescaled_int)\n",
    "\n",
    "w51e_b3_flux_err_rescaled_int = w51e_b3_flux_err_rescaled / angular_size_in_sky_w51e_b3 **2\n",
    "w51e_b6_flux_err_rescaled_int = w51e_b6_flux_err_rescaled / angular_size_in_sky_w51e_b6 **2\n",
    "w51n_b3_flux_err_rescaled_int = w51n_b3_flux_err_rescaled / angular_size_in_sky_w51n_b3 **2\n",
    "w51n_b6_flux_err_rescaled_int = w51n_b6_flux_err_rescaled / angular_size_in_sky_w51n_b6 **2\n",
    "\n",
    "#w51e_snrind = np.where((w51e_peak_flux_b3>3*w51e_b3_err)&(w51e_peak_flux_b6>3*w51e_b6_err)&(w51e_b3_snr_major>3)&(w51e_b6_snr_major>3)&(w51e_b3_snr_minor>3)&(w51e_b6_snr_minor>3))[0]\n",
    "#w51n_snrind = np.where((w51n_peak_flux_b3>3*w51n_b3_err)&(w51n_peak_flux_b6>3*w51n_b6_err)&(w51n_b3_snr_major>3)&(w51n_b6_snr_major>3)&(w51n_b3_snr_minor>3)&(w51n_b6_snr_minor>3))[0]\n",
    "\"\"\"\n",
    "for i in range(len(w51e_b3_major)):\n",
    "    print(i, w51e_catalog['is_matched'][i],'%3.2e'%w51e_b3_flux_rescaled_int.value[i], '%3.2e'%w51e_b6_flux_rescaled_int.value[i], w51e_b3_avg_size[i], w51e_b6_avg_size[i], w51e_b3_error_code[i], w51e_b6_error_code[i])\n",
    "for i in range(len(w51n_b3_major)):\n",
    "    print(i, w51n_catalog['is_matched'][i],'%3.2e'%w51n_b3_flux_rescaled_int.value[i], '%3.2e'%w51n_b6_flux_rescaled_int.value[i], w51n_b3_avg_size[i], w51n_b6_avg_size[i], w51n_b3_error_code[i], w51n_b6_error_code[i])\n",
    "\"\"\"   \n",
    "    \n",
    "\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 15,
   "id": "d793dd5c-3cea-4162-804f-2e4eb3afe62d",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "125 125 125\n"
     ]
    },
    {
     "data": {
      "text/plain": [
       "<matplotlib.legend.Legend at 0x145e20ab3490>"
      ]
     },
     "execution_count": 15,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "",
      "text/plain": [
       "<Figure size 720x720 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "w51e_alpha_int = np.log10(w51e_b3_flux_rescaled_int/w51e_b6_flux_rescaled_int)/np.log10(freq93/freq225)\n",
    "w51e_alpha = w51e_catalog['alpha']\n",
    "w51n_alpha_int = np.log10(w51n_b3_flux_rescaled_int/w51n_b6_flux_rescaled_int)/np.log10(freq93/freq225)\n",
    "w51n_alpha = w51n_catalog['alpha']\n",
    "fig = plt.figure(figsize=(10,10))\n",
    "ax = fig.add_subplot(111)\n",
    "print(len(w51e_alpha_int), len(w51e_alpha), len(w51e_b3_res_b6_res))\n",
    "ax.scatter(w51e_alpha[w51e_b3_res_b6_res], w51e_alpha_int[w51e_b3_res_b6_res], marker='o', s=100, c='blue', label='W51e')\n",
    "ax.scatter(w51n_alpha[w51n_b3_res_b6_res], w51n_alpha_int[w51n_b3_res_b6_res], marker='o', s=100, c='orange', label='W51n')\n",
    "ax.plot([1.3,3.5],[1.3,3.5], color='black', linestyle='--', linewidth=2)\n",
    "ax.set_xlabel(r'$\\alpha_{peak}$', fontsize=25)\n",
    "ax.set_ylabel(r'$\\alpha_{int}$', fontsize=25)\n",
    "ax.legend()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 16,
   "id": "e2af1b1c-5b9b-462f-b180-f67a480912a0",
   "metadata": {},
   "outputs": [],
   "source": [
    "def make_temp_hist2(b3flux, b6flux, surf_den, temparr, b3freq, b6freq, index, plot=False, ):\n",
    "    # dist in pc\n",
    "    temp_yso_arr = []\n",
    "   \n",
    "    for i in range(len(b3flux)):\n",
    "        if i in index:\n",
    "            if not np.isfinite(b3flux[i]):\n",
    "                temp_yso_arr.append(np.nan)\n",
    "                continue\n",
    "            if not np.isfinite(b6flux[i]):\n",
    "                temp_yso_arr.append(np.nan)\n",
    "                continue\n",
    "            \n",
    "            b6fluxarr = []\n",
    "            isinsidearr=[]\n",
    "\n",
    "            for temp in temparr:\n",
    "                b3flux_bb = get_bb_intensity(b3freq, surf_den, temp*u.K)\n",
    "                b6flux_bb = get_bb_intensity(b6freq, surf_den, temp*u.K)\n",
    "                b3ind = np.searchsorted(b3flux_bb.value, b3flux[i])\n",
    "                if b3ind==len(surf_den):\n",
    "                    b3ind = len(surf_den)-1\n",
    "                    isinsidearr.append(False)\n",
    "                else:\n",
    "                    isinsidearr.append(True)\n",
    "                b6flux_inbetween = b6flux_bb[b3ind].value\n",
    "                b6fluxarr.append(b6flux_inbetween)\n",
    "\n",
    "\n",
    "            tempind = np.searchsorted(b6fluxarr, b6flux[i])\n",
    "            if tempind==len(b6fluxarr):\n",
    "                tempind = len(b6fluxarr)-1\n",
    "            if not isinsidearr[tempind]:\n",
    "                temp_yso=np.nan\n",
    "            else:\n",
    "                if tempind>=len(b6fluxarr)-1:\n",
    "                    weight=0\n",
    "                else:\n",
    "                    weight = (b6flux[i] - b6fluxarr[tempind])/(b6fluxarr[tempind+1] - b6fluxarr[tempind])\n",
    "\n",
    "                temp_yso = temparr[tempind] + weight\n",
    "        else:\n",
    "            temp_yso = np.nan\n",
    "            \n",
    "        print(i, b3flux[i], b6flux[i], temp_yso) \n",
    "        temp_yso_arr.append(temp_yso)\n",
    "    return np.array(temp_yso_arr)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 17,
   "id": "6cb95d4b-0655-47b2-8937-b67c20a3ecae",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "0 0.06138385709232212 0.43621747817625767 16.650242439499028\n",
      "1 0.054332779773291554 0.14178412808193297 nan\n",
      "2 0.10185955627338587 0.38454950654375925 nan\n",
      "3 0.023173278398706688 0.365842625501321 18.807939576189554\n",
      "4 0.18997025589619432 1.7565301796944448 53.20947613648212\n",
      "5 0.037999481111187824 0.2579277023375061 11.59703939803148\n",
      "6 0.0286072966633386 0.07473288951164563 nan\n",
      "7 0.1686925796431111 0.11544700109604066 nan\n",
      "8 0.3303018566407999 1.9572890605041402 58.01322050406531\n",
      "9 0.27221517084095653 0.9683403630880416 nan\n",
      "10 0.2407594304404893 1.0344127064099893 nan\n",
      "11 0.0722546176103923 0.6670919661255249 23.43888220376253\n",
      "12 0.13296211261861454 0.24112349334749597 nan\n",
      "13 0.159185378197887 0.2649437445504697 nan\n",
      "14 0.035754446611336616 0.21597626989488464 10.326177945032068\n",
      "15 0.0394296732501627 0.2978535375498532 12.82175850867341\n",
      "16 0.08314487564513098 0.49668936145052345 18.288696943436328\n",
      "17 0.02711133879490266 0.1582420090757824 8.604502073343737\n",
      "18 0.0335191727724465 0.5149557919670534 23.647995110054648\n",
      "19 0.08285395549208485 0.28543945322065795 nan\n",
      "20 0.6404019919425757 2.1368443002130566 nan\n",
      "21 0.09527827605177533 0.46510119734222594 17.41143352032949\n",
      "22 0.27199581111449295 0.9681244290812437 nan\n",
      "23 0.02503030261985366 0.06853315012998543 5.6549638068155295\n",
      "24 0.07147274094975956 0.6991244161537312 24.458059421914577\n",
      "25 0.2041449800906135 1.3228595761131883 40.85051525287638\n",
      "26 0.009780154760849117 0.052774382459055094 5.0441361451913185\n",
      "27 0.5731311458372139 0.7673418332439143 nan\n",
      "28 0.5287998812280967 0.25377742453656327 nan\n",
      "29 0.1962858367020462 1.0560612969168715 33.60472769627263\n",
      "30 2.012422969079689 3.855171956362328 nan\n",
      "31 0.10421028506651098 0.13286445372802005 nan\n",
      "32 0.016787245244213222 0.13798625769851544 8.199144404295387\n",
      "33 0.023902496343867864 0.34378406989690985 17.008448077220415\n",
      "34 0.2412311652876461 0.8616888691997364 nan\n",
      "35 0.04887538525914005 0.4581933553693118 17.670595166217236\n",
      "36 2.802605107719256 5.105539839969237 nan\n",
      "37 0.8654224026567539 0.978648717678048 nan\n",
      "38 0.019321083272381363 0.1105273704773655 7.073588298024747\n",
      "39 0.299271780828781 0.567691772249662 nan\n",
      "40 0.0962691733974889 0.22411570992463098 nan\n",
      "41 0.03536591454555886 0.28280140406473275 12.437198118507863\n",
      "42 0.037434127702938615 0.31667661363533467 13.480761615212824\n",
      "43 1.0847178502399457 1.117754362445272 nan\n",
      "44 0.04121574078016228 0.17879548541800933 9.21741185922003\n",
      "45 0.1561203522513561 1.2163408411742267 38.06618451787748\n",
      "46 0.16071104743038359 0.5372303856810838 nan\n",
      "47 0.27174732206381635 0.7934937062303263 nan\n",
      "48 0.05437225126075904 0.2794975927945802 12.171218238007317\n",
      "49 0.04729649497328124 0.3389143703124524 13.938590954737412\n",
      "50 0.09757417893013666 0.5985351805948028 21.10307646153878\n",
      "51 0.10029599264952072 0.3017747150301981 nan\n",
      "52 0.04548502678188002 0.7149877022076483 30.316310751317964\n",
      "53 0.1461908843030889 0.8605969031042005 28.282500646499457\n",
      "54 0.04210805700790426 0.5171644659426115 20.6830395804742\n",
      "55 0.13081283789384998 0.7013114179891086 23.92731761375447\n",
      "56 0.057889938434949786 0.275798311788058 12.068656402732708\n",
      "57 0.03731247699446127 0.10948383208615871 nan\n",
      "58 0.034537910305065755 0.20834980198128747 10.09486032594168\n",
      "59 0.18609779488377962 1.303309633467794 40.338657197834756\n",
      "60 0.01649014485495769 0.14869817724707216 8.740189490027797\n",
      "61 0.046582269993179624 0.2465896864434498 11.216018342838293\n",
      "62 0.033317064463708225 0.05679472630973248 nan\n",
      "63 0.017444429945833295 0.1668461624259195 9.397184855012707\n",
      "64 0.07756825210322692 0.42978395576970185 16.42516049538332\n",
      "65 0.014110585822072357 0.259476060891592 18.666007730542557\n",
      "66 0.05338840897463823 0.2163565821546407 10.340007309058281\n",
      "67 0.06161605062662145 0.5649399703873634 20.584376695252026\n",
      "68 0.03906209066501014 0.265296051133755 11.81142257292822\n",
      "0 0.11452149346994286 0.7859360088800078 26.260681156987186\n",
      "1 0.21585895564374927 0.6125237249917672 nan\n",
      "2 0.31427121498389415 0.2161630138397197 nan\n",
      "3 0.01455338014792273 0.035733033780015994 4.3836649916715675\n",
      "4 8.41665659437973 6.842980470564515 nan\n",
      "5 0.2738616820417826 1.6657263955679316 50.12968091704702\n",
      "6 0.10117179916385811 1.0332796728873352 33.94865927429359\n",
      "7 0.18491332322117565 0.8882041811359918 nan\n",
      "8 0.2256577331806356 0.7881516812075229 nan\n",
      "9 0.47067980897631 1.4154930901400062 nan\n",
      "10 0.6620556827229579 2.433599417211827 nan\n",
      "11 1.438233715162558 5.454362104787169 nan\n",
      "12 0.07853231997822117 0.5623347788550505 20.13725902006221\n",
      "13 0.3679080627065839 0.28596605842270556 nan\n",
      "14 0.10747211309042558 0.34761149785538015 nan\n",
      "15 0.7318573238993715 1.032493683395978 nan\n",
      "16 0.1565136665331315 0.5590204160714615 nan\n",
      "17 0.029831748592260957 0.6475934402718568 47.880753975909556\n",
      "18 0.4332749655574343 0.7088096132632921 nan\n",
      "19 0.3887401041631749 0.8142318742729362 nan\n",
      "20 0.6017693826950132 0.857206409311826 nan\n",
      "21 0.42440554894967697 1.554433338255997 nan\n",
      "22 0.05211126162552593 0.11898776520262722 nan\n"
     ]
    }
   ],
   "source": [
    "temparr = np.arange(1,5000,step=1)\n",
    "\n",
    "temp_yso_arr_w51e = make_temp_hist2(w51e_b3_flux_rescaled_int.value, w51e_b6_flux_rescaled_int.value, surf_den, temparr, freq93, freq225, np.arange(len(w51e_b3_flux_rescaled_int)))\n",
    "temp_yso_arr_w51n = make_temp_hist2(w51n_b3_flux_rescaled_int.value, w51n_b6_flux_rescaled_int.value, surf_den, temparr, freq93, freq225, np.arange(len(w51n_b3_flux_rescaled_int)))\n",
    "\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 18,
   "id": "deaf8dd4-9b73-4569-81cd-2320deb82a04",
   "metadata": {},
   "outputs": [
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "*c* argument looks like a single numeric RGB or RGBA sequence, which should be avoided as value-mapping will have precedence in case its length matches with *x* & *y*.  Please use the *color* keyword-argument or provide a 2D array with a single row if you intend to specify the same RGB or RGBA value for all points.\n",
      "*c* argument looks like a single numeric RGB or RGBA sequence, which should be avoided as value-mapping will have precedence in case its length matches with *x* & *y*.  Please use the *color* keyword-argument or provide a 2D array with a single row if you intend to specify the same RGB or RGBA value for all points.\n",
      "*c* argument looks like a single numeric RGB or RGBA sequence, which should be avoided as value-mapping will have precedence in case its length matches with *x* & *y*.  Please use the *color* keyword-argument or provide a 2D array with a single row if you intend to specify the same RGB or RGBA value for all points.\n",
      "*c* argument looks like a single numeric RGB or RGBA sequence, which should be avoided as value-mapping will have precedence in case its length matches with *x* & *y*.  Please use the *color* keyword-argument or provide a 2D array with a single row if you intend to specify the same RGB or RGBA value for all points.\n",
      "*c* argument looks like a single numeric RGB or RGBA sequence, which should be avoided as value-mapping will have precedence in case its length matches with *x* & *y*.  Please use the *color* keyword-argument or provide a 2D array with a single row if you intend to specify the same RGB or RGBA value for all points.\n",
      "*c* argument looks like a single numeric RGB or RGBA sequence, which should be avoided as value-mapping will have precedence in case its length matches with *x* & *y*.  Please use the *color* keyword-argument or provide a 2D array with a single row if you intend to specify the same RGB or RGBA value for all points.\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "[16.65024244         nan         nan 18.80793958 53.20947614 11.5970394\n",
      "         nan         nan 58.0132205          nan         nan 23.4388822\n",
      "         nan         nan 10.32617795 12.82175851 18.28869694  8.60450207\n",
      " 23.64799511         nan         nan 17.41143352         nan  5.65496381\n",
      " 24.45805942 40.85051525  5.04413615         nan         nan 33.6047277\n",
      "         nan         nan  8.1991444  17.00844808         nan 17.67059517\n",
      "         nan         nan  7.0735883          nan         nan 12.43719812\n",
      " 13.48076162         nan  9.21741186 38.06618452         nan         nan\n",
      " 12.17121824 13.93859095 21.10307646         nan 30.31631075 28.28250065\n",
      " 20.68303958 23.92731761 12.0686564          nan 10.09486033 40.3386572\n",
      "  8.74018949 11.21601834         nan  9.39718486 16.4251605  18.66600773\n",
      " 10.34000731 20.5843767  11.81142257         nan         nan         nan\n",
      "         nan         nan         nan         nan         nan         nan\n",
      "         nan         nan         nan         nan         nan         nan\n",
      "         nan         nan         nan         nan         nan         nan\n",
      "         nan         nan         nan         nan         nan         nan\n",
      "         nan         nan         nan         nan         nan         nan\n",
      "         nan         nan         nan         nan         nan         nan\n",
      "         nan         nan         nan         nan         nan         nan\n",
      "         nan         nan         nan         nan         nan         nan\n",
      "         nan         nan         nan         nan         nan]\n",
      "43 125 26\n",
      "[26.26068116         nan         nan  4.38366499         nan 50.12968092\n",
      " 33.94865927         nan         nan         nan         nan         nan\n",
      " 20.13725902         nan         nan         nan         nan 47.88075398\n",
      "         nan         nan         nan         nan         nan         nan\n",
      "         nan         nan         nan         nan         nan         nan\n",
      "         nan         nan         nan         nan         nan         nan\n",
      "         nan         nan         nan         nan         nan         nan\n",
      "         nan         nan         nan         nan         nan         nan\n",
      "         nan         nan         nan         nan         nan         nan\n",
      "         nan         nan         nan         nan         nan         nan\n",
      "         nan         nan         nan         nan         nan         nan\n",
      "         nan         nan         nan         nan         nan         nan\n",
      "         nan         nan         nan         nan         nan         nan\n",
      "         nan         nan         nan         nan         nan         nan\n",
      "         nan         nan         nan         nan         nan         nan\n",
      "         nan         nan         nan         nan]\n",
      "6 94 38\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "*c* argument looks like a single numeric RGB or RGBA sequence, which should be avoided as value-mapping will have precedence in case its length matches with *x* & *y*.  Please use the *color* keyword-argument or provide a 2D array with a single row if you intend to specify the same RGB or RGBA value for all points.\n",
      "*c* argument looks like a single numeric RGB or RGBA sequence, which should be avoided as value-mapping will have precedence in case its length matches with *x* & *y*.  Please use the *color* keyword-argument or provide a 2D array with a single row if you intend to specify the same RGB or RGBA value for all points.\n",
      "*c* argument looks like a single numeric RGB or RGBA sequence, which should be avoided as value-mapping will have precedence in case its length matches with *x* & *y*.  Please use the *color* keyword-argument or provide a 2D array with a single row if you intend to specify the same RGB or RGBA value for all points.\n",
      "*c* argument looks like a single numeric RGB or RGBA sequence, which should be avoided as value-mapping will have precedence in case its length matches with *x* & *y*.  Please use the *color* keyword-argument or provide a 2D array with a single row if you intend to specify the same RGB or RGBA value for all points.\n",
      "*c* argument looks like a single numeric RGB or RGBA sequence, which should be avoided as value-mapping will have precedence in case its length matches with *x* & *y*.  Please use the *color* keyword-argument or provide a 2D array with a single row if you intend to specify the same RGB or RGBA value for all points.\n",
      "*c* argument looks like a single numeric RGB or RGBA sequence, which should be avoided as value-mapping will have precedence in case its length matches with *x* & *y*.  Please use the *color* keyword-argument or provide a 2D array with a single row if you intend to specify the same RGB or RGBA value for all points.\n",
      "*c* argument looks like a single numeric RGB or RGBA sequence, which should be avoided as value-mapping will have precedence in case its length matches with *x* & *y*.  Please use the *color* keyword-argument or provide a 2D array with a single row if you intend to specify the same RGB or RGBA value for all points.\n",
      "*c* argument looks like a single numeric RGB or RGBA sequence, which should be avoided as value-mapping will have precedence in case its length matches with *x* & *y*.  Please use the *color* keyword-argument or provide a 2D array with a single row if you intend to specify the same RGB or RGBA value for all points.\n",
      "*c* argument looks like a single numeric RGB or RGBA sequence, which should be avoided as value-mapping will have precedence in case its length matches with *x* & *y*.  Please use the *color* keyword-argument or provide a 2D array with a single row if you intend to specify the same RGB or RGBA value for all points.\n",
      "*c* argument looks like a single numeric RGB or RGBA sequence, which should be avoided as value-mapping will have precedence in case its length matches with *x* & *y*.  Please use the *color* keyword-argument or provide a 2D array with a single row if you intend to specify the same RGB or RGBA value for all points.\n",
      "*c* argument looks like a single numeric RGB or RGBA sequence, which should be avoided as value-mapping will have precedence in case its length matches with *x* & *y*.  Please use the *color* keyword-argument or provide a 2D array with a single row if you intend to specify the same RGB or RGBA value for all points.\n",
      "*c* argument looks like a single numeric RGB or RGBA sequence, which should be avoided as value-mapping will have precedence in case its length matches with *x* & *y*.  Please use the *color* keyword-argument or provide a 2D array with a single row if you intend to specify the same RGB or RGBA value for all points.\n",
      "*c* argument looks like a single numeric RGB or RGBA sequence, which should be avoided as value-mapping will have precedence in case its length matches with *x* & *y*.  Please use the *color* keyword-argument or provide a 2D array with a single row if you intend to specify the same RGB or RGBA value for all points.\n",
      "*c* argument looks like a single numeric RGB or RGBA sequence, which should be avoided as value-mapping will have precedence in case its length matches with *x* & *y*.  Please use the *color* keyword-argument or provide a 2D array with a single row if you intend to specify the same RGB or RGBA value for all points.\n",
      "*c* argument looks like a single numeric RGB or RGBA sequence, which should be avoided as value-mapping will have precedence in case its length matches with *x* & *y*.  Please use the *color* keyword-argument or provide a 2D array with a single row if you intend to specify the same RGB or RGBA value for all points.\n",
      "*c* argument looks like a single numeric RGB or RGBA sequence, which should be avoided as value-mapping will have precedence in case its length matches with *x* & *y*.  Please use the *color* keyword-argument or provide a 2D array with a single row if you intend to specify the same RGB or RGBA value for all points.\n",
      "*c* argument looks like a single numeric RGB or RGBA sequence, which should be avoided as value-mapping will have precedence in case its length matches with *x* & *y*.  Please use the *color* keyword-argument or provide a 2D array with a single row if you intend to specify the same RGB or RGBA value for all points.\n",
      "*c* argument looks like a single numeric RGB or RGBA sequence, which should be avoided as value-mapping will have precedence in case its length matches with *x* & *y*.  Please use the *color* keyword-argument or provide a 2D array with a single row if you intend to specify the same RGB or RGBA value for all points.\n",
      "*c* argument looks like a single numeric RGB or RGBA sequence, which should be avoided as value-mapping will have precedence in case its length matches with *x* & *y*.  Please use the *color* keyword-argument or provide a 2D array with a single row if you intend to specify the same RGB or RGBA value for all points.\n",
      "*c* argument looks like a single numeric RGB or RGBA sequence, which should be avoided as value-mapping will have precedence in case its length matches with *x* & *y*.  Please use the *color* keyword-argument or provide a 2D array with a single row if you intend to specify the same RGB or RGBA value for all points.\n",
      "*c* argument looks like a single numeric RGB or RGBA sequence, which should be avoided as value-mapping will have precedence in case its length matches with *x* & *y*.  Please use the *color* keyword-argument or provide a 2D array with a single row if you intend to specify the same RGB or RGBA value for all points.\n",
      "*c* argument looks like a single numeric RGB or RGBA sequence, which should be avoided as value-mapping will have precedence in case its length matches with *x* & *y*.  Please use the *color* keyword-argument or provide a 2D array with a single row if you intend to specify the same RGB or RGBA value for all points.\n",
      "*c* argument looks like a single numeric RGB or RGBA sequence, which should be avoided as value-mapping will have precedence in case its length matches with *x* & *y*.  Please use the *color* keyword-argument or provide a 2D array with a single row if you intend to specify the same RGB or RGBA value for all points.\n",
      "*c* argument looks like a single numeric RGB or RGBA sequence, which should be avoided as value-mapping will have precedence in case its length matches with *x* & *y*.  Please use the *color* keyword-argument or provide a 2D array with a single row if you intend to specify the same RGB or RGBA value for all points.\n",
      "*c* argument looks like a single numeric RGB or RGBA sequence, which should be avoided as value-mapping will have precedence in case its length matches with *x* & *y*.  Please use the *color* keyword-argument or provide a 2D array with a single row if you intend to specify the same RGB or RGBA value for all points.\n",
      "*c* argument looks like a single numeric RGB or RGBA sequence, which should be avoided as value-mapping will have precedence in case its length matches with *x* & *y*.  Please use the *color* keyword-argument or provide a 2D array with a single row if you intend to specify the same RGB or RGBA value for all points.\n",
      "*c* argument looks like a single numeric RGB or RGBA sequence, which should be avoided as value-mapping will have precedence in case its length matches with *x* & *y*.  Please use the *color* keyword-argument or provide a 2D array with a single row if you intend to specify the same RGB or RGBA value for all points.\n",
      "*c* argument looks like a single numeric RGB or RGBA sequence, which should be avoided as value-mapping will have precedence in case its length matches with *x* & *y*.  Please use the *color* keyword-argument or provide a 2D array with a single row if you intend to specify the same RGB or RGBA value for all points.\n",
      "*c* argument looks like a single numeric RGB or RGBA sequence, which should be avoided as value-mapping will have precedence in case its length matches with *x* & *y*.  Please use the *color* keyword-argument or provide a 2D array with a single row if you intend to specify the same RGB or RGBA value for all points.\n",
      "*c* argument looks like a single numeric RGB or RGBA sequence, which should be avoided as value-mapping will have precedence in case its length matches with *x* & *y*.  Please use the *color* keyword-argument or provide a 2D array with a single row if you intend to specify the same RGB or RGBA value for all points.\n",
      "*c* argument looks like a single numeric RGB or RGBA sequence, which should be avoided as value-mapping will have precedence in case its length matches with *x* & *y*.  Please use the *color* keyword-argument or provide a 2D array with a single row if you intend to specify the same RGB or RGBA value for all points.\n",
      "*c* argument looks like a single numeric RGB or RGBA sequence, which should be avoided as value-mapping will have precedence in case its length matches with *x* & *y*.  Please use the *color* keyword-argument or provide a 2D array with a single row if you intend to specify the same RGB or RGBA value for all points.\n",
      "*c* argument looks like a single numeric RGB or RGBA sequence, which should be avoided as value-mapping will have precedence in case its length matches with *x* & *y*.  Please use the *color* keyword-argument or provide a 2D array with a single row if you intend to specify the same RGB or RGBA value for all points.\n",
      "*c* argument looks like a single numeric RGB or RGBA sequence, which should be avoided as value-mapping will have precedence in case its length matches with *x* & *y*.  Please use the *color* keyword-argument or provide a 2D array with a single row if you intend to specify the same RGB or RGBA value for all points.\n",
      "*c* argument looks like a single numeric RGB or RGBA sequence, which should be avoided as value-mapping will have precedence in case its length matches with *x* & *y*.  Please use the *color* keyword-argument or provide a 2D array with a single row if you intend to specify the same RGB or RGBA value for all points.\n",
      "*c* argument looks like a single numeric RGB or RGBA sequence, which should be avoided as value-mapping will have precedence in case its length matches with *x* & *y*.  Please use the *color* keyword-argument or provide a 2D array with a single row if you intend to specify the same RGB or RGBA value for all points.\n",
      "*c* argument looks like a single numeric RGB or RGBA sequence, which should be avoided as value-mapping will have precedence in case its length matches with *x* & *y*.  Please use the *color* keyword-argument or provide a 2D array with a single row if you intend to specify the same RGB or RGBA value for all points.\n",
      "*c* argument looks like a single numeric RGB or RGBA sequence, which should be avoided as value-mapping will have precedence in case its length matches with *x* & *y*.  Please use the *color* keyword-argument or provide a 2D array with a single row if you intend to specify the same RGB or RGBA value for all points.\n",
      "*c* argument looks like a single numeric RGB or RGBA sequence, which should be avoided as value-mapping will have precedence in case its length matches with *x* & *y*.  Please use the *color* keyword-argument or provide a 2D array with a single row if you intend to specify the same RGB or RGBA value for all points.\n",
      "*c* argument looks like a single numeric RGB or RGBA sequence, which should be avoided as value-mapping will have precedence in case its length matches with *x* & *y*.  Please use the *color* keyword-argument or provide a 2D array with a single row if you intend to specify the same RGB or RGBA value for all points.\n",
      "*c* argument looks like a single numeric RGB or RGBA sequence, which should be avoided as value-mapping will have precedence in case its length matches with *x* & *y*.  Please use the *color* keyword-argument or provide a 2D array with a single row if you intend to specify the same RGB or RGBA value for all points.\n",
      "*c* argument looks like a single numeric RGB or RGBA sequence, which should be avoided as value-mapping will have precedence in case its length matches with *x* & *y*.  Please use the *color* keyword-argument or provide a 2D array with a single row if you intend to specify the same RGB or RGBA value for all points.\n",
      "*c* argument looks like a single numeric RGB or RGBA sequence, which should be avoided as value-mapping will have precedence in case its length matches with *x* & *y*.  Please use the *color* keyword-argument or provide a 2D array with a single row if you intend to specify the same RGB or RGBA value for all points.\n",
      "*c* argument looks like a single numeric RGB or RGBA sequence, which should be avoided as value-mapping will have precedence in case its length matches with *x* & *y*.  Please use the *color* keyword-argument or provide a 2D array with a single row if you intend to specify the same RGB or RGBA value for all points.\n",
      "*c* argument looks like a single numeric RGB or RGBA sequence, which should be avoided as value-mapping will have precedence in case its length matches with *x* & *y*.  Please use the *color* keyword-argument or provide a 2D array with a single row if you intend to specify the same RGB or RGBA value for all points.\n",
      "*c* argument looks like a single numeric RGB or RGBA sequence, which should be avoided as value-mapping will have precedence in case its length matches with *x* & *y*.  Please use the *color* keyword-argument or provide a 2D array with a single row if you intend to specify the same RGB or RGBA value for all points.\n",
      "*c* argument looks like a single numeric RGB or RGBA sequence, which should be avoided as value-mapping will have precedence in case its length matches with *x* & *y*.  Please use the *color* keyword-argument or provide a 2D array with a single row if you intend to specify the same RGB or RGBA value for all points.\n",
      "*c* argument looks like a single numeric RGB or RGBA sequence, which should be avoided as value-mapping will have precedence in case its length matches with *x* & *y*.  Please use the *color* keyword-argument or provide a 2D array with a single row if you intend to specify the same RGB or RGBA value for all points.\n",
      "*c* argument looks like a single numeric RGB or RGBA sequence, which should be avoided as value-mapping will have precedence in case its length matches with *x* & *y*.  Please use the *color* keyword-argument or provide a 2D array with a single row if you intend to specify the same RGB or RGBA value for all points.\n",
      "*c* argument looks like a single numeric RGB or RGBA sequence, which should be avoided as value-mapping will have precedence in case its length matches with *x* & *y*.  Please use the *color* keyword-argument or provide a 2D array with a single row if you intend to specify the same RGB or RGBA value for all points.\n",
      "*c* argument looks like a single numeric RGB or RGBA sequence, which should be avoided as value-mapping will have precedence in case its length matches with *x* & *y*.  Please use the *color* keyword-argument or provide a 2D array with a single row if you intend to specify the same RGB or RGBA value for all points.\n",
      "*c* argument looks like a single numeric RGB or RGBA sequence, which should be avoided as value-mapping will have precedence in case its length matches with *x* & *y*.  Please use the *color* keyword-argument or provide a 2D array with a single row if you intend to specify the same RGB or RGBA value for all points.\n",
      "*c* argument looks like a single numeric RGB or RGBA sequence, which should be avoided as value-mapping will have precedence in case its length matches with *x* & *y*.  Please use the *color* keyword-argument or provide a 2D array with a single row if you intend to specify the same RGB or RGBA value for all points.\n",
      "*c* argument looks like a single numeric RGB or RGBA sequence, which should be avoided as value-mapping will have precedence in case its length matches with *x* & *y*.  Please use the *color* keyword-argument or provide a 2D array with a single row if you intend to specify the same RGB or RGBA value for all points.\n",
      "*c* argument looks like a single numeric RGB or RGBA sequence, which should be avoided as value-mapping will have precedence in case its length matches with *x* & *y*.  Please use the *color* keyword-argument or provide a 2D array with a single row if you intend to specify the same RGB or RGBA value for all points.\n",
      "*c* argument looks like a single numeric RGB or RGBA sequence, which should be avoided as value-mapping will have precedence in case its length matches with *x* & *y*.  Please use the *color* keyword-argument or provide a 2D array with a single row if you intend to specify the same RGB or RGBA value for all points.\n",
      "*c* argument looks like a single numeric RGB or RGBA sequence, which should be avoided as value-mapping will have precedence in case its length matches with *x* & *y*.  Please use the *color* keyword-argument or provide a 2D array with a single row if you intend to specify the same RGB or RGBA value for all points.\n",
      "*c* argument looks like a single numeric RGB or RGBA sequence, which should be avoided as value-mapping will have precedence in case its length matches with *x* & *y*.  Please use the *color* keyword-argument or provide a 2D array with a single row if you intend to specify the same RGB or RGBA value for all points.\n",
      "*c* argument looks like a single numeric RGB or RGBA sequence, which should be avoided as value-mapping will have precedence in case its length matches with *x* & *y*.  Please use the *color* keyword-argument or provide a 2D array with a single row if you intend to specify the same RGB or RGBA value for all points.\n",
      "*c* argument looks like a single numeric RGB or RGBA sequence, which should be avoided as value-mapping will have precedence in case its length matches with *x* & *y*.  Please use the *color* keyword-argument or provide a 2D array with a single row if you intend to specify the same RGB or RGBA value for all points.\n",
      "*c* argument looks like a single numeric RGB or RGBA sequence, which should be avoided as value-mapping will have precedence in case its length matches with *x* & *y*.  Please use the *color* keyword-argument or provide a 2D array with a single row if you intend to specify the same RGB or RGBA value for all points.\n",
      "*c* argument looks like a single numeric RGB or RGBA sequence, which should be avoided as value-mapping will have precedence in case its length matches with *x* & *y*.  Please use the *color* keyword-argument or provide a 2D array with a single row if you intend to specify the same RGB or RGBA value for all points.\n",
      "*c* argument looks like a single numeric RGB or RGBA sequence, which should be avoided as value-mapping will have precedence in case its length matches with *x* & *y*.  Please use the *color* keyword-argument or provide a 2D array with a single row if you intend to specify the same RGB or RGBA value for all points.\n",
      "*c* argument looks like a single numeric RGB or RGBA sequence, which should be avoided as value-mapping will have precedence in case its length matches with *x* & *y*.  Please use the *color* keyword-argument or provide a 2D array with a single row if you intend to specify the same RGB or RGBA value for all points.\n",
      "*c* argument looks like a single numeric RGB or RGBA sequence, which should be avoided as value-mapping will have precedence in case its length matches with *x* & *y*.  Please use the *color* keyword-argument or provide a 2D array with a single row if you intend to specify the same RGB or RGBA value for all points.\n",
      "*c* argument looks like a single numeric RGB or RGBA sequence, which should be avoided as value-mapping will have precedence in case its length matches with *x* & *y*.  Please use the *color* keyword-argument or provide a 2D array with a single row if you intend to specify the same RGB or RGBA value for all points.\n",
      "*c* argument looks like a single numeric RGB or RGBA sequence, which should be avoided as value-mapping will have precedence in case its length matches with *x* & *y*.  Please use the *color* keyword-argument or provide a 2D array with a single row if you intend to specify the same RGB or RGBA value for all points.\n",
      "*c* argument looks like a single numeric RGB or RGBA sequence, which should be avoided as value-mapping will have precedence in case its length matches with *x* & *y*.  Please use the *color* keyword-argument or provide a 2D array with a single row if you intend to specify the same RGB or RGBA value for all points.\n",
      "*c* argument looks like a single numeric RGB or RGBA sequence, which should be avoided as value-mapping will have precedence in case its length matches with *x* & *y*.  Please use the *color* keyword-argument or provide a 2D array with a single row if you intend to specify the same RGB or RGBA value for all points.\n",
      "*c* argument looks like a single numeric RGB or RGBA sequence, which should be avoided as value-mapping will have precedence in case its length matches with *x* & *y*.  Please use the *color* keyword-argument or provide a 2D array with a single row if you intend to specify the same RGB or RGBA value for all points.\n",
      "*c* argument looks like a single numeric RGB or RGBA sequence, which should be avoided as value-mapping will have precedence in case its length matches with *x* & *y*.  Please use the *color* keyword-argument or provide a 2D array with a single row if you intend to specify the same RGB or RGBA value for all points.\n",
      "*c* argument looks like a single numeric RGB or RGBA sequence, which should be avoided as value-mapping will have precedence in case its length matches with *x* & *y*.  Please use the *color* keyword-argument or provide a 2D array with a single row if you intend to specify the same RGB or RGBA value for all points.\n",
      "*c* argument looks like a single numeric RGB or RGBA sequence, which should be avoided as value-mapping will have precedence in case its length matches with *x* & *y*.  Please use the *color* keyword-argument or provide a 2D array with a single row if you intend to specify the same RGB or RGBA value for all points.\n",
      "*c* argument looks like a single numeric RGB or RGBA sequence, which should be avoided as value-mapping will have precedence in case its length matches with *x* & *y*.  Please use the *color* keyword-argument or provide a 2D array with a single row if you intend to specify the same RGB or RGBA value for all points.\n",
      "*c* argument looks like a single numeric RGB or RGBA sequence, which should be avoided as value-mapping will have precedence in case its length matches with *x* & *y*.  Please use the *color* keyword-argument or provide a 2D array with a single row if you intend to specify the same RGB or RGBA value for all points.\n",
      "*c* argument looks like a single numeric RGB or RGBA sequence, which should be avoided as value-mapping will have precedence in case its length matches with *x* & *y*.  Please use the *color* keyword-argument or provide a 2D array with a single row if you intend to specify the same RGB or RGBA value for all points.\n",
      "*c* argument looks like a single numeric RGB or RGBA sequence, which should be avoided as value-mapping will have precedence in case its length matches with *x* & *y*.  Please use the *color* keyword-argument or provide a 2D array with a single row if you intend to specify the same RGB or RGBA value for all points.\n",
      "*c* argument looks like a single numeric RGB or RGBA sequence, which should be avoided as value-mapping will have precedence in case its length matches with *x* & *y*.  Please use the *color* keyword-argument or provide a 2D array with a single row if you intend to specify the same RGB or RGBA value for all points.\n",
      "*c* argument looks like a single numeric RGB or RGBA sequence, which should be avoided as value-mapping will have precedence in case its length matches with *x* & *y*.  Please use the *color* keyword-argument or provide a 2D array with a single row if you intend to specify the same RGB or RGBA value for all points.\n",
      "*c* argument looks like a single numeric RGB or RGBA sequence, which should be avoided as value-mapping will have precedence in case its length matches with *x* & *y*.  Please use the *color* keyword-argument or provide a 2D array with a single row if you intend to specify the same RGB or RGBA value for all points.\n",
      "*c* argument looks like a single numeric RGB or RGBA sequence, which should be avoided as value-mapping will have precedence in case its length matches with *x* & *y*.  Please use the *color* keyword-argument or provide a 2D array with a single row if you intend to specify the same RGB or RGBA value for all points.\n",
      "*c* argument looks like a single numeric RGB or RGBA sequence, which should be avoided as value-mapping will have precedence in case its length matches with *x* & *y*.  Please use the *color* keyword-argument or provide a 2D array with a single row if you intend to specify the same RGB or RGBA value for all points.\n",
      "*c* argument looks like a single numeric RGB or RGBA sequence, which should be avoided as value-mapping will have precedence in case its length matches with *x* & *y*.  Please use the *color* keyword-argument or provide a 2D array with a single row if you intend to specify the same RGB or RGBA value for all points.\n",
      "*c* argument looks like a single numeric RGB or RGBA sequence, which should be avoided as value-mapping will have precedence in case its length matches with *x* & *y*.  Please use the *color* keyword-argument or provide a 2D array with a single row if you intend to specify the same RGB or RGBA value for all points.\n",
      "*c* argument looks like a single numeric RGB or RGBA sequence, which should be avoided as value-mapping will have precedence in case its length matches with *x* & *y*.  Please use the *color* keyword-argument or provide a 2D array with a single row if you intend to specify the same RGB or RGBA value for all points.\n",
      "*c* argument looks like a single numeric RGB or RGBA sequence, which should be avoided as value-mapping will have precedence in case its length matches with *x* & *y*.  Please use the *color* keyword-argument or provide a 2D array with a single row if you intend to specify the same RGB or RGBA value for all points.\n",
      "*c* argument looks like a single numeric RGB or RGBA sequence, which should be avoided as value-mapping will have precedence in case its length matches with *x* & *y*.  Please use the *color* keyword-argument or provide a 2D array with a single row if you intend to specify the same RGB or RGBA value for all points.\n",
      "*c* argument looks like a single numeric RGB or RGBA sequence, which should be avoided as value-mapping will have precedence in case its length matches with *x* & *y*.  Please use the *color* keyword-argument or provide a 2D array with a single row if you intend to specify the same RGB or RGBA value for all points.\n",
      "*c* argument looks like a single numeric RGB or RGBA sequence, which should be avoided as value-mapping will have precedence in case its length matches with *x* & *y*.  Please use the *color* keyword-argument or provide a 2D array with a single row if you intend to specify the same RGB or RGBA value for all points.\n",
      "*c* argument looks like a single numeric RGB or RGBA sequence, which should be avoided as value-mapping will have precedence in case its length matches with *x* & *y*.  Please use the *color* keyword-argument or provide a 2D array with a single row if you intend to specify the same RGB or RGBA value for all points.\n"
     ]
    },
    {
     "data": {
      "image/png": "",
      "text/plain": [
       "<Figure size 1368x576 with 4 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "import seaborn as sns\n",
    "import matplotlib\n",
    "import matplotlib.cm as cm\n",
    "from scipy.interpolate import CubicSpline\n",
    "\n",
    "temp_yso_arr_w51e = np.array(temp_yso_arr_w51e)\n",
    "temp_yso_arr_w51n = np.array(temp_yso_arr_w51n)\n",
    "print(temp_yso_arr_w51e)\n",
    "print(len(np.where(np.isfinite(temp_yso_arr_w51e))[0]), len(temp_yso_arr_w51e), len(temp_yso_arr_w51e)-56-len(np.where(np.isfinite(temp_yso_arr_w51e))[0]))\n",
    "print(temp_yso_arr_w51n)\n",
    "print(len(np.where(np.isfinite(temp_yso_arr_w51n))[0]), len(temp_yso_arr_w51n), len(temp_yso_arr_w51n)-50-len(np.where(np.isfinite(temp_yso_arr_w51n))[0]))\n",
    "\n",
    "#temp_yso_arr_w51e[temp_yso_arr_w51e>500]=np.nan\n",
    "#temp_yso_arr_w51n[temp_yso_arr_w51n>500]=np.nan\n",
    "\n",
    "#nonan_w51e = np.where(np.isfinite(temp_yso_arr_w51e))\n",
    "#nonan_w51n = np.where(np.isfinite(temp_yso_arr_w51n))\n",
    "\n",
    "#nan_w51e = np.where(~np.isfinite(temp_yso_arr_w51e))\n",
    "#nan_w51n = np.where(~np.isfinite(temp_yso_arr_w51n))\n",
    "\n",
    "\n",
    "\"\"\"\n",
    "w51e_b3_flux_rescaled_err_nonan = np.array(list(zip(w51e_b3_flux_rescaled_int.to(u.Jy).value[nonan_w51e]-w51e_b3_flux_low_rescaled_int.to(u.Jy).value[nonan_w51e],\n",
    "                                              w51e_b3_flux_upp_rescaled_int.to(u.Jy).value[nonan_w51e]-w51e_b3_flux_rescaled_int.to(u.Jy).value[nonan_w51e])))\n",
    "w51e_b3_flux_rescaled_err_nonan = np.array([[w51e_b3_flux_rescaled_int.to(u.Jy).value[nonan_w51e]-w51e_b3_flux_low_rescaled_int.to(u.Jy).value[nonan_w51e]\n",
    "                                             ,w51e_b3_flux_upp_rescaled_int.to(u.Jy).value[nonan_w51e]-w51e_b3_flux_rescaled_int.to(u.Jy).value[nonan_w51e]]]).T\n",
    "\n",
    "w51e_b6_flux_rescaled_err_nonan = np.array(list(zip(w51e_b6_flux_rescaled_int.to(u.Jy).value[nonan_w51e]-w51e_b6_flux_low_rescaled_int.to(u.Jy).value[nonan_w51e],\n",
    "                                              w51e_b6_flux_upp_rescaled_int.to(u.Jy).value[nonan_w51e]-w51e_b6_flux_rescaled_int.to(u.Jy).value[nonan_w51e]))).T\n",
    "w51e_b6_flux_rescaled_err_nonan = np.array([[w51e_b6_flux_rescaled_int.to(u.Jy).value[nonan_w51e]-w51e_b6_flux_low_rescaled_int.to(u.Jy).value[nonan_w51e]\n",
    "                                             ,w51e_b6_flux_upp_rescaled_int.to(u.Jy).value[nonan_w51e]-w51e_b6_flux_rescaled_int.to(u.Jy).value[nonan_w51e]]]).T\n",
    "\n",
    "w51n_b3_flux_rescaled_err_nonan = np.array(list(zip(w51n_b3_flux_rescaled_int.to(u.Jy).value[nonan_w51n]-w51n_b3_flux_low_rescaled_int.to(u.Jy).value[nonan_w51n],\n",
    "                                              w51n_b3_flux_upp_rescaled_int.to(u.Jy).value[nonan_w51n]-w51n_b3_flux_rescaled_int.to(u.Jy).value[nonan_w51n]))).T\n",
    "w51n_b3_flux_rescaled_err_nonan = np.array([[w51n_b3_flux_rescaled_int.to(u.Jy).value[nonan_w51n]-w51n_b3_flux_low_rescaled_int.to(u.Jy).value[nonan_w51n]\n",
    "                                             ,w51n_b3_flux_upp_rescaled_int.to(u.Jy).value[nonan_w51n]-w51n_b3_flux_rescaled_int.to(u.Jy).value[nonan_w51n]]]).T\n",
    "w51n_b6_flux_rescaled_err_nonan = np.array(list(zip(w51n_b6_flux_rescaled_int.to(u.Jy).value[nonan_w51n]-w51n_b6_flux_low_rescaled_int.to(u.Jy).value[nonan_w51n],\n",
    "                                              w51n_b6_flux_upp_rescaled_int.to(u.Jy).value[nonan_w51n]-w51n_b6_flux_rescaled_int.to(u.Jy).value[nonan_w51n]))).T\n",
    "w51n_b6_flux_rescaled_err_nonan = np.array([[w51n_b6_flux_rescaled_int.to(u.Jy).value[nonan_w51n]-w51n_b6_flux_low_rescaled_int.to(u.Jy).value[nonan_w51n]\n",
    "                                             ,w51n_b6_flux_upp_rescaled_int.to(u.Jy).value[nonan_w51n]-w51n_b6_flux_rescaled_int.to(u.Jy).value[nonan_w51n]]]).T\n",
    "\n",
    "\n",
    "w51e_b3_flux_rescaled_err_nan = np.array(list(zip(w51e_b3_flux_rescaled_int.to(u.Jy).value[nan_w51e]-w51e_b3_flux_low_rescaled_int.to(u.Jy).value[nan_w51e],\n",
    "                                              w51e_b3_flux_upp_rescaled_int.to(u.Jy).value[nan_w51e]-w51e_b3_flux_rescaled_int.to(u.Jy).value[nan_w51e]))).T\n",
    "\n",
    "w51e_b6_flux_rescaled_err_nan = np.array(list(zip(w51e_b6_flux_rescaled_int.to(u.Jy).value[nan_w51e]-w51e_b6_flux_low_rescaled_int.to(u.Jy).value[nan_w51e],\n",
    "                                              w51e_b6_flux_upp_rescaled_int.to(u.Jy).value[nan_w51e]-w51e_b6_flux_rescaled_int.to(u.Jy).value[nan_w51e]))).T\n",
    "\n",
    "w51n_b3_flux_rescaled_err_nan = np.array(list(zip(w51n_b3_flux_rescaled_int.to(u.Jy).value[nan_w51n]-w51n_b3_flux_low_rescaled_int.to(u.Jy).value[nan_w51n],\n",
    "                                              w51n_b3_flux_upp_rescaled_int.to(u.Jy).value[nan_w51n]-w51n_b3_flux_rescaled_int.to(u.Jy).value[nan_w51n]))).T\n",
    "\n",
    "w51n_b6_flux_rescaled_err_nan = np.array(list(zip(w51n_b6_flux_rescaled_int.to(u.Jy).value[nan_w51n]-w51n_b6_flux_low_rescaled_int.to(u.Jy).value[nan_w51n],\n",
    "                                              w51n_b6_flux_upp_rescaled_int.to(u.Jy).value[nan_w51n]-w51n_b6_flux_rescaled_int.to(u.Jy).value[nan_w51n]))).T\n",
    "\"\"\"\n",
    "cmap = sns.color_palette(\"YlOrBr_r\", as_cmap=True)\n",
    "norm = matplotlib.colors.Normalize(vmin=0, vmax=100, clip=True)\n",
    "mapper = cm.ScalarMappable(norm=norm, cmap=cmap)\n",
    "color_w51e = np.array([(mapper.to_rgba(v)) for v in temp_yso_arr_w51e])\n",
    "color_w51n = np.array([(mapper.to_rgba(v)) for v in temp_yso_arr_w51n])\n",
    "\n",
    "fig = plt.figure(figsize=(19,8))\n",
    "ax1 = fig.add_axes([0.1,0.15,0.4,0.77])\n",
    "ax2 = fig.add_axes([0.55,0.15,0.4,0.77])\n",
    "\n",
    "sc=ax1.scatter(w51e_b3_flux_rescaled_int.to(u.Jy).value, w51e_b6_flux_rescaled_int.to(u.Jy).value,s=0,\n",
    "              c=temp_yso_arr_w51e,vmin=0,vmax=100,cmap=cmap)\n",
    "\n",
    "def plot_flux_flux_temp(ax, b3flux, b6flux, b3fluxerr, b6fluxerr, color, idxlist, lws=[4,1,1,1],\n",
    "                        label='W51-E', markerlist=['o','^', '>', 'D'], sizelist=[20,10,10,10], uplimarr=[False,True,True, True], lolimarr=[False,False,True,True]):\n",
    "    for idx, marker, size, uplim, lolim, lw in zip(idxlist, markerlist, sizelist, uplimarr, lolimarr, lws):\n",
    "        for x, y, xerr, yerr, c,  in zip(b3flux[idx], \n",
    "                                    b6flux[idx],\n",
    "                                    b3fluxerr[idx],\n",
    "                                    b6fluxerr[idx],\n",
    "                                    color[idx], \n",
    "                                   ):\n",
    "            ax.errorbar(x,y, \n",
    "                    xerr=xerr, \n",
    "                    yerr=yerr,\n",
    "                    fmt=marker, c=c, \n",
    "                    ecolor='k', elinewidth=1, mec='k',ms=size,zorder=50)\n",
    "            ax.scatter(x,y, edgecolor='k',lw=lw, marker=marker,zorder=0,s=size**2,c=c)\n",
    "\n",
    "idxlist_w51e = [w51e_b3_res_b6_res, w51e_b3_res_b6_unres, w51e_b3_unres_b6_res , w51e_b3_unres_b6_unres   ]\n",
    "\n",
    "plot_flux_flux_temp(ax1, w51e_b3_flux_rescaled_int.to(u.Jy).value, w51e_b6_flux_rescaled_int.to(u.Jy).value, \n",
    "                    w51e_b3_flux_err_rescaled_int, w51e_b3_flux_err_rescaled_int, color_w51e, idxlist_w51e,\n",
    "                        label='W51-E',)\n",
    "idxlist_w51n = [w51n_b3_res_b6_res, w51n_b3_res_b6_unres, w51n_b3_unres_b6_res , w51n_b3_unres_b6_unres   ]\n",
    "    \n",
    "plot_flux_flux_temp(ax2, w51n_b3_flux_rescaled_int.to(u.Jy).value, w51n_b6_flux_rescaled_int.to(u.Jy).value, \n",
    "                    w51n_b3_flux_err_rescaled_int, w51n_b3_flux_err_rescaled_int, color_w51n, idxlist_w51n,\n",
    "                        label='W51-IRS2',)\n",
    "\n",
    "axins1 = inset_axes(\n",
    "    ax1,\n",
    "    width=\"30%\",  # width: 50% of parent_bbox width\n",
    "    height=\"5%\",  # height: 5%\n",
    "    loc=\"upper left\", borderpad=2.5\n",
    "    )\n",
    "axins1.xaxis.set_ticks_position(\"bottom\")\n",
    "axcbr = fig.colorbar(sc, cax=axins1, orientation=\"horizontal\", ticks=[0, 50, 100])\n",
    "axcbr.set_label('Temperature (K)')\n",
    "axins2 = inset_axes(\n",
    "    ax2,\n",
    "    width=\"30%\",  # width: 50% of parent_bbox width\n",
    "    height=\"5%\",  # height: 5%\n",
    "    loc=\"upper left\",borderpad=2.5\n",
    "    )\n",
    "axins2.xaxis.set_ticks_position(\"bottom\")\n",
    "axcbr = fig.colorbar(sc, cax=axins2, orientation=\"horizontal\", ticks=[0, 50, 100])\n",
    "axcbr.set_label('Temperature (K)')\n",
    "\n",
    "\"\"\"\n",
    "b3freq = 92982346121.91989 \n",
    "b6freq = 226691598706.70853\n",
    "spectral_indices=[-1,0,1,2,3,4]\n",
    "for si in spectral_indices:\n",
    "    ax1.plot([1e-5,1e-1],10**(np.log10([1e-5,1e-1]) - np.log10(b3freq/b6freq) * si), c='grey',ls='dashed')\n",
    "ax1.text(1e-3,3e-2,r'$\\alpha=4$',rotation=50,fontsize=14,c='gray')\n",
    "\n",
    "ax1.text(1.5e-2,5e-3,r'$\\alpha=-1$',rotation=50,fontsize=14,c='gray')\n",
    "\"\"\"\n",
    "b3flux_5 = get_bb_intensity(freq93, surf_den, 5*u.K)\n",
    "b6flux_5 = get_bb_intensity(freq225, surf_den, 5*u.K)\n",
    "\n",
    "b3flux_lowlimit_curve_over1 = get_bb_intensity(freq93, surf_den[-1], np.arange(2,400,1)*u.K)\n",
    "b6flux_lowlimit_curve_over1 = get_bb_intensity(freq225, surf_den[-1], np.arange(2,400,1)*u.K)\n",
    "b3flux_lowlimit_curve = np.concatenate((b3flux_5.value, b3flux_lowlimit_curve_over1.value))\n",
    "b6flux_lowlimit_curve = np.concatenate((b6flux_5.value, b6flux_lowlimit_curve_over1.value))\n",
    "b3flux_400 = get_bb_intensity(freq93, surf_den, 400*u.K)\n",
    "b6flux_400 = get_bb_intensity(freq225, surf_den, 400*u.K)\n",
    "\n",
    "interp = CubicSpline(b3flux_400.value, b6flux_400.value)\n",
    "\n",
    "ax1.fill_between(b3flux_lowlimit_curve, b6flux_lowlimit_curve, interp(b3flux_lowlimit_curve), color='chartreuse', alpha=0.3,label='modified blackbody T=5-400K')\n",
    "ax2.fill_between(b3flux_lowlimit_curve, b6flux_lowlimit_curve, interp(b3flux_lowlimit_curve), color='chartreuse', alpha=0.3)\n",
    "\n",
    "\n",
    "b3flux_20 = get_bb_intensity(freq93, surf_den, 20*u.K)\n",
    "b6flux_20 = get_bb_intensity(freq225, surf_den, 20*u.K)\n",
    "\n",
    "b3flux_40 = get_bb_intensity(freq93, surf_den, 40*u.K)\n",
    "b6flux_40 = get_bb_intensity(freq225, surf_den, 40*u.K)\n",
    "\n",
    "b3flux_60 = get_bb_intensity(freq93, surf_den, 60*u.K)\n",
    "b6flux_60 = get_bb_intensity(freq225, surf_den, 60*u.K)\n",
    "\n",
    "b3flux_80 = get_bb_intensity(freq93, surf_den, 80*u.K)\n",
    "b6flux_80 = get_bb_intensity(freq225, surf_den, 80*u.K)\n",
    "\n",
    "ax1.plot(b3flux_20, b6flux_20, c='r', ls='dotted',lw=3)\n",
    "ax1.plot(b3flux_40, b6flux_40, c='magenta', ls='dotted',lw=3)\n",
    "ax1.plot(b3flux_60, b6flux_60, c='orange', ls='dotted',lw=3)\n",
    "ax1.plot(b3flux_80, b6flux_80, c='dodgerblue', ls='dotted',lw=3)\n",
    "\n",
    "ax2.plot(b3flux_20, b6flux_20, c='r', ls='dotted',lw=3)\n",
    "ax2.plot(b3flux_40, b6flux_40, c='magenta', ls='dotted',lw=3)\n",
    "ax2.plot(b3flux_60, b6flux_60, c='orange', ls='dotted',lw=3)\n",
    "ax2.plot(b3flux_80, b6flux_80, c='dodgerblue', ls='dotted',lw=3)\n",
    "ax2.text(1.2*b3flux_20[-1].value,0.95*b6flux_20[-1].value, '20K', fontsize=20,color='r')\n",
    "ax2.text(1.2*b3flux_40[-1].value,0.95*b6flux_40[-1].value, '40K', fontsize=20,color='magenta')\n",
    "\n",
    "ax2.text(1.2*b3flux_60[-1].value,0.95*b6flux_60[-1].value, '60K', fontsize=20,color='orange')\n",
    "ax2.text(1.2*b3flux_80[-1].value,1.05*b6flux_80[-1].value, '80K', fontsize=20,color='dodgerblue')\n",
    "\n",
    "#ax1.text(1.5e-3,7e-3,r'$T=100\\,{\\rm K}$',c='dodgerblue',fontsize=13)\n",
    "#ax1.text(8e-4,3.5e-3,r'$T=50\\,{\\rm K}$',c='magenta',fontsize=13)\n",
    "#ax1.text(3e-4,1e-3,r'$T=20\\,{\\rm K}$',c='r',fontsize=13)\n",
    "ax1.set_xscale('log')\n",
    "ax1.set_yscale('log')\n",
    "ax1.set_xlabel('3mm surface brightness (Jy/arcsec$^2$)')\n",
    "ax1.set_ylabel('1.3mm surface brightness (Jy/arcsec$^2$)')\n",
    "#ax1.set_xlabel(r'$S_{\\rm 3mm}$ $({\\rm Jy\\,arcsec^{-2}})$')\n",
    "#ax1.set_ylabel(r'$S_{\\rm 1.3mm, conv}$ $({\\rm Jy\\,arcsec^{-2}})$')\n",
    "ax2.set_xscale('log')\n",
    "ax2.set_yscale('log')\n",
    "ax2.set_xlabel('3mm surface brightness (Jy/arcsec$^2$)')\n",
    "#ax2.set_xlabel(r'$S_{\\rm 3mm}$ $({\\rm Jy\\,arcsec^{-2}})$')\n",
    "#ax2.set_ylabel(r'$S_{\\rm int, 1.3mm}$ (Jy)')\n",
    "\n",
    "ax1.set_title('W51-E', fontsize=40)\n",
    "ax2.set_title('W51-IRS2', fontsize=40)\n",
    "ax1.set_xlim(1e-2,5e1)\n",
    "ax1.set_ylim(5e-2,1e1)\n",
    "ax2.set_xlim(1e-2,5e1)\n",
    "ax2.set_ylim(5e-2,1e1)\n",
    "\n",
    "#ax1.set_xlim(1e9,1e13)\n",
    "#ax1.set_ylim(1e10,5e12)\n",
    "#ax2.set_xlim(1e9,1e13)\n",
    "#ax2.set_ylim(1e10,5e12)\n",
    "ax2.set_yticks([])\n",
    "b3freq = 92982346121.91989 \n",
    "b6freq = 226691598706.70853\n",
    "spectral_indices=[-1,0,1,2,3,4]\n",
    "for si in spectral_indices:\n",
    "    ax1.plot([1e-2,1e2],10**(np.log10([1e-2,1e2]) - np.log10(b3freq/b6freq) * si), c='grey',ls='dashed')\n",
    "    ax2.plot([1e-2,1e2],10**(np.log10([1e-2,1e2]) - np.log10(b3freq/b6freq) * si), c='grey',ls='dashed')\n",
    "\n",
    "ax1.scatter([-1,-1],[-1,-1], c=mapper.to_rgba(10), s=20**2, lw=4, marker='o',label='resolved in both bands',edgecolor='k')\n",
    "ax1.scatter([-1,-1],[-1,-1], c=mapper.to_rgba(10), s=10**2, lw=1, marker='^',label='resolved in Band 3 only',edgecolor='k') \n",
    "ax1.scatter([-1,-1],[-1,-1], c=mapper.to_rgba(10), s=10**2, lw=1, marker='>',label='resolved in Band 6 only',edgecolor='k') \n",
    "ax1.scatter([-1,-1],[-1,-1], c=mapper.to_rgba(10), s=10**2, lw=1, marker='D',label='unresolved in both bands',edgecolor='k') \n",
    "\n",
    "ax1.legend(fontsize=16, frameon=False, loc='lower right')\n",
    "    \n",
    "    \n",
    "\n",
    "ax1.text(0.03,1.5,r'$\\alpha=4$',rotation=55,fontsize=20)\n",
    "ax1.text(1,0.3,r'$\\alpha=-1$',rotation=55,fontsize=20)\n",
    "ax2.text(0.03,1.5,r'$\\alpha=4$',rotation=55,fontsize=20)\n",
    "ax2.text(1,0.3,r'$\\alpha=-1$',rotation=55,fontsize=20)\n",
    "plt.savefig('fluxflux_temp.png')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 19,
   "id": "dd223640",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "19.202039404707627 30.456783222661855\n",
      "19.202039404707627 30.456783222661855\n",
      "16.650242439499028 30.10467021564039\n",
      "36\n",
      "125 43 94 6\n"
     ]
    },
    {
     "data": {
      "image/png": "",
      "text/plain": [
       "<Figure size 576x576 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "fig = plt.figure(figsize=(8,8))\n",
    "ax3 = fig.add_axes([0.15,0.15,0.83,0.83])\n",
    "tempbin = np.linspace(0,70,15)\n",
    "ax3.hist(temp_yso_arr_w51e[w51e_b3_res_b6_res], bins=tempbin,  histtype='step', color=sns.color_palette('colorblind')[0], label='W51-E (resolved)',lw=4, hatch='/')\n",
    "ax3.hist(temp_yso_arr_w51n[w51n_b3_res_b6_res], bins=tempbin,  histtype='step',color=sns.color_palette('colorblind')[1], label='W51-IRS2 (resolved)',hatch='\\\\',lw=4)\n",
    "\n",
    "unresolveds_w51e = np.logical_or(np.logical_or(w51e_b3_res_b6_unres, w51e_b3_unres_b6_res), w51e_b3_unres_b6_unres)\n",
    "unresolveds_w51n = np.logical_or(np.logical_or(w51n_b3_res_b6_unres, w51n_b3_unres_b6_res), w51n_b3_unres_b6_unres)\n",
    "ax3.hist(temp_yso_arr_w51e[unresolveds_w51e], bins=tempbin,   facecolor='cyan', alpha=0.4,label='W51-E (unresolved)')\n",
    "ax3.hist(temp_yso_arr_w51n[unresolveds_w51n], bins=tempbin,  facecolor='orange', alpha=0.4,label='W51-IRS2 (unresolved)')\n",
    "\n",
    "print(np.nanmean(temp_yso_arr_w51e), np.nanmean(temp_yso_arr_w51n))\n",
    "print(np.nanmean(temp_yso_arr_w51e), np.nanmean(temp_yso_arr_w51n))\n",
    "print(np.nanmedian(temp_yso_arr_w51e), np.nanmedian(temp_yso_arr_w51n))\n",
    "\n",
    "print(np.nanargmax(w51e_b3_flux_rescaled_int.to(u.Jy).value))\n",
    "print(len(temp_yso_arr_w51e), len(np.where(np.isfinite(temp_yso_arr_w51e))[0]), len(temp_yso_arr_w51n),len(np.where(np.isfinite(temp_yso_arr_w51n))[0]))\n",
    "ax3.legend(fontsize=20, frameon=False)\n",
    "ax3.set_xlabel('modified blackbody temperature (K)')\n",
    "ax3.set_ylabel('number')\n",
    "#ax3.set_yticks([5,10,15])\n",
    "\n",
    "plt.savefig('temp_hist.png')\n",
    "\n",
    "\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 20,
   "id": "66091885",
   "metadata": {},
   "outputs": [
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "*c* argument looks like a single numeric RGB or RGBA sequence, which should be avoided as value-mapping will have precedence in case its length matches with *x* & *y*.  Please use the *color* keyword-argument or provide a 2D array with a single row if you intend to specify the same RGB or RGBA value for all points.\n",
      "*c* argument looks like a single numeric RGB or RGBA sequence, which should be avoided as value-mapping will have precedence in case its length matches with *x* & *y*.  Please use the *color* keyword-argument or provide a 2D array with a single row if you intend to specify the same RGB or RGBA value for all points.\n",
      "*c* argument looks like a single numeric RGB or RGBA sequence, which should be avoided as value-mapping will have precedence in case its length matches with *x* & *y*.  Please use the *color* keyword-argument or provide a 2D array with a single row if you intend to specify the same RGB or RGBA value for all points.\n",
      "*c* argument looks like a single numeric RGB or RGBA sequence, which should be avoided as value-mapping will have precedence in case its length matches with *x* & *y*.  Please use the *color* keyword-argument or provide a 2D array with a single row if you intend to specify the same RGB or RGBA value for all points.\n",
      "*c* argument looks like a single numeric RGB or RGBA sequence, which should be avoided as value-mapping will have precedence in case its length matches with *x* & *y*.  Please use the *color* keyword-argument or provide a 2D array with a single row if you intend to specify the same RGB or RGBA value for all points.\n",
      "*c* argument looks like a single numeric RGB or RGBA sequence, which should be avoided as value-mapping will have precedence in case its length matches with *x* & *y*.  Please use the *color* keyword-argument or provide a 2D array with a single row if you intend to specify the same RGB or RGBA value for all points.\n",
      "*c* argument looks like a single numeric RGB or RGBA sequence, which should be avoided as value-mapping will have precedence in case its length matches with *x* & *y*.  Please use the *color* keyword-argument or provide a 2D array with a single row if you intend to specify the same RGB or RGBA value for all points.\n",
      "*c* argument looks like a single numeric RGB or RGBA sequence, which should be avoided as value-mapping will have precedence in case its length matches with *x* & *y*.  Please use the *color* keyword-argument or provide a 2D array with a single row if you intend to specify the same RGB or RGBA value for all points.\n",
      "*c* argument looks like a single numeric RGB or RGBA sequence, which should be avoided as value-mapping will have precedence in case its length matches with *x* & *y*.  Please use the *color* keyword-argument or provide a 2D array with a single row if you intend to specify the same RGB or RGBA value for all points.\n",
      "*c* argument looks like a single numeric RGB or RGBA sequence, which should be avoided as value-mapping will have precedence in case its length matches with *x* & *y*.  Please use the *color* keyword-argument or provide a 2D array with a single row if you intend to specify the same RGB or RGBA value for all points.\n",
      "*c* argument looks like a single numeric RGB or RGBA sequence, which should be avoided as value-mapping will have precedence in case its length matches with *x* & *y*.  Please use the *color* keyword-argument or provide a 2D array with a single row if you intend to specify the same RGB or RGBA value for all points.\n",
      "*c* argument looks like a single numeric RGB or RGBA sequence, which should be avoided as value-mapping will have precedence in case its length matches with *x* & *y*.  Please use the *color* keyword-argument or provide a 2D array with a single row if you intend to specify the same RGB or RGBA value for all points.\n",
      "*c* argument looks like a single numeric RGB or RGBA sequence, which should be avoided as value-mapping will have precedence in case its length matches with *x* & *y*.  Please use the *color* keyword-argument or provide a 2D array with a single row if you intend to specify the same RGB or RGBA value for all points.\n",
      "*c* argument looks like a single numeric RGB or RGBA sequence, which should be avoided as value-mapping will have precedence in case its length matches with *x* & *y*.  Please use the *color* keyword-argument or provide a 2D array with a single row if you intend to specify the same RGB or RGBA value for all points.\n",
      "*c* argument looks like a single numeric RGB or RGBA sequence, which should be avoided as value-mapping will have precedence in case its length matches with *x* & *y*.  Please use the *color* keyword-argument or provide a 2D array with a single row if you intend to specify the same RGB or RGBA value for all points.\n",
      "*c* argument looks like a single numeric RGB or RGBA sequence, which should be avoided as value-mapping will have precedence in case its length matches with *x* & *y*.  Please use the *color* keyword-argument or provide a 2D array with a single row if you intend to specify the same RGB or RGBA value for all points.\n",
      "*c* argument looks like a single numeric RGB or RGBA sequence, which should be avoided as value-mapping will have precedence in case its length matches with *x* & *y*.  Please use the *color* keyword-argument or provide a 2D array with a single row if you intend to specify the same RGB or RGBA value for all points.\n",
      "*c* argument looks like a single numeric RGB or RGBA sequence, which should be avoided as value-mapping will have precedence in case its length matches with *x* & *y*.  Please use the *color* keyword-argument or provide a 2D array with a single row if you intend to specify the same RGB or RGBA value for all points.\n",
      "*c* argument looks like a single numeric RGB or RGBA sequence, which should be avoided as value-mapping will have precedence in case its length matches with *x* & *y*.  Please use the *color* keyword-argument or provide a 2D array with a single row if you intend to specify the same RGB or RGBA value for all points.\n",
      "*c* argument looks like a single numeric RGB or RGBA sequence, which should be avoided as value-mapping will have precedence in case its length matches with *x* & *y*.  Please use the *color* keyword-argument or provide a 2D array with a single row if you intend to specify the same RGB or RGBA value for all points.\n",
      "*c* argument looks like a single numeric RGB or RGBA sequence, which should be avoided as value-mapping will have precedence in case its length matches with *x* & *y*.  Please use the *color* keyword-argument or provide a 2D array with a single row if you intend to specify the same RGB or RGBA value for all points.\n",
      "*c* argument looks like a single numeric RGB or RGBA sequence, which should be avoided as value-mapping will have precedence in case its length matches with *x* & *y*.  Please use the *color* keyword-argument or provide a 2D array with a single row if you intend to specify the same RGB or RGBA value for all points.\n",
      "*c* argument looks like a single numeric RGB or RGBA sequence, which should be avoided as value-mapping will have precedence in case its length matches with *x* & *y*.  Please use the *color* keyword-argument or provide a 2D array with a single row if you intend to specify the same RGB or RGBA value for all points.\n",
      "*c* argument looks like a single numeric RGB or RGBA sequence, which should be avoided as value-mapping will have precedence in case its length matches with *x* & *y*.  Please use the *color* keyword-argument or provide a 2D array with a single row if you intend to specify the same RGB or RGBA value for all points.\n",
      "*c* argument looks like a single numeric RGB or RGBA sequence, which should be avoided as value-mapping will have precedence in case its length matches with *x* & *y*.  Please use the *color* keyword-argument or provide a 2D array with a single row if you intend to specify the same RGB or RGBA value for all points.\n",
      "*c* argument looks like a single numeric RGB or RGBA sequence, which should be avoided as value-mapping will have precedence in case its length matches with *x* & *y*.  Please use the *color* keyword-argument or provide a 2D array with a single row if you intend to specify the same RGB or RGBA value for all points.\n",
      "*c* argument looks like a single numeric RGB or RGBA sequence, which should be avoided as value-mapping will have precedence in case its length matches with *x* & *y*.  Please use the *color* keyword-argument or provide a 2D array with a single row if you intend to specify the same RGB or RGBA value for all points.\n",
      "*c* argument looks like a single numeric RGB or RGBA sequence, which should be avoided as value-mapping will have precedence in case its length matches with *x* & *y*.  Please use the *color* keyword-argument or provide a 2D array with a single row if you intend to specify the same RGB or RGBA value for all points.\n",
      "*c* argument looks like a single numeric RGB or RGBA sequence, which should be avoided as value-mapping will have precedence in case its length matches with *x* & *y*.  Please use the *color* keyword-argument or provide a 2D array with a single row if you intend to specify the same RGB or RGBA value for all points.\n",
      "*c* argument looks like a single numeric RGB or RGBA sequence, which should be avoided as value-mapping will have precedence in case its length matches with *x* & *y*.  Please use the *color* keyword-argument or provide a 2D array with a single row if you intend to specify the same RGB or RGBA value for all points.\n",
      "*c* argument looks like a single numeric RGB or RGBA sequence, which should be avoided as value-mapping will have precedence in case its length matches with *x* & *y*.  Please use the *color* keyword-argument or provide a 2D array with a single row if you intend to specify the same RGB or RGBA value for all points.\n",
      "*c* argument looks like a single numeric RGB or RGBA sequence, which should be avoided as value-mapping will have precedence in case its length matches with *x* & *y*.  Please use the *color* keyword-argument or provide a 2D array with a single row if you intend to specify the same RGB or RGBA value for all points.\n",
      "*c* argument looks like a single numeric RGB or RGBA sequence, which should be avoided as value-mapping will have precedence in case its length matches with *x* & *y*.  Please use the *color* keyword-argument or provide a 2D array with a single row if you intend to specify the same RGB or RGBA value for all points.\n",
      "*c* argument looks like a single numeric RGB or RGBA sequence, which should be avoided as value-mapping will have precedence in case its length matches with *x* & *y*.  Please use the *color* keyword-argument or provide a 2D array with a single row if you intend to specify the same RGB or RGBA value for all points.\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "[16.65024244         nan         nan 18.80793958 53.20947614 11.5970394\n",
      "         nan         nan 58.0132205          nan         nan 23.4388822\n",
      "         nan         nan 10.32617795 12.82175851 18.28869694  8.60450207\n",
      " 23.64799511         nan         nan 17.41143352         nan  5.65496381\n",
      " 24.45805942 40.85051525  5.04413615         nan         nan 33.6047277\n",
      "         nan         nan  8.1991444  17.00844808         nan 17.67059517\n",
      "         nan         nan  7.0735883          nan         nan 12.43719812\n",
      " 13.48076162         nan  9.21741186 38.06618452         nan         nan\n",
      " 12.17121824 13.93859095 21.10307646         nan 30.31631075 28.28250065\n",
      " 20.68303958 23.92731761 12.0686564          nan 10.09486033 40.3386572\n",
      "  8.74018949 11.21601834         nan  9.39718486 16.4251605  18.66600773\n",
      " 10.34000731 20.5843767  11.81142257         nan         nan         nan\n",
      "         nan         nan         nan         nan         nan         nan\n",
      "         nan         nan         nan         nan         nan         nan\n",
      "         nan         nan         nan         nan         nan         nan\n",
      "         nan         nan         nan         nan         nan         nan\n",
      "         nan         nan         nan         nan         nan         nan\n",
      "         nan         nan         nan         nan         nan         nan\n",
      "         nan         nan         nan         nan         nan         nan\n",
      "         nan         nan         nan         nan         nan         nan\n",
      "         nan         nan         nan         nan         nan]\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "*c* argument looks like a single numeric RGB or RGBA sequence, which should be avoided as value-mapping will have precedence in case its length matches with *x* & *y*.  Please use the *color* keyword-argument or provide a 2D array with a single row if you intend to specify the same RGB or RGBA value for all points.\n",
      "*c* argument looks like a single numeric RGB or RGBA sequence, which should be avoided as value-mapping will have precedence in case its length matches with *x* & *y*.  Please use the *color* keyword-argument or provide a 2D array with a single row if you intend to specify the same RGB or RGBA value for all points.\n",
      "*c* argument looks like a single numeric RGB or RGBA sequence, which should be avoided as value-mapping will have precedence in case its length matches with *x* & *y*.  Please use the *color* keyword-argument or provide a 2D array with a single row if you intend to specify the same RGB or RGBA value for all points.\n",
      "*c* argument looks like a single numeric RGB or RGBA sequence, which should be avoided as value-mapping will have precedence in case its length matches with *x* & *y*.  Please use the *color* keyword-argument or provide a 2D array with a single row if you intend to specify the same RGB or RGBA value for all points.\n",
      "*c* argument looks like a single numeric RGB or RGBA sequence, which should be avoided as value-mapping will have precedence in case its length matches with *x* & *y*.  Please use the *color* keyword-argument or provide a 2D array with a single row if you intend to specify the same RGB or RGBA value for all points.\n",
      "*c* argument looks like a single numeric RGB or RGBA sequence, which should be avoided as value-mapping will have precedence in case its length matches with *x* & *y*.  Please use the *color* keyword-argument or provide a 2D array with a single row if you intend to specify the same RGB or RGBA value for all points.\n",
      "*c* argument looks like a single numeric RGB or RGBA sequence, which should be avoided as value-mapping will have precedence in case its length matches with *x* & *y*.  Please use the *color* keyword-argument or provide a 2D array with a single row if you intend to specify the same RGB or RGBA value for all points.\n",
      "*c* argument looks like a single numeric RGB or RGBA sequence, which should be avoided as value-mapping will have precedence in case its length matches with *x* & *y*.  Please use the *color* keyword-argument or provide a 2D array with a single row if you intend to specify the same RGB or RGBA value for all points.\n",
      "*c* argument looks like a single numeric RGB or RGBA sequence, which should be avoided as value-mapping will have precedence in case its length matches with *x* & *y*.  Please use the *color* keyword-argument or provide a 2D array with a single row if you intend to specify the same RGB or RGBA value for all points.\n",
      "*c* argument looks like a single numeric RGB or RGBA sequence, which should be avoided as value-mapping will have precedence in case its length matches with *x* & *y*.  Please use the *color* keyword-argument or provide a 2D array with a single row if you intend to specify the same RGB or RGBA value for all points.\n",
      "*c* argument looks like a single numeric RGB or RGBA sequence, which should be avoided as value-mapping will have precedence in case its length matches with *x* & *y*.  Please use the *color* keyword-argument or provide a 2D array with a single row if you intend to specify the same RGB or RGBA value for all points.\n",
      "*c* argument looks like a single numeric RGB or RGBA sequence, which should be avoided as value-mapping will have precedence in case its length matches with *x* & *y*.  Please use the *color* keyword-argument or provide a 2D array with a single row if you intend to specify the same RGB or RGBA value for all points.\n",
      "*c* argument looks like a single numeric RGB or RGBA sequence, which should be avoided as value-mapping will have precedence in case its length matches with *x* & *y*.  Please use the *color* keyword-argument or provide a 2D array with a single row if you intend to specify the same RGB or RGBA value for all points.\n",
      "*c* argument looks like a single numeric RGB or RGBA sequence, which should be avoided as value-mapping will have precedence in case its length matches with *x* & *y*.  Please use the *color* keyword-argument or provide a 2D array with a single row if you intend to specify the same RGB or RGBA value for all points.\n",
      "*c* argument looks like a single numeric RGB or RGBA sequence, which should be avoided as value-mapping will have precedence in case its length matches with *x* & *y*.  Please use the *color* keyword-argument or provide a 2D array with a single row if you intend to specify the same RGB or RGBA value for all points.\n",
      "*c* argument looks like a single numeric RGB or RGBA sequence, which should be avoided as value-mapping will have precedence in case its length matches with *x* & *y*.  Please use the *color* keyword-argument or provide a 2D array with a single row if you intend to specify the same RGB or RGBA value for all points.\n",
      "*c* argument looks like a single numeric RGB or RGBA sequence, which should be avoided as value-mapping will have precedence in case its length matches with *x* & *y*.  Please use the *color* keyword-argument or provide a 2D array with a single row if you intend to specify the same RGB or RGBA value for all points.\n",
      "*c* argument looks like a single numeric RGB or RGBA sequence, which should be avoided as value-mapping will have precedence in case its length matches with *x* & *y*.  Please use the *color* keyword-argument or provide a 2D array with a single row if you intend to specify the same RGB or RGBA value for all points.\n",
      "*c* argument looks like a single numeric RGB or RGBA sequence, which should be avoided as value-mapping will have precedence in case its length matches with *x* & *y*.  Please use the *color* keyword-argument or provide a 2D array with a single row if you intend to specify the same RGB or RGBA value for all points.\n",
      "*c* argument looks like a single numeric RGB or RGBA sequence, which should be avoided as value-mapping will have precedence in case its length matches with *x* & *y*.  Please use the *color* keyword-argument or provide a 2D array with a single row if you intend to specify the same RGB or RGBA value for all points.\n",
      "*c* argument looks like a single numeric RGB or RGBA sequence, which should be avoided as value-mapping will have precedence in case its length matches with *x* & *y*.  Please use the *color* keyword-argument or provide a 2D array with a single row if you intend to specify the same RGB or RGBA value for all points.\n",
      "*c* argument looks like a single numeric RGB or RGBA sequence, which should be avoided as value-mapping will have precedence in case its length matches with *x* & *y*.  Please use the *color* keyword-argument or provide a 2D array with a single row if you intend to specify the same RGB or RGBA value for all points.\n",
      "*c* argument looks like a single numeric RGB or RGBA sequence, which should be avoided as value-mapping will have precedence in case its length matches with *x* & *y*.  Please use the *color* keyword-argument or provide a 2D array with a single row if you intend to specify the same RGB or RGBA value for all points.\n",
      "*c* argument looks like a single numeric RGB or RGBA sequence, which should be avoided as value-mapping will have precedence in case its length matches with *x* & *y*.  Please use the *color* keyword-argument or provide a 2D array with a single row if you intend to specify the same RGB or RGBA value for all points.\n",
      "*c* argument looks like a single numeric RGB or RGBA sequence, which should be avoided as value-mapping will have precedence in case its length matches with *x* & *y*.  Please use the *color* keyword-argument or provide a 2D array with a single row if you intend to specify the same RGB or RGBA value for all points.\n",
      "*c* argument looks like a single numeric RGB or RGBA sequence, which should be avoided as value-mapping will have precedence in case its length matches with *x* & *y*.  Please use the *color* keyword-argument or provide a 2D array with a single row if you intend to specify the same RGB or RGBA value for all points.\n",
      "*c* argument looks like a single numeric RGB or RGBA sequence, which should be avoided as value-mapping will have precedence in case its length matches with *x* & *y*.  Please use the *color* keyword-argument or provide a 2D array with a single row if you intend to specify the same RGB or RGBA value for all points.\n",
      "*c* argument looks like a single numeric RGB or RGBA sequence, which should be avoided as value-mapping will have precedence in case its length matches with *x* & *y*.  Please use the *color* keyword-argument or provide a 2D array with a single row if you intend to specify the same RGB or RGBA value for all points.\n",
      "*c* argument looks like a single numeric RGB or RGBA sequence, which should be avoided as value-mapping will have precedence in case its length matches with *x* & *y*.  Please use the *color* keyword-argument or provide a 2D array with a single row if you intend to specify the same RGB or RGBA value for all points.\n",
      "*c* argument looks like a single numeric RGB or RGBA sequence, which should be avoided as value-mapping will have precedence in case its length matches with *x* & *y*.  Please use the *color* keyword-argument or provide a 2D array with a single row if you intend to specify the same RGB or RGBA value for all points.\n",
      "*c* argument looks like a single numeric RGB or RGBA sequence, which should be avoided as value-mapping will have precedence in case its length matches with *x* & *y*.  Please use the *color* keyword-argument or provide a 2D array with a single row if you intend to specify the same RGB or RGBA value for all points.\n",
      "*c* argument looks like a single numeric RGB or RGBA sequence, which should be avoided as value-mapping will have precedence in case its length matches with *x* & *y*.  Please use the *color* keyword-argument or provide a 2D array with a single row if you intend to specify the same RGB or RGBA value for all points.\n",
      "*c* argument looks like a single numeric RGB or RGBA sequence, which should be avoided as value-mapping will have precedence in case its length matches with *x* & *y*.  Please use the *color* keyword-argument or provide a 2D array with a single row if you intend to specify the same RGB or RGBA value for all points.\n",
      "*c* argument looks like a single numeric RGB or RGBA sequence, which should be avoided as value-mapping will have precedence in case its length matches with *x* & *y*.  Please use the *color* keyword-argument or provide a 2D array with a single row if you intend to specify the same RGB or RGBA value for all points.\n",
      "*c* argument looks like a single numeric RGB or RGBA sequence, which should be avoided as value-mapping will have precedence in case its length matches with *x* & *y*.  Please use the *color* keyword-argument or provide a 2D array with a single row if you intend to specify the same RGB or RGBA value for all points.\n",
      "*c* argument looks like a single numeric RGB or RGBA sequence, which should be avoided as value-mapping will have precedence in case its length matches with *x* & *y*.  Please use the *color* keyword-argument or provide a 2D array with a single row if you intend to specify the same RGB or RGBA value for all points.\n",
      "*c* argument looks like a single numeric RGB or RGBA sequence, which should be avoided as value-mapping will have precedence in case its length matches with *x* & *y*.  Please use the *color* keyword-argument or provide a 2D array with a single row if you intend to specify the same RGB or RGBA value for all points.\n",
      "*c* argument looks like a single numeric RGB or RGBA sequence, which should be avoided as value-mapping will have precedence in case its length matches with *x* & *y*.  Please use the *color* keyword-argument or provide a 2D array with a single row if you intend to specify the same RGB or RGBA value for all points.\n",
      "*c* argument looks like a single numeric RGB or RGBA sequence, which should be avoided as value-mapping will have precedence in case its length matches with *x* & *y*.  Please use the *color* keyword-argument or provide a 2D array with a single row if you intend to specify the same RGB or RGBA value for all points.\n",
      "*c* argument looks like a single numeric RGB or RGBA sequence, which should be avoided as value-mapping will have precedence in case its length matches with *x* & *y*.  Please use the *color* keyword-argument or provide a 2D array with a single row if you intend to specify the same RGB or RGBA value for all points.\n",
      "*c* argument looks like a single numeric RGB or RGBA sequence, which should be avoided as value-mapping will have precedence in case its length matches with *x* & *y*.  Please use the *color* keyword-argument or provide a 2D array with a single row if you intend to specify the same RGB or RGBA value for all points.\n",
      "*c* argument looks like a single numeric RGB or RGBA sequence, which should be avoided as value-mapping will have precedence in case its length matches with *x* & *y*.  Please use the *color* keyword-argument or provide a 2D array with a single row if you intend to specify the same RGB or RGBA value for all points.\n",
      "*c* argument looks like a single numeric RGB or RGBA sequence, which should be avoided as value-mapping will have precedence in case its length matches with *x* & *y*.  Please use the *color* keyword-argument or provide a 2D array with a single row if you intend to specify the same RGB or RGBA value for all points.\n",
      "*c* argument looks like a single numeric RGB or RGBA sequence, which should be avoided as value-mapping will have precedence in case its length matches with *x* & *y*.  Please use the *color* keyword-argument or provide a 2D array with a single row if you intend to specify the same RGB or RGBA value for all points.\n",
      "*c* argument looks like a single numeric RGB or RGBA sequence, which should be avoided as value-mapping will have precedence in case its length matches with *x* & *y*.  Please use the *color* keyword-argument or provide a 2D array with a single row if you intend to specify the same RGB or RGBA value for all points.\n",
      "*c* argument looks like a single numeric RGB or RGBA sequence, which should be avoided as value-mapping will have precedence in case its length matches with *x* & *y*.  Please use the *color* keyword-argument or provide a 2D array with a single row if you intend to specify the same RGB or RGBA value for all points.\n",
      "*c* argument looks like a single numeric RGB or RGBA sequence, which should be avoided as value-mapping will have precedence in case its length matches with *x* & *y*.  Please use the *color* keyword-argument or provide a 2D array with a single row if you intend to specify the same RGB or RGBA value for all points.\n",
      "*c* argument looks like a single numeric RGB or RGBA sequence, which should be avoided as value-mapping will have precedence in case its length matches with *x* & *y*.  Please use the *color* keyword-argument or provide a 2D array with a single row if you intend to specify the same RGB or RGBA value for all points.\n",
      "*c* argument looks like a single numeric RGB or RGBA sequence, which should be avoided as value-mapping will have precedence in case its length matches with *x* & *y*.  Please use the *color* keyword-argument or provide a 2D array with a single row if you intend to specify the same RGB or RGBA value for all points.\n",
      "*c* argument looks like a single numeric RGB or RGBA sequence, which should be avoided as value-mapping will have precedence in case its length matches with *x* & *y*.  Please use the *color* keyword-argument or provide a 2D array with a single row if you intend to specify the same RGB or RGBA value for all points.\n",
      "*c* argument looks like a single numeric RGB or RGBA sequence, which should be avoided as value-mapping will have precedence in case its length matches with *x* & *y*.  Please use the *color* keyword-argument or provide a 2D array with a single row if you intend to specify the same RGB or RGBA value for all points.\n",
      "*c* argument looks like a single numeric RGB or RGBA sequence, which should be avoided as value-mapping will have precedence in case its length matches with *x* & *y*.  Please use the *color* keyword-argument or provide a 2D array with a single row if you intend to specify the same RGB or RGBA value for all points.\n",
      "*c* argument looks like a single numeric RGB or RGBA sequence, which should be avoided as value-mapping will have precedence in case its length matches with *x* & *y*.  Please use the *color* keyword-argument or provide a 2D array with a single row if you intend to specify the same RGB or RGBA value for all points.\n",
      "*c* argument looks like a single numeric RGB or RGBA sequence, which should be avoided as value-mapping will have precedence in case its length matches with *x* & *y*.  Please use the *color* keyword-argument or provide a 2D array with a single row if you intend to specify the same RGB or RGBA value for all points.\n",
      "*c* argument looks like a single numeric RGB or RGBA sequence, which should be avoided as value-mapping will have precedence in case its length matches with *x* & *y*.  Please use the *color* keyword-argument or provide a 2D array with a single row if you intend to specify the same RGB or RGBA value for all points.\n",
      "*c* argument looks like a single numeric RGB or RGBA sequence, which should be avoided as value-mapping will have precedence in case its length matches with *x* & *y*.  Please use the *color* keyword-argument or provide a 2D array with a single row if you intend to specify the same RGB or RGBA value for all points.\n",
      "*c* argument looks like a single numeric RGB or RGBA sequence, which should be avoided as value-mapping will have precedence in case its length matches with *x* & *y*.  Please use the *color* keyword-argument or provide a 2D array with a single row if you intend to specify the same RGB or RGBA value for all points.\n",
      "*c* argument looks like a single numeric RGB or RGBA sequence, which should be avoided as value-mapping will have precedence in case its length matches with *x* & *y*.  Please use the *color* keyword-argument or provide a 2D array with a single row if you intend to specify the same RGB or RGBA value for all points.\n",
      "*c* argument looks like a single numeric RGB or RGBA sequence, which should be avoided as value-mapping will have precedence in case its length matches with *x* & *y*.  Please use the *color* keyword-argument or provide a 2D array with a single row if you intend to specify the same RGB or RGBA value for all points.\n",
      "*c* argument looks like a single numeric RGB or RGBA sequence, which should be avoided as value-mapping will have precedence in case its length matches with *x* & *y*.  Please use the *color* keyword-argument or provide a 2D array with a single row if you intend to specify the same RGB or RGBA value for all points.\n",
      "*c* argument looks like a single numeric RGB or RGBA sequence, which should be avoided as value-mapping will have precedence in case its length matches with *x* & *y*.  Please use the *color* keyword-argument or provide a 2D array with a single row if you intend to specify the same RGB or RGBA value for all points.\n",
      "*c* argument looks like a single numeric RGB or RGBA sequence, which should be avoided as value-mapping will have precedence in case its length matches with *x* & *y*.  Please use the *color* keyword-argument or provide a 2D array with a single row if you intend to specify the same RGB or RGBA value for all points.\n"
     ]
    },
    {
     "data": {
      "image/png": "",
      "text/plain": [
       "<Figure size 1368x576 with 4 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "import seaborn as sns\n",
    "import matplotlib\n",
    "import matplotlib.cm as cm\n",
    "from scipy.interpolate import CubicSpline\n",
    "\n",
    "temp_yso_arr_w51e = np.array(temp_yso_arr_w51e)\n",
    "temp_yso_arr_w51n = np.array(temp_yso_arr_w51n)\n",
    "print(temp_yso_arr_w51e)\n",
    "#temp_yso_arr_w51e[temp_yso_arr_w51e>500]=np.nan\n",
    "#temp_yso_arr_w51n[temp_yso_arr_w51n>500]=np.nan\n",
    "\n",
    "#nonan_w51e = np.where(np.isfinite(temp_yso_arr_w51e))\n",
    "#nonan_w51n = np.where(np.isfinite(temp_yso_arr_w51n))\n",
    "\n",
    "#nan_w51e = np.where(~np.isfinite(temp_yso_arr_w51e))\n",
    "#nan_w51n = np.where(~np.isfinite(temp_yso_arr_w51n))\n",
    "\n",
    "\n",
    "\"\"\"\n",
    "w51e_b3_flux_rescaled_err_nonan = np.array(list(zip(w51e_b3_flux_rescaled_int.to(u.Jy).value[nonan_w51e]-w51e_b3_flux_low_rescaled_int.to(u.Jy).value[nonan_w51e],\n",
    "                                              w51e_b3_flux_upp_rescaled_int.to(u.Jy).value[nonan_w51e]-w51e_b3_flux_rescaled_int.to(u.Jy).value[nonan_w51e])))\n",
    "w51e_b3_flux_rescaled_err_nonan = np.array([[w51e_b3_flux_rescaled_int.to(u.Jy).value[nonan_w51e]-w51e_b3_flux_low_rescaled_int.to(u.Jy).value[nonan_w51e]\n",
    "                                             ,w51e_b3_flux_upp_rescaled_int.to(u.Jy).value[nonan_w51e]-w51e_b3_flux_rescaled_int.to(u.Jy).value[nonan_w51e]]]).T\n",
    "\n",
    "w51e_b6_flux_rescaled_err_nonan = np.array(list(zip(w51e_b6_flux_rescaled_int.to(u.Jy).value[nonan_w51e]-w51e_b6_flux_low_rescaled_int.to(u.Jy).value[nonan_w51e],\n",
    "                                              w51e_b6_flux_upp_rescaled_int.to(u.Jy).value[nonan_w51e]-w51e_b6_flux_rescaled_int.to(u.Jy).value[nonan_w51e]))).T\n",
    "w51e_b6_flux_rescaled_err_nonan = np.array([[w51e_b6_flux_rescaled_int.to(u.Jy).value[nonan_w51e]-w51e_b6_flux_low_rescaled_int.to(u.Jy).value[nonan_w51e]\n",
    "                                             ,w51e_b6_flux_upp_rescaled_int.to(u.Jy).value[nonan_w51e]-w51e_b6_flux_rescaled_int.to(u.Jy).value[nonan_w51e]]]).T\n",
    "\n",
    "w51n_b3_flux_rescaled_err_nonan = np.array(list(zip(w51n_b3_flux_rescaled_int.to(u.Jy).value[nonan_w51n]-w51n_b3_flux_low_rescaled_int.to(u.Jy).value[nonan_w51n],\n",
    "                                              w51n_b3_flux_upp_rescaled_int.to(u.Jy).value[nonan_w51n]-w51n_b3_flux_rescaled_int.to(u.Jy).value[nonan_w51n]))).T\n",
    "w51n_b3_flux_rescaled_err_nonan = np.array([[w51n_b3_flux_rescaled_int.to(u.Jy).value[nonan_w51n]-w51n_b3_flux_low_rescaled_int.to(u.Jy).value[nonan_w51n]\n",
    "                                             ,w51n_b3_flux_upp_rescaled_int.to(u.Jy).value[nonan_w51n]-w51n_b3_flux_rescaled_int.to(u.Jy).value[nonan_w51n]]]).T\n",
    "w51n_b6_flux_rescaled_err_nonan = np.array(list(zip(w51n_b6_flux_rescaled_int.to(u.Jy).value[nonan_w51n]-w51n_b6_flux_low_rescaled_int.to(u.Jy).value[nonan_w51n],\n",
    "                                              w51n_b6_flux_upp_rescaled_int.to(u.Jy).value[nonan_w51n]-w51n_b6_flux_rescaled_int.to(u.Jy).value[nonan_w51n]))).T\n",
    "w51n_b6_flux_rescaled_err_nonan = np.array([[w51n_b6_flux_rescaled_int.to(u.Jy).value[nonan_w51n]-w51n_b6_flux_low_rescaled_int.to(u.Jy).value[nonan_w51n]\n",
    "                                             ,w51n_b6_flux_upp_rescaled_int.to(u.Jy).value[nonan_w51n]-w51n_b6_flux_rescaled_int.to(u.Jy).value[nonan_w51n]]]).T\n",
    "\n",
    "\n",
    "w51e_b3_flux_rescaled_err_nan = np.array(list(zip(w51e_b3_flux_rescaled_int.to(u.Jy).value[nan_w51e]-w51e_b3_flux_low_rescaled_int.to(u.Jy).value[nan_w51e],\n",
    "                                              w51e_b3_flux_upp_rescaled_int.to(u.Jy).value[nan_w51e]-w51e_b3_flux_rescaled_int.to(u.Jy).value[nan_w51e]))).T\n",
    "\n",
    "w51e_b6_flux_rescaled_err_nan = np.array(list(zip(w51e_b6_flux_rescaled_int.to(u.Jy).value[nan_w51e]-w51e_b6_flux_low_rescaled_int.to(u.Jy).value[nan_w51e],\n",
    "                                              w51e_b6_flux_upp_rescaled_int.to(u.Jy).value[nan_w51e]-w51e_b6_flux_rescaled_int.to(u.Jy).value[nan_w51e]))).T\n",
    "\n",
    "w51n_b3_flux_rescaled_err_nan = np.array(list(zip(w51n_b3_flux_rescaled_int.to(u.Jy).value[nan_w51n]-w51n_b3_flux_low_rescaled_int.to(u.Jy).value[nan_w51n],\n",
    "                                              w51n_b3_flux_upp_rescaled_int.to(u.Jy).value[nan_w51n]-w51n_b3_flux_rescaled_int.to(u.Jy).value[nan_w51n]))).T\n",
    "\n",
    "w51n_b6_flux_rescaled_err_nan = np.array(list(zip(w51n_b6_flux_rescaled_int.to(u.Jy).value[nan_w51n]-w51n_b6_flux_low_rescaled_int.to(u.Jy).value[nan_w51n],\n",
    "                                              w51n_b6_flux_upp_rescaled_int.to(u.Jy).value[nan_w51n]-w51n_b6_flux_rescaled_int.to(u.Jy).value[nan_w51n]))).T\n",
    "\"\"\"\n",
    "cmap = sns.color_palette(\"YlOrBr_r\", as_cmap=True)\n",
    "norm = matplotlib.colors.Normalize(vmin=0, vmax=100, clip=True)\n",
    "mapper = cm.ScalarMappable(norm=norm, cmap=cmap)\n",
    "color_w51e = np.array([(mapper.to_rgba(v)) for v in temp_yso_arr_w51e])\n",
    "color_w51n = np.array([(mapper.to_rgba(v)) for v in temp_yso_arr_w51n])\n",
    "\n",
    "fig = plt.figure(figsize=(19,8))\n",
    "ax1 = fig.add_axes([0.1,0.15,0.4,0.77])\n",
    "ax2 = fig.add_axes([0.55,0.15,0.4,0.77])\n",
    "\n",
    "sc=ax1.scatter(w51e_b3_flux_rescaled_int.to(u.Jy).value, w51e_b6_flux_rescaled_int.to(u.Jy).value,s=0,\n",
    "              c=temp_yso_arr_w51e,vmin=0,vmax=100,cmap=cmap)\n",
    "\n",
    "def plot_flux_flux_temp(ax, b3flux, b6flux, b3fluxerr, b6fluxerr, color, idxlist, lws=[4,1,1,1],\n",
    "                        label='W51-E', markerlist=['o','^', '>', 'D'], sizelist=[20,10,10,10], uplimarr=[False,True,True, True], lolimarr=[False,False,True,True]):\n",
    "    for idx, marker, size, uplim, lolim, lw in zip(idxlist, markerlist, sizelist, uplimarr, lolimarr, lws):\n",
    "        for x, y, xerr, yerr, c,  in zip(b3flux[idx], \n",
    "                                    b6flux[idx],\n",
    "                                    b3fluxerr[idx],\n",
    "                                    b6fluxerr[idx],\n",
    "                                    color[idx], \n",
    "                                   ):\n",
    "            ax.errorbar(x,y, \n",
    "                    xerr=xerr, \n",
    "                    yerr=yerr,\n",
    "                    fmt=marker, c=c, \n",
    "                    ecolor='k', elinewidth=1, mec='k',ms=size,zorder=50)\n",
    "            ax.scatter(x,y, edgecolor='k',lw=lw, marker=marker,zorder=0,s=size**2,c=c)\n",
    "\n",
    "idxlist_w51e = [w51e_b3_res_b6_res, w51e_b3_res_b6_unres, w51e_b3_unres_b6_res , w51e_b3_unres_b6_unres   ]\n",
    "\n",
    "plot_flux_flux_temp(ax1, w51e_b3_flux_rescaled_int.to(u.Jy).value, w51e_b6_flux_rescaled_int.to(u.Jy).value, \n",
    "                    w51e_b3_flux_err_rescaled_int, w51e_b3_flux_err_rescaled_int, color_w51e, idxlist_w51e,\n",
    "                        label='W51-E',)\n",
    "idxlist_w51n = [w51n_b3_res_b6_res, w51n_b3_res_b6_unres, w51n_b3_unres_b6_res , w51n_b3_unres_b6_unres   ]\n",
    "    \n",
    "plot_flux_flux_temp(ax2, w51n_b3_flux_rescaled_int.to(u.Jy).value, w51n_b6_flux_rescaled_int.to(u.Jy).value, \n",
    "                    w51n_b3_flux_err_rescaled_int, w51n_b3_flux_err_rescaled_int, color_w51n, idxlist_w51n,\n",
    "                        label='W51-IRS2',)\n",
    "\n",
    "axins1 = inset_axes(\n",
    "    ax1,\n",
    "    width=\"30%\",  # width: 50% of parent_bbox width\n",
    "    height=\"5%\",  # height: 5%\n",
    "    loc=\"upper left\", borderpad=2.5\n",
    "    )\n",
    "axins1.xaxis.set_ticks_position(\"bottom\")\n",
    "axcbr = fig.colorbar(sc, cax=axins1, orientation=\"horizontal\", ticks=[0, 50, 100])\n",
    "axcbr.set_label('Temperature (K)')\n",
    "axins2 = inset_axes(\n",
    "    ax2,\n",
    "    width=\"30%\",  # width: 50% of parent_bbox width\n",
    "    height=\"5%\",  # height: 5%\n",
    "    loc=\"upper left\",borderpad=2.5\n",
    "    )\n",
    "axins2.xaxis.set_ticks_position(\"bottom\")\n",
    "axcbr = fig.colorbar(sc, cax=axins2, orientation=\"horizontal\", ticks=[0, 50, 100])\n",
    "axcbr.set_label('Temperature (K)')\n",
    "\n",
    "\"\"\"\n",
    "b3freq = 92982346121.91989 \n",
    "b6freq = 226691598706.70853\n",
    "spectral_indices=[-1,0,1,2,3,4]\n",
    "for si in spectral_indices:\n",
    "    ax1.plot([1e-5,1e-1],10**(np.log10([1e-5,1e-1]) - np.log10(b3freq/b6freq) * si), c='grey',ls='dashed')\n",
    "ax1.text(1e-3,3e-2,r'$\\alpha=4$',rotation=50,fontsize=14,c='gray')\n",
    "\n",
    "ax1.text(1.5e-2,5e-3,r'$\\alpha=-1$',rotation=50,fontsize=14,c='gray')\n",
    "\"\"\"\n",
    "b3flux_1 = get_bb_intensity(freq93, surf_den, 1*u.K)\n",
    "b6flux_1 = get_bb_intensity(freq225, surf_den, 1*u.K)\n",
    "\n",
    "b3flux_lowlimit_curve_over1 = get_bb_intensity(freq93, surf_den[-1], np.arange(2,80,1)*u.K)\n",
    "b6flux_lowlimit_curve_over1 = get_bb_intensity(freq225, surf_den[-1], np.arange(2,80,1)*u.K)\n",
    "b3flux_lowlimit_curve = np.concatenate((b3flux_1.value, b3flux_lowlimit_curve_over1.value))\n",
    "b6flux_lowlimit_curve = np.concatenate((b6flux_1.value, b6flux_lowlimit_curve_over1.value))\n",
    "b3flux_80 = get_bb_intensity(freq93, surf_den, 80*u.K)\n",
    "b6flux_80 = get_bb_intensity(freq225, surf_den, 80*u.K)\n",
    "\n",
    "interp = CubicSpline(b3flux_80.value, b6flux_80.value)\n",
    "\n",
    "ax1.fill_between(b3flux_lowlimit_curve, b6flux_lowlimit_curve, interp(b3flux_lowlimit_curve), color='chartreuse', alpha=0.3,label='modified blackbody T=1-80K')\n",
    "ax2.fill_between(b3flux_lowlimit_curve, b6flux_lowlimit_curve, interp(b3flux_lowlimit_curve), color='chartreuse', alpha=0.3)\n",
    "\n",
    "\n",
    "b3flux_20 = get_bb_intensity(freq93, surf_den, 20*u.K)\n",
    "b6flux_20 = get_bb_intensity(freq225, surf_den, 20*u.K)\n",
    "\n",
    "b3flux_40 = get_bb_intensity(freq93, surf_den, 40*u.K)\n",
    "b6flux_40 = get_bb_intensity(freq225, surf_den, 40*u.K)\n",
    "\n",
    "b3flux_60 = get_bb_intensity(freq93, surf_den, 60*u.K)\n",
    "b6flux_60 = get_bb_intensity(freq225, surf_den, 60*u.K)\n",
    "\n",
    "b3flux_80 = get_bb_intensity(freq93, surf_den, 80*u.K)\n",
    "b6flux_80 = get_bb_intensity(freq225, surf_den, 80*u.K)\n",
    "\n",
    "ax1.plot(b3flux_20, b6flux_20, c='r', ls='dotted',lw=3)\n",
    "ax1.plot(b3flux_40, b6flux_40, c='magenta', ls='dotted',lw=3)\n",
    "ax1.plot(b3flux_60, b6flux_60, c='orange', ls='dotted',lw=3)\n",
    "ax1.plot(b3flux_80, b6flux_80, c='dodgerblue', ls='dotted',lw=3)\n",
    "\n",
    "ax2.plot(b3flux_20, b6flux_20, c='r', ls='dotted',lw=3)\n",
    "ax2.plot(b3flux_40, b6flux_40, c='magenta', ls='dotted',lw=3)\n",
    "ax2.plot(b3flux_60, b6flux_60, c='orange', ls='dotted',lw=3)\n",
    "ax2.plot(b3flux_80, b6flux_80, c='dodgerblue', ls='dotted',lw=3)\n",
    "ax2.text(1.2*b3flux_20[-1].value,0.95*b6flux_20[-1].value, '20K', fontsize=20,color='r')\n",
    "ax2.text(1.2*b3flux_40[-1].value,0.95*b6flux_40[-1].value, '40K', fontsize=20,color='magenta')\n",
    "\n",
    "ax2.text(1.2*b3flux_60[-1].value,0.95*b6flux_60[-1].value, '60K', fontsize=20,color='orange')\n",
    "ax2.text(1.2*b3flux_80[-1].value,1.05*b6flux_80[-1].value, '80K', fontsize=20,color='dodgerblue')\n",
    "\n",
    "#ax1.text(1.5e-3,7e-3,r'$T=100\\,{\\rm K}$',c='dodgerblue',fontsize=13)\n",
    "#ax1.text(8e-4,3.5e-3,r'$T=50\\,{\\rm K}$',c='magenta',fontsize=13)\n",
    "#ax1.text(3e-4,1e-3,r'$T=20\\,{\\rm K}$',c='r',fontsize=13)\n",
    "ax1.set_xscale('log')\n",
    "ax1.set_yscale('log')\n",
    "ax1.set_xlabel(r'$S_{\\rm 3mm}$ $({\\rm Jy\\,arcsec^{-2}})$')\n",
    "ax1.set_ylabel(r'$S_{\\rm 1.3mm, conv}$ $({\\rm Jy\\,arcsec^{-2}})$')\n",
    "ax2.set_xscale('log')\n",
    "ax2.set_yscale('log')\n",
    "ax2.set_xlabel(r'$S_{\\rm 3mm}$ $({\\rm Jy\\,arcsec^{-2}})$')\n",
    "#ax2.set_ylabel(r'$S_{\\rm int, 1.3mm}$ (Jy)')\n",
    "\n",
    "ax1.set_title('W51-E', fontsize=40)\n",
    "ax2.set_title('W51-IRS2', fontsize=40)\n",
    "ax1.set_xlim(1e-2,5e1)\n",
    "ax1.set_ylim(5e-2,1e1)\n",
    "ax2.set_xlim(1e-2,5e1)\n",
    "ax2.set_ylim(5e-2,1e1)\n",
    "\n",
    "#ax1.set_xlim(1e9,1e13)\n",
    "#ax1.set_ylim(1e10,5e12)\n",
    "#ax2.set_xlim(1e9,1e13)\n",
    "#ax2.set_ylim(1e10,5e12)\n",
    "ax2.set_yticks([])\n",
    "b3freq = 92982346121.91989 \n",
    "b6freq = 226691598706.70853\n",
    "spectral_indices=[-1,0,1,2,3,4]\n",
    "for si in spectral_indices:\n",
    "    ax1.plot([1e-2,1e2],10**(np.log10([1e-2,1e2]) - np.log10(b3freq/b6freq) * si), c='grey',ls='dashed')\n",
    "    ax2.plot([1e-2,1e2],10**(np.log10([1e-2,1e2]) - np.log10(b3freq/b6freq) * si), c='grey',ls='dashed')\n",
    "\n",
    "ax1.scatter([-1,-1],[-1,-1], c=mapper.to_rgba(10), s=20**2, lw=4, marker='o',label='resolved in both bands',edgecolor='k')\n",
    "ax1.scatter([-1,-1],[-1,-1], c=mapper.to_rgba(10), s=10**2, lw=1, marker='^',label='resolved in Band 3 only',edgecolor='k') \n",
    "ax1.scatter([-1,-1],[-1,-1], c=mapper.to_rgba(10), s=10**2, lw=1, marker='>',label='resolved in Band 6 only',edgecolor='k') \n",
    "ax1.scatter([-1,-1],[-1,-1], c=mapper.to_rgba(10), s=10**2, lw=1, marker='D',label='unresolved in both bands',edgecolor='k') \n",
    "\n",
    "ax1.legend(fontsize=16, frameon=False, loc='lower right')\n",
    "    \n",
    "    \n",
    "\n",
    "ax1.text(0.03,1.5,r'$\\alpha=4$',rotation=55,fontsize=20)\n",
    "ax1.text(1,0.3,r'$\\alpha=-1$',rotation=55,fontsize=20)\n",
    "ax2.text(0.03,1.5,r'$\\alpha=4$',rotation=55,fontsize=20)\n",
    "ax2.text(1,0.3,r'$\\alpha=-1$',rotation=55,fontsize=20)\n",
    "plt.savefig('fluxflux_temp.png')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 21,
   "id": "f440e565-33c2-46be-89fa-20ad790c3d05",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "19.202039404707627 30.456783222661855\n",
      "19.202039404707627 30.456783222661855\n",
      "16.650242439499028 30.10467021564039\n",
      "36\n",
      "125 43 94 6\n"
     ]
    },
    {
     "data": {
      "image/png": "",
      "text/plain": [
       "<Figure size 576x576 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "fig = plt.figure(figsize=(8,8))\n",
    "ax3 = fig.add_axes([0.15,0.15,0.83,0.83])\n",
    "tempbin = np.linspace(0,70,15)\n",
    "ax3.hist(temp_yso_arr_w51e[w51e_b3_res_b6_res], bins=tempbin,  histtype='step', color=sns.color_palette('colorblind')[0], label='W51-E (resolved)',lw=4, hatch='/')\n",
    "ax3.hist(temp_yso_arr_w51n[w51n_b3_res_b6_res], bins=tempbin,  histtype='step',color=sns.color_palette('colorblind')[1], label='W51-IRS2 (resolved)',hatch='\\\\',lw=4)\n",
    "\n",
    "unresolveds_w51e = np.logical_or(np.logical_or(w51e_b3_res_b6_unres, w51e_b3_unres_b6_res), w51e_b3_unres_b6_unres)\n",
    "unresolveds_w51n = np.logical_or(np.logical_or(w51n_b3_res_b6_unres, w51n_b3_unres_b6_res), w51n_b3_unres_b6_unres)\n",
    "ax3.hist(temp_yso_arr_w51e[unresolveds_w51e], bins=tempbin,   facecolor='cyan', alpha=0.4,label='W51-E (unresolved)')\n",
    "ax3.hist(temp_yso_arr_w51n[unresolveds_w51n], bins=tempbin,  facecolor='orange', alpha=0.4,label='W51-IRS2 (unresolved)')\n",
    "\n",
    "print(np.nanmean(temp_yso_arr_w51e), np.nanmean(temp_yso_arr_w51n))\n",
    "print(np.nanmean(temp_yso_arr_w51e), np.nanmean(temp_yso_arr_w51n))\n",
    "print(np.nanmedian(temp_yso_arr_w51e), np.nanmedian(temp_yso_arr_w51n))\n",
    "\n",
    "print(np.nanargmax(w51e_b3_flux_rescaled_int.to(u.Jy).value))\n",
    "print(len(temp_yso_arr_w51e), len(np.where(np.isfinite(temp_yso_arr_w51e))[0]), len(temp_yso_arr_w51n),len(np.where(np.isfinite(temp_yso_arr_w51n))[0]))\n",
    "ax3.legend(fontsize=20, frameon=False)\n",
    "ax3.set_xlabel('modified blackbody temperature (K)')\n",
    "ax3.set_ylabel('number')\n",
    "#ax3.set_yticks([5,10,15])\n",
    "\n",
    "plt.savefig('temp_hist.png')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 22,
   "id": "6f6d75dd-d89a-4501-af76-734726b73934",
   "metadata": {},
   "outputs": [],
   "source": [
    "w51e_catalog['temp']=temp_yso_arr_w51e\n",
    "w51n_catalog['temp']=temp_yso_arr_w51n\n",
    "w51e_catalog.write(Path.w51e_dendro_matched_catalog_new,overwrite=True, format='fits')\n",
    "w51n_catalog.write(Path.w51n_dendro_matched_catalog_new,overwrite=True, format='fits')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "347f3747-871f-4958-8b78-bfe5b641e49c",
   "metadata": {},
   "outputs": [],
   "source": []
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "06780107-0b6e-44e0-8dbc-c99dc1df8e73",
   "metadata": {},
   "outputs": [],
   "source": []
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "15f73aa6-8ac2-455a-adfc-2cabdd5a27ba",
   "metadata": {},
   "outputs": [
    {
     "ename": "KeyError",
     "evalue": "'deconvolved_major_upperr'",
     "output_type": "error",
     "traceback": [
      "\u001b[0;31m---------------------------------------------------------------------------\u001b[0m",
      "\u001b[0;31mKeyError\u001b[0m                                  Traceback (most recent call last)",
      "Input \u001b[0;32mIn [23]\u001b[0m, in \u001b[0;36m<cell line: 10>\u001b[0;34m()\u001b[0m\n\u001b[1;32m      7\u001b[0m w51n_b3_minor \u001b[38;5;241m=\u001b[39m w51n_b3_flux_fits[\u001b[38;5;124m'\u001b[39m\u001b[38;5;124mdeconvolved_minor\u001b[39m\u001b[38;5;124m'\u001b[39m]\n\u001b[1;32m      8\u001b[0m w51n_b6_minor \u001b[38;5;241m=\u001b[39m w51n_b6_flux_conv_fits[\u001b[38;5;124m'\u001b[39m\u001b[38;5;124mdeconvolved_minor\u001b[39m\u001b[38;5;124m'\u001b[39m]\n\u001b[0;32m---> 10\u001b[0m w51e_b3_major_upperr \u001b[38;5;241m=\u001b[39m \u001b[43mw51e_b3_flux_fits\u001b[49m\u001b[43m[\u001b[49m\u001b[38;5;124;43m'\u001b[39;49m\u001b[38;5;124;43mdeconvolved_major_upperr\u001b[39;49m\u001b[38;5;124;43m'\u001b[39;49m\u001b[43m]\u001b[49m\n\u001b[1;32m     11\u001b[0m w51e_b6_major_upperr \u001b[38;5;241m=\u001b[39m w51e_b6_flux_conv_fits[\u001b[38;5;124m'\u001b[39m\u001b[38;5;124mdeconvolved_major_upperr\u001b[39m\u001b[38;5;124m'\u001b[39m]\n\u001b[1;32m     12\u001b[0m w51n_b3_major_upperr \u001b[38;5;241m=\u001b[39m w51n_b3_flux_fits[\u001b[38;5;124m'\u001b[39m\u001b[38;5;124mdeconvolved_major_upperr\u001b[39m\u001b[38;5;124m'\u001b[39m]\n",
      "File \u001b[0;32m~/anaconda3/lib/python3.9/site-packages/astropy/table/table.py:2055\u001b[0m, in \u001b[0;36mTable.__getitem__\u001b[0;34m(self, item)\u001b[0m\n\u001b[1;32m   2053\u001b[0m \u001b[38;5;28;01mdef\u001b[39;00m\u001b[38;5;250m \u001b[39m\u001b[38;5;21m__getitem__\u001b[39m(\u001b[38;5;28mself\u001b[39m, item):\n\u001b[1;32m   2054\u001b[0m     \u001b[38;5;28;01mif\u001b[39;00m \u001b[38;5;28misinstance\u001b[39m(item, \u001b[38;5;28mstr\u001b[39m):\n\u001b[0;32m-> 2055\u001b[0m         \u001b[38;5;28;01mreturn\u001b[39;00m \u001b[38;5;28;43mself\u001b[39;49m\u001b[38;5;241;43m.\u001b[39;49m\u001b[43mcolumns\u001b[49m\u001b[43m[\u001b[49m\u001b[43mitem\u001b[49m\u001b[43m]\u001b[49m\n\u001b[1;32m   2056\u001b[0m     \u001b[38;5;28;01melif\u001b[39;00m \u001b[38;5;28misinstance\u001b[39m(item, (\u001b[38;5;28mint\u001b[39m, np\u001b[38;5;241m.\u001b[39minteger)):\n\u001b[1;32m   2057\u001b[0m         \u001b[38;5;28;01mreturn\u001b[39;00m \u001b[38;5;28mself\u001b[39m\u001b[38;5;241m.\u001b[39mRow(\u001b[38;5;28mself\u001b[39m, item)\n",
      "File \u001b[0;32m~/anaconda3/lib/python3.9/site-packages/astropy/table/table.py:264\u001b[0m, in \u001b[0;36mTableColumns.__getitem__\u001b[0;34m(self, item)\u001b[0m\n\u001b[1;32m    253\u001b[0m \u001b[38;5;250m\u001b[39m\u001b[38;5;124;03m\"\"\"Get items from a TableColumns object.\u001b[39;00m\n\u001b[1;32m    254\u001b[0m \n\u001b[1;32m    255\u001b[0m \u001b[38;5;124;03m::\u001b[39;00m\n\u001b[0;32m   (...)\u001b[0m\n\u001b[1;32m    261\u001b[0m \u001b[38;5;124;03m  tc[1:3] # <TableColumns names=('b', 'c')>\u001b[39;00m\n\u001b[1;32m    262\u001b[0m \u001b[38;5;124;03m\"\"\"\u001b[39;00m\n\u001b[1;32m    263\u001b[0m \u001b[38;5;28;01mif\u001b[39;00m \u001b[38;5;28misinstance\u001b[39m(item, \u001b[38;5;28mstr\u001b[39m):\n\u001b[0;32m--> 264\u001b[0m     \u001b[38;5;28;01mreturn\u001b[39;00m \u001b[43mOrderedDict\u001b[49m\u001b[38;5;241;43m.\u001b[39;49m\u001b[38;5;21;43m__getitem__\u001b[39;49m\u001b[43m(\u001b[49m\u001b[38;5;28;43mself\u001b[39;49m\u001b[43m,\u001b[49m\u001b[43m \u001b[49m\u001b[43mitem\u001b[49m\u001b[43m)\u001b[49m\n\u001b[1;32m    265\u001b[0m \u001b[38;5;28;01melif\u001b[39;00m \u001b[38;5;28misinstance\u001b[39m(item, (\u001b[38;5;28mint\u001b[39m, np\u001b[38;5;241m.\u001b[39minteger)):\n\u001b[1;32m    266\u001b[0m     \u001b[38;5;28;01mreturn\u001b[39;00m \u001b[38;5;28mlist\u001b[39m(\u001b[38;5;28mself\u001b[39m\u001b[38;5;241m.\u001b[39mvalues())[item]\n",
      "\u001b[0;31mKeyError\u001b[0m: 'deconvolved_major_upperr'"
     ]
    }
   ],
   "source": []
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "08e695ad-d944-4c12-b9d7-4bbc31b74637",
   "metadata": {},
   "outputs": [],
   "source": []
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "9a3b5342-33c9-4baa-9271-ccae77d19971",
   "metadata": {},
   "outputs": [],
   "source": []
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "0efcf1b5-cbb0-41a1-825d-906147ddd8ae",
   "metadata": {},
   "outputs": [],
   "source": []
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "81cc7c59-e310-4d0e-bc18-89d4ebeb61fa",
   "metadata": {},
   "outputs": [],
   "source": []
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "2ae45f32-a2c9-46b1-9db7-f01bd4ff5540",
   "metadata": {},
   "outputs": [],
   "source": []
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "37ef1397-aefa-4946-8fd2-215537a1a51a",
   "metadata": {},
   "outputs": [],
   "source": []
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "eb71fc70-dd00-4857-b54a-c4e9db608a2b",
   "metadata": {},
   "outputs": [],
   "source": []
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "35d6eaf1-cd5d-4801-a379-f88278d66ba6",
   "metadata": {},
   "outputs": [],
   "source": []
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "base",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.9.12"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 5
}
