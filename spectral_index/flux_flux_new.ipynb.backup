{
 "cells": [
  {
   "cell_type": "code",
   "execution_count": 1,
   "id": "8e564baa-78ac-4e25-936b-bbc8e9246343",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2025-07-15T14:27:04.500214Z",
     "iopub.status.busy": "2025-07-15T14:27:04.499897Z",
     "iopub.status.idle": "2025-07-15T14:27:07.902815Z",
     "shell.execute_reply": "2025-07-15T14:27:07.902340Z"
    }
   },
   "outputs": [
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "/home/t.yoo/anaconda3/lib/python3.9/site-packages/scipy/__init__.py:146: UserWarning: A NumPy version >=1.16.5 and <1.23.0 is required for this version of SciPy (detected version 1.26.4\n",
      "  warnings.warn(f\"A NumPy version >={np_minversion} and <{np_maxversion}\"\n"
     ]
    }
   ],
   "source": [
    "from dendrocat import RadioSource\n",
    "from astropy.io import fits\n",
    "from spectral_cube import SpectralCube\n",
    "import matplotlib.pyplot as plt\n",
    "from matplotlib.colors import LogNorm\n",
    "import numpy as np\n",
    "import sys\n",
    "import importlib\n",
    "from astropy.wcs import WCS\n",
    "from scipy import interpolate\n",
    "import pandas as pd\n",
    "import sympy as syp\n",
    "from astropy import units as u\n",
    "import radio_beam\n",
    "from astropy.table import Table\n",
    "from radio_beam import Beam\n",
    "from astropy import coordinates\n",
    "from astropy import wcs\n",
    "from astropy.nddata.utils import Cutout2D\n",
    "from dendrocat.aperture import Ellipse\n",
    "from regions import Regions, PixCoord\n",
    "from astropy import stats\n",
    "from itertools import chain\n",
    "from radio_beam import Beams\n",
    "from astropy.convolution import convolve\n",
    "import Paths.Paths as paths\n",
    "Path = paths.filepaths()\n",
    "\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 2,
   "id": "0cc814bf-f6b7-40ac-9b06-0c2dab904ebe",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2025-07-15T14:27:07.906800Z",
     "iopub.status.busy": "2025-07-15T14:27:07.905673Z",
     "iopub.status.idle": "2025-07-15T14:27:08.364580Z",
     "shell.execute_reply": "2025-07-15T14:27:08.364186Z"
    }
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "/home/t.yoo/w51/w51_frag_new/flux/tables/w51e_b3.fits\n",
      "125\n",
      "125\n",
      "94\n",
      "94\n",
      "273.9439074418752 304.67435409931244 230.77942993755272 320.95028792483896\n",
      "273.9439074418752 304.67435409931244 230.77942993755272 320.95028792483896\n",
      "hoho         flux        \n",
      "         Jy         \n",
      "--------------------\n",
      "0.061383857078860356\n",
      " 0.05433277976023189\n",
      "  0.1018595562317004\n",
      "0.023173278393113755\n",
      "  0.1899702558487702\n",
      "  0.0379994810900371\n",
      "0.028607296658953823\n",
      " 0.16869257959962516\n",
      " 0.33030185655563615\n",
      "  0.2722151707521358\n",
      "                 ...\n",
      "0.055249377823693574\n",
      "0.034463099914550176\n",
      " 0.07465300949735773\n",
      "0.024747117060706824\n",
      " 0.05478800171208326\n",
      "0.029210791195212263\n",
      " 0.05975523980887322\n",
      "0.027316231886247502\n",
      "0.022767511773365043\n",
      "0.022023619975175178\n",
      "Length = 125 rows\n"
     ]
    },
    {
     "data": {
      "text/plain": [
       "\"\\nfor i in range(len(w51e_b3_major)):\\n    print(i, w51e_catalog['is_matched'][i],'%3.2e'%w51e_b3_flux_rescaled_int.value[i], '%3.2e'%w51e_b6_flux_rescaled_int.value[i], w51e_b3_avg_size[i], w51e_b6_avg_size[i], w51e_b3_error_code[i], w51e_b6_error_code[i])\\nfor i in range(len(w51n_b3_major)):\\n    print(i, w51n_catalog['is_matched'][i],'%3.2e'%w51n_b3_flux_rescaled_int.value[i], '%3.2e'%w51n_b6_flux_rescaled_int.value[i], w51n_b3_avg_size[i], w51n_b6_avg_size[i], w51n_b3_error_code[i], w51n_b6_error_code[i])\\n\""
      ]
     },
     "execution_count": 2,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "from astropy.table import Table\n",
    "import matplotlib as mpl\n",
    "import astropy.constants as c\n",
    "from mpl_toolkits.axes_grid1.inset_locator import inset_axes\n",
    "from astropy.modeling.models import BlackBody\n",
    "plt.rcParams['axes.labelsize']=25\n",
    "plt.rcParams['xtick.labelsize']=25\n",
    "plt.rcParams['ytick.labelsize']=25\n",
    "plt.rcParams['axes.titlesize']=25\n",
    "mpl.rcParams['axes.linewidth'] = 5\n",
    "mpl.rcParams['xtick.major.size'] = 10\n",
    "mpl.rcParams['xtick.major.width'] = 4\n",
    "mpl.rcParams['xtick.minor.size'] = 5\n",
    "mpl.rcParams['xtick.minor.width'] = 2\n",
    "mpl.rcParams['ytick.major.size'] = 10\n",
    "mpl.rcParams['ytick.major.width'] = 4\n",
    "mpl.rcParams['ytick.minor.size'] = 5\n",
    "mpl.rcParams['ytick.minor.width'] = 2\n",
    "params = {\"xtick.top\": True, \"ytick.right\": True, \"xtick.direction\": \"in\", \"ytick.direction\": \"in\"}\n",
    "plt.rcParams.update(params)\n",
    "\n",
    "\n",
    "def get_noise(fitsfile, noiseregion):\n",
    "    fitsdata = fits.open(b6data)\n",
    "    image = fitsdata[0].data\n",
    "    if len(image.shape)!=2:\n",
    "        image = image[0][0] \n",
    "    hdrNB = fits.getheader(fitsfile)  \n",
    "    wcsNB = WCS(hdrNB,naxis=2)\n",
    "    container = []\n",
    "    for reg in noiseregion:\n",
    "        pix_reg = reg.to_pixel(wcsNB)\n",
    "        noisemask = pix_reg.to_mask()\n",
    "        noiseim = noisemask.cutout(image)\n",
    "        container.append(noiseim.flatten())\n",
    "    noiseim = list(chain.from_iterable(container))\n",
    "    std = stats.mad_std(noiseim,ignore_nan=True)\n",
    "\n",
    "    return std\n",
    "def kappa(nu, nu0=271.1*u.GHz, kappa0=0.0114*u.cm**2*u.g**-1, beta=1.75):\n",
    "    \"\"\"\n",
    "    Compute the opacity $\\kappa$ given a reference frequency (or wavelength)\n",
    "    and a power law governing the opacity as a fuction of frequency:\n",
    "    $$ \\kappa = \\kappa_0 \\left(\\\\frac{\\\\nu}{\\\\nu_0}\\\\right)^{\\\\beta} $$\n",
    "    The default kappa=0.0114 at 271.1 GHz comes from extrapolating the\n",
    "    Ossenkopf & Henning 1994 opacities for the thin-ice-mantle, 10^6 year model\n",
    "    anchored at 1.0 mm with an assumed beta of 1.75.\n",
    "    Parameters\n",
    "    ----------\n",
    "    nu: astropy.Quantity [u.spectral() equivalent]\n",
    "        The frequency at which to evaluate kappa\n",
    "    nu0: astropy.Quantity [u.spectral() equivalent]\n",
    "        The reference frequency at which $\\kappa$ is defined\n",
    "    kappa0: astropy.Quantity [cm^2/g]\n",
    "        The dust opacity per gram of H2 along the line of sight.  Because of\n",
    "        the H2 conversion, this factor implicitly includes a dust to gas ratio\n",
    "        (usually assumed 100)\n",
    "    beta: float\n",
    "        The power-law index governing kappa as a function of nu\n",
    "    \"\"\"\n",
    "    return (kappa0*(nu.to(u.GHz,u.spectral())/nu0.to(u.GHz,u.spectral()))**(beta)).to(u.cm**2/u.g)\n",
    "def get_S_thin(T_thin, surf_den_H_2, freq, r_thick,size):\n",
    "    d = 5.41 * u.kpc\n",
    "    radius = size * u.AU\n",
    "    \n",
    "    kappa_ = kappa(freq)\n",
    "    \n",
    "    avg_gas_mass = 2.8 * c.u\n",
    "    surf_den = surf_den_H_2 * avg_gas_mass\n",
    "    F_nu = np.pi * 2 * c.h * freq**3 / (c.c**2) * (np.e**(c.h*freq/(c.k_B*T_thin)) - 1)**(-1) * (1 - np.e**((-kappa_ * surf_den).to(u.dimensionless_unscaled)))\n",
    "    \n",
    "    S_nu_hole = (F_nu / np.pi) * ((np.pi * radius**2) - (np.pi * r_thick**2)) / d**2\n",
    "    \n",
    "    return S_nu_hole.to(u.mJy)\n",
    "\n",
    "def thick_bb_emission(T, freq, radii):\n",
    "    B_nu = (2 * freq**3 *c.h / (c.c**2) * 1 / (np.e**(c.h*freq/(c.k_B*T))-1)).to(u.W/u.m**2/u.Hz)\n",
    "    d = 8.4 * u.kpc\n",
    "    S_nu = B_nu * np.pi * radii**2 / d**2 \n",
    "    \n",
    "    return S_nu.to(u.mJy)\n",
    "\n",
    "def total_emission(T_thin, T_thick, freq, surf_den, r_thick, r_total):\n",
    "    flux = np.zeros((len(r_thick),len(surf_den)))\n",
    "    for i,r in enumerate(r_thick):\n",
    "        for j,den in enumerate(surf_den):\n",
    "            flux[i,j] =  get_S_thin(T_thin, surf_den, freq, r_thick,r_total)+thick_bb_emission(T_thick, freq, r_thick)\n",
    "    return flux\n",
    "def get_bb_intensity(freq, surf_den,T_thin):\n",
    "    \n",
    "    kappa_ = kappa(freq)\n",
    "    \n",
    "    I_nu =  2 * c.h * freq**3 / (c.c**2) * (np.e**(c.h*freq/(c.k_B*T_thin)) - 1)**(-1) * (1 - np.e**((-kappa_ * surf_den).to(u.dimensionless_unscaled))) /u.sr\n",
    "    \n",
    "    \n",
    "    \n",
    "    return I_nu.to(u.Jy/u.arcsec**2)\n",
    "\n",
    "def flux_gaussian_multiple_apertures(flux, major, minor, major_corr, minor_corr): # major, minor in sigma\n",
    "    flux_rarr =flux * (1 - np.exp(-major_corr*minor_corr/2/major/minor))\n",
    "    return flux_rarr\n",
    "\n",
    "            \n",
    "       \n",
    "hdrNB6 = fits.getheader(Path.w51e_b6_tt0)  \n",
    "my_beamNB6 = Beam.from_fits_header(hdrNB6)\n",
    "hdrNB3 = fits.getheader(Path.w51e_b3_tt0)\n",
    "my_beamNB3 = Beam.from_fits_header(hdrNB3)\n",
    "wcsNB3 = WCS(hdrNB3,naxis=2)\n",
    "wcsNB6 = WCS(hdrNB6,naxis=2)\n",
    "r_max = np.sqrt(my_beamNB3.major/2*my_beamNB3.minor/2) * np.pi/180* 5.41*1000*206265\n",
    "r_max = r_max.value\n",
    "T_thin = 50 * u.K\n",
    "T_thick = 50 * u.K\n",
    "freq93 = 92.98 * u.GHz\n",
    "freq225 = 226.69 * u.GHz\n",
    "\n",
    "r_min = 1 # AU\n",
    "#r_max = 713/2 # AU\n",
    "r_thick = np.linspace(r_min, r_max, 1000) * u.AU\n",
    "avg_gas_mass = 2.8 * c.u # from https://dust-emissivity.readthedocs.io/en/latest/api/dust_emissivity.blackbody.modified_blackbody.html\n",
    "H_2_den_min = 1e+21 / u.cm**2\n",
    "H_2_den_max = 1e+27 / u.cm**2\n",
    "den_min = ((H_2_den_min  * avg_gas_mass).to(u.kg/u.m**2)).value\n",
    "den_max = ((H_2_den_max * avg_gas_mass).to(u.kg/u.m**2)).value\n",
    "surf_den = np.geomspace(den_min, den_max, 1000) * u.kg / u.m**2\n",
    "\n",
    "b3flux_20 = get_bb_intensity(freq93, surf_den, 20*u.K)\n",
    "b6flux_20 = get_bb_intensity(freq225, surf_den, 20*u.K)\n",
    "\n",
    "b3flux_50 = get_bb_intensity(freq93, surf_den, 50*u.K)\n",
    "b6flux_50 = get_bb_intensity(freq225, surf_den, 50*u.K)\n",
    "\n",
    "b3flux_100 = get_bb_intensity(freq93, surf_den, 100*u.K)\n",
    "b6flux_100 = get_bb_intensity(freq225, surf_den, 100*u.K)\n",
    "\n",
    "b3flux_200 = get_bb_intensity(freq93, surf_den, 200*u.K)\n",
    "b6flux_200 = get_bb_intensity(freq225, surf_den, 200*u.K)\n",
    "\n",
    "b3flux_500 = get_bb_intensity(freq93, surf_den, 500*u.K)\n",
    "b6flux_500 = get_bb_intensity(freq225, surf_den, 500*u.K)\n",
    "\n",
    "\n",
    "\"\"\"\n",
    "w51e_b3noise = get_noise(w51e_b3_tt0,w51e_b3_noiseregion)\n",
    "w51e_b6noise = get_noise(w51e_b6,w51e_b3_noiseregion)\n",
    "w51n_b3noise = get_noise(w51e_b3_tt0,w51e_b3_noiseregion)\n",
    "w51n_b6noise = get_noise(w51e_b3_tt0,w51e_b3_noiseregion)\n",
    "\"\"\"\n",
    "\n",
    "\n",
    "w51e_catalog = Table.read(Path.w51e_dendro_matched_catalog_new) \n",
    "w51n_catalog = Table.read(Path.w51n_dendro_matched_catalog_new) \n",
    "\n",
    "w51e_peak_flux_b3 = w51e_catalog['flux_peak_b3']\n",
    "w51e_peak_flux_b6 = w51e_catalog['flux_peak_b6']\n",
    "w51n_peak_flux_b3 = w51n_catalog['flux_peak_b3']\n",
    "w51n_peak_flux_b6 = w51n_catalog['flux_peak_b6']\n",
    "\n",
    "w51e_b3_flux_fits = Table.read(Path.w51e_b3_flux)\n",
    "w51e_b6_flux_fits = Table.read(Path.w51e_b6_flux)\n",
    "w51n_b3_flux_fits = Table.read(Path.w51n_b3_flux)\n",
    "w51n_b6_flux_fits = Table.read(Path.w51n_b6_flux)\n",
    "print(Path.w51e_b3_flux)\n",
    "w51e_b6_flux_conv_fits = Table.read(Path.w51e_b6_conv_flux)\n",
    "w51n_b6_flux_conv_fits = Table.read(Path.w51n_b6_conv_flux)\n",
    "\n",
    "w51e_b3_major = w51e_b3_flux_fits['deconvolved_major']\n",
    "w51e_b6_major = w51e_b6_flux_conv_fits['deconvolved_major'] #FWHM, deg\n",
    "w51n_b3_major = w51n_b3_flux_fits['deconvolved_major']\n",
    "w51n_b6_major = w51n_b6_flux_conv_fits['deconvolved_major']\n",
    "w51e_b3_minor = w51e_b3_flux_fits['deconvolved_minor']\n",
    "w51e_b6_minor = w51e_b6_flux_conv_fits['deconvolved_minor']\n",
    "w51n_b3_minor = w51n_b3_flux_fits['deconvolved_minor']\n",
    "w51n_b6_minor = w51n_b6_flux_conv_fits['deconvolved_minor']\n",
    "\n",
    "\n",
    "\"\"\"\n",
    "w51e_b3_major_upperr = w51e_b3_flux_fits['deconvolved_major_upperr']\n",
    "w51e_b6_major_upperr = w51e_b6_flux_fits['deconvolved_major_upperr']\n",
    "w51n_b3_major_upperr = w51n_b3_flux_fits['deconvolved_major_upperr']\n",
    "w51n_b6_major_upperr = w51n_b6_flux_fits['deconvolved_major_upperr']\n",
    "w51e_b3_minor_upperr = w51e_b3_flux_fits['deconvolved_minor_upperr']\n",
    "w51e_b6_minor_upperr = w51e_b6_flux_fits['deconvolved_minor_upperr']\n",
    "w51n_b3_minor_upperr = w51n_b3_flux_fits['deconvolved_minor_upperr']\n",
    "w51n_b6_minor_upperr = w51n_b6_flux_fits['deconvolved_minor_upperr']\n",
    "\n",
    "w51e_b3_major_lowerr = w51e_b3_flux_fits['deconvolved_major_lowerr']\n",
    "w51e_b6_major_lowerr = w51e_b6_flux_fits['deconvolved_major_lowerr']\n",
    "w51n_b3_major_lowerr = w51n_b3_flux_fits['deconvolved_major_lowerr']\n",
    "w51n_b6_major_lowerr = w51n_b6_flux_fits['deconvolved_major_lowerr']\n",
    "w51e_b3_minor_lowerr = w51e_b3_flux_fits['deconvolved_minor_lowerr']\n",
    "w51e_b6_minor_lowerr = w51e_b6_flux_fits['deconvolved_minor_lowerr']\n",
    "w51n_b3_minor_lowerr = w51n_b3_flux_fits['deconvolved_minor_lowerr']\n",
    "w51n_b6_minor_lowerr = w51n_b6_flux_fits['deconvolved_minor_lowerr']\n",
    "\"\"\"\n",
    "w51e_b3_int_flux = w51e_b3_flux_fits['flux']\n",
    "w51e_b6_int_flux = w51e_b6_flux_conv_fits['flux']\n",
    "w51n_b3_int_flux = w51n_b3_flux_fits['flux']\n",
    "w51n_b6_int_flux = w51n_b6_flux_conv_fits['flux']\n",
    "print(len(w51e_b3_int_flux))\n",
    "print(len(w51e_b6_int_flux))\n",
    "print(len(w51n_b3_int_flux))\n",
    "print(len(w51n_b6_int_flux))\n",
    "\n",
    "#w51e_b3_error_code = w51e_b3_flux_fits['error_code']\n",
    "#w51e_b6_error_code  = w51e_b6_flux_conv_fits['error_code']\n",
    "#w51n_b3_error_code  = w51n_b3_flux_fits['error_code']\n",
    "#w51n_b6_error_code  = w51n_b6_flux_conv_fits['error_code']\n",
    "\n",
    "scaleNB6 = wcsNB6.proj_plane_pixel_scales()[0]\n",
    "scaleNB3 = wcsNB3.proj_plane_pixel_scales()[0]\n",
    "sig_to_fwhm = np.sqrt(2*np.log(2))*2\n",
    "#b6_min_size_maj =sig_to_fwhm*np.sqrt((my_beamNB6.major.value/scaleNB6.value/sig_to_fwhm+0.05)**2 \n",
    "#                                 - (my_beamNB6.major.value/scaleNB6.value/sig_to_fwhm)**2)*scaleNB6.value\n",
    "#b6_min_size_min =sig_to_fwhm*np.sqrt((my_beamNB6.minor.value/scaleNB6.value/sig_to_fwhm+0.05)**2 \n",
    "#                                 - (my_beamNB6.minor.value/scaleNB6.value/sig_to_fwhm)**2)*scaleNB6.value\n",
    "\n",
    "#b3_min_size_maj =sig_to_fwhm*np.sqrt((my_beamNB3.major.value/scaleNB3.value/sig_to_fwhm+0.05)**2 \n",
    "#                                 - (my_beamNB3.major.value/scaleNB3.value/sig_to_fwhm)**2)*scaleNB3.value\n",
    "#b3_min_size_min =sig_to_fwhm*np.sqrt((my_beamNB3.minor.value/scaleNB3.value/sig_to_fwhm+0.05)**2 \n",
    "#                                 - (my_beamNB3.minor.value/scaleNB3.value/sig_to_fwhm)**2)*scaleNB3.value\n",
    "\n",
    "\n",
    "\n",
    "w51e_b3_int_flux[w51e_b3_int_flux<0]=np.nan\n",
    "w51n_b3_int_flux[w51n_b3_int_flux<0]=np.nan\n",
    "w51e_b6_int_flux[w51e_b6_int_flux<0]=np.nan\n",
    "w51n_b6_int_flux[w51n_b6_int_flux<0]=np.nan\n",
    "\n",
    "w51e_b3_unresolved = np.logical_and(w51e_b3_major<=0, np.isfinite(w51e_b3_int_flux))\n",
    "w51n_b3_unresolved = np.logical_and(w51n_b3_major<=0, np.isfinite(w51n_b3_int_flux))\n",
    "w51e_b6_unresolved = np.logical_and(w51e_b6_major<=0, np.isfinite(w51e_b6_int_flux))\n",
    "w51n_b6_unresolved = np.logical_and(w51n_b6_major<=0, np.isfinite(w51n_b6_int_flux))\n",
    "\n",
    "\n",
    "w51e_b3_resolved = np.logical_and(w51e_b3_major>0, np.isfinite(w51e_b3_int_flux))\n",
    "w51n_b3_resolved = np.logical_and(w51n_b3_major>0, np.isfinite(w51n_b3_int_flux))\n",
    "w51e_b6_resolved = np.logical_and(w51e_b6_major>0, np.isfinite(w51e_b6_int_flux))\n",
    "w51n_b6_resolved = np.logical_and(w51n_b6_major>0, np.isfinite(w51n_b6_int_flux))\n",
    "\n",
    "w51e_b3_res_b6_res = np.logical_and(w51e_b3_resolved, w51e_b6_resolved)\n",
    "w51n_b3_res_b6_res = np.logical_and(w51n_b3_resolved, w51n_b6_resolved)\n",
    "w51e_b3_unres_b6_res = np.logical_and(w51e_b3_unresolved, w51e_b6_resolved)\n",
    "w51n_b3_unres_b6_res = np.logical_and(w51n_b3_unresolved, w51n_b6_resolved)\n",
    "w51e_b3_res_b6_unres = np.logical_and(w51e_b3_resolved, w51e_b6_unresolved)\n",
    "w51n_b3_res_b6_unres = np.logical_and(w51n_b3_resolved, w51n_b6_unresolved)\n",
    "w51e_b3_unres_b6_unres = np.logical_and(w51e_b3_unresolved, w51e_b6_unresolved)\n",
    "w51n_b3_unres_b6_unres = np.logical_and(w51n_b3_unresolved, w51n_b6_unresolved)\n",
    "\n",
    "\n",
    "w51e_b3_major[w51e_b3_major<=0]=np.nan\n",
    "w51n_b3_major[w51n_b3_major<=0]=np.nan\n",
    "w51e_b6_major[w51e_b6_major<=0]=np.nan\n",
    "w51n_b6_major[w51n_b6_major<=0]=np.nan\n",
    "\n",
    "w51e_b3_minor[w51e_b3_minor<=0]=np.nan\n",
    "w51n_b3_minor[w51n_b3_minor<=0]=np.nan\n",
    "w51e_b6_minor[w51e_b6_minor<=0]=np.nan\n",
    "w51n_b6_minor[w51n_b6_minor<=0]=np.nan\n",
    "\n",
    "\n",
    "w51e_b3_int_flux_err = w51e_b3_flux_fits['flux_err']\n",
    "w51e_b6_int_flux_err = w51e_b6_flux_conv_fits['flux_err']\n",
    "w51n_b3_int_flux_err = w51n_b3_flux_fits['flux_err']\n",
    "w51n_b6_int_flux_err = w51n_b6_flux_conv_fits['flux_err']\n",
    "\n",
    "\n",
    "\"\"\"\n",
    "w51e_b3_int_upp_flux[w51e_b3_int_flux<0]=np.nan\n",
    "w51e_b6_int_upp_flux[w51e_b6_int_flux<0]=np.nan\n",
    "w51n_b3_int_upp_flux[w51n_b3_int_flux<0]=np.nan\n",
    "w51n_b6_int_upp_flux[w51n_b6_int_flux<0]=np.nan\n",
    "\n",
    "w51e_b3_int_low_flux[w51e_b3_int_flux<0]=np.nan\n",
    "w51e_b6_int_low_flux[w51e_b6_int_flux<0]=np.nan\n",
    "w51n_b3_int_low_flux[w51n_b3_int_flux<0]=np.nan\n",
    "w51n_b6_int_low_flux[w51n_b6_int_flux<0]=np.nan\n",
    "\"\"\"\n",
    "\n",
    "w51e_b3_err = 2.065537678896079e-05\n",
    "w51e_b6_err = 0.00012361802520203196\n",
    "w51n_b3_err = 2.220660593897177e-05\n",
    "w51n_b6_err = 8.95845803518789e-05\n",
    "\n",
    "\n",
    "\"\"\"\n",
    "w51e_b3_avg_size = np.sqrt(w51e_b3_major/2 * w51e_b3_minor/2) * np.pi/180 * 5.41*1000*206265\n",
    "w51e_b6_avg_size = np.sqrt(w51e_b6_major/2 * w51e_b6_minor/2) * np.pi/180 * 5.41*1000*206265\n",
    "w51n_b3_avg_size = np.sqrt(w51n_b3_major/2 * w51n_b3_minor/2) * np.pi/180 * 5.1*1000*206265\n",
    "w51n_b6_avg_size = np.sqrt(w51n_b6_major/2 * w51n_b6_minor/2) * np.pi/180 * 5.1*1000*206265\n",
    "\"\"\"\n",
    "def arcsec_to_au(dist=5.41):\n",
    "    #dist in kpc\n",
    "    return 2 /2.355 * np.pi/180 * dist*1000*206265\n",
    "\n",
    "    \n",
    "#w51e_b3_avg_size = np.array([np.max((w51e_b3_major[i], w51e_b3_minor[i])) for i in range(len(w51e_b3_major.value))]) * arcsec_to_au() \n",
    "#w51e_b6_avg_size = np.array([np.max((w51e_b6_major[i], w51e_b6_minor[i])) for i in range(len(w51e_b6_major.value))]) * arcsec_to_au()\n",
    "#w51n_b3_avg_size = np.array([np.max((w51n_b3_major[i], w51n_b3_minor[i])) for i in range(len(w51n_b3_major.value))]) * arcsec_to_au(dist=5.1)\n",
    "#w51n_b6_avg_size = np.array([np.max((w51n_b6_major[i], w51n_b6_minor[i])) for i in range(len(w51n_b6_major.value))]) * arcsec_to_au(dist=5.1)\n",
    "\n",
    "w51e_b3_avg_size_major = w51e_b3_major * arcsec_to_au()\n",
    "w51e_b6_avg_size_major = w51e_b6_major * arcsec_to_au()\n",
    "w51n_b3_avg_size_major = w51n_b3_major * arcsec_to_au()\n",
    "w51n_b6_avg_size_major = w51n_b6_major * arcsec_to_au()\n",
    "\n",
    "w51e_b3_avg_size_minor = w51e_b3_major * arcsec_to_au()\n",
    "w51e_b6_avg_size_minor = w51e_b6_major * arcsec_to_au()\n",
    "w51n_b3_avg_size_minor = w51n_b3_major * arcsec_to_au()\n",
    "w51n_b6_avg_size_minor = w51n_b6_major * arcsec_to_au()\n",
    "\n",
    "\n",
    "print(np.nanmin(w51e_b3_avg_size_major), np.nanmin(w51e_b6_avg_size_major), np.nanmin(w51n_b3_avg_size_major), np.nanmin(w51n_b6_avg_size_major))\n",
    "print(np.nanmin(w51e_b3_avg_size_minor), np.nanmin(w51e_b6_avg_size_minor), np.nanmin(w51n_b3_avg_size_minor), np.nanmin(w51n_b6_avg_size_minor))\n",
    "w51e_b3_avg_size_major[w51e_b3_unresolved] = np.nanmin(w51e_b3_avg_size_major)\n",
    "w51e_b6_avg_size_major[w51e_b6_unresolved] = np.nanmin(w51e_b6_avg_size_major)\n",
    "w51n_b3_avg_size_major[w51n_b3_unresolved] = np.nanmin(w51n_b3_avg_size_major)\n",
    "w51n_b6_avg_size_major[w51n_b6_unresolved] = np.nanmin(w51n_b6_avg_size_major)\n",
    "\n",
    "w51e_b3_avg_size_minor[w51e_b3_unresolved] = np.nanmin(w51e_b3_avg_size_minor)\n",
    "w51e_b6_avg_size_minor[w51e_b6_unresolved] = np.nanmin(w51e_b6_avg_size_minor)\n",
    "w51n_b3_avg_size_major[w51n_b3_unresolved] = np.nanmin(w51n_b3_avg_size_minor)\n",
    "w51n_b6_avg_size_major[w51n_b6_unresolved] = np.nanmin(w51n_b6_avg_size_minor)\n",
    "\n",
    "w51e_b3_major[w51e_b3_unresolved] = np.nanmin(w51e_b3_avg_size_major)/arcsec_to_au()\n",
    "w51e_b6_major[w51e_b6_unresolved] = np.nanmin(w51e_b6_avg_size_major)/arcsec_to_au()\n",
    "w51e_b3_minor[w51e_b3_unresolved] = np.nanmin(w51e_b3_avg_size_minor)/arcsec_to_au()\n",
    "w51e_b6_minor[w51e_b6_unresolved] = np.nanmin(w51e_b6_avg_size_minor)/arcsec_to_au()\n",
    "\n",
    "w51n_b3_major[w51n_b3_unresolved] = np.nanmin(w51n_b3_avg_size_major)/arcsec_to_au()\n",
    "w51n_b6_major[w51n_b6_unresolved] = np.nanmin(w51n_b6_avg_size_major)/arcsec_to_au()\n",
    "w51n_b3_minor[w51n_b3_unresolved] = np.nanmin(w51n_b3_avg_size_minor)/arcsec_to_au()\n",
    "w51n_b6_minor[w51n_b6_unresolved] = np.nanmin(w51n_b6_avg_size_minor)/arcsec_to_au()\n",
    "\n",
    "w51e_b3_flux_rescaled = w51e_b3_int_flux * (1-np.exp(-(2/2.355)**2*8*np.log(2)))                                      \n",
    "w51e_b6_flux_rescaled = flux_gaussian_multiple_apertures(w51e_b6_int_flux, w51e_b3_major/np.sqrt(8*np.log(2)), w51e_b3_minor/np.sqrt(8*np.log(2)), \n",
    "                                                         w51e_b3_major*2/2.355, w51e_b3_minor*2/2.355)\n",
    "\n",
    "w51n_b3_flux_rescaled = w51n_b3_int_flux * (1-np.exp(-(2/2.355)**2*8*np.log(2)))\n",
    "w51n_b6_flux_rescaled = flux_gaussian_multiple_apertures(w51n_b6_int_flux, w51n_b3_major/np.sqrt(8*np.log(2)), w51n_b3_minor/np.sqrt(8*np.log(2)), \n",
    "                                                         w51n_b3_major*2/2.355, w51n_b3_minor*2/2.355)\n",
    "\n",
    "w51e_b3_flux_err_rescaled = w51e_b3_int_flux_err * (1-np.exp(-(2/2.355)**2*8*np.log(2)))                                      \n",
    "w51e_b6_flux_err_rescaled = flux_gaussian_multiple_apertures(w51e_b6_int_flux_err, w51e_b3_major/np.sqrt(8*np.log(2)), w51e_b3_minor/np.sqrt(8*np.log(2)), \n",
    "                                                         w51e_b3_major*2/2.355, w51e_b3_minor*2/2.355)\n",
    "w51n_b3_flux_err_rescaled = w51n_b3_int_flux_err * (1-np.exp(-(2/2.355)**2*8*np.log(2)))\n",
    "w51n_b6_flux_err_rescaled = flux_gaussian_multiple_apertures(w51n_b6_int_flux_err, w51n_b3_major/np.sqrt(8*np.log(2)), w51n_b3_minor/np.sqrt(8*np.log(2)), \n",
    "                                                         w51n_b3_major*2/2.355, w51n_b3_minor*2/2.355)\n",
    "\n",
    "angular_size_in_sky_w51e_b3 = 2*w51e_b3_avg_size_major / 5400  * u.arcsec # au / pc -> arcsec, radius x 2\n",
    "angular_size_in_sky_w51e_b6 = 2*w51e_b6_avg_size_major/ 5400* u.arcsec \n",
    "angular_size_in_sky_w51n_b3 = 2*w51n_b3_avg_size_major / 5400* u.arcsec \n",
    "angular_size_in_sky_w51n_b6 = 2*w51n_b6_avg_size_major / 5400* u.arcsec \n",
    "\n",
    "\n",
    "\n",
    "# keep same size (b3 size)\n",
    "w51e_b3_flux_rescaled_int = w51e_b3_flux_rescaled / angular_size_in_sky_w51e_b3 **2  #Jy/arcsec**2\n",
    "w51e_b6_flux_rescaled_int = w51e_b6_flux_rescaled / angular_size_in_sky_w51e_b6 **2\n",
    "w51n_b3_flux_rescaled_int = w51n_b3_flux_rescaled / angular_size_in_sky_w51n_b3 **2\n",
    "w51n_b6_flux_rescaled_int = w51n_b6_flux_rescaled / angular_size_in_sky_w51n_b6 **2\n",
    "\n",
    "\n",
    "#print(w51e_b3_flux_rescaled.to(u.Jy), w51e_b6_flux_rescaled.to(u.Jy))\n",
    "print('hoho',w51e_b3_flux_rescaled_int)\n",
    "\n",
    "\n",
    "#print(w51n_b3_flux_rescaled_int, w51n_b6_flux_rescaled_int)\n",
    "\n",
    "w51e_b3_flux_err_rescaled_int = w51e_b3_flux_err_rescaled / angular_size_in_sky_w51e_b3 **2\n",
    "w51e_b6_flux_err_rescaled_int = w51e_b6_flux_err_rescaled / angular_size_in_sky_w51e_b6 **2\n",
    "w51n_b3_flux_err_rescaled_int = w51n_b3_flux_err_rescaled / angular_size_in_sky_w51n_b3 **2\n",
    "w51n_b6_flux_err_rescaled_int = w51n_b6_flux_err_rescaled / angular_size_in_sky_w51n_b6 **2\n",
    "\n",
    "#w51e_snrind = np.where((w51e_peak_flux_b3>3*w51e_b3_err)&(w51e_peak_flux_b6>3*w51e_b6_err)&(w51e_b3_snr_major>3)&(w51e_b6_snr_major>3)&(w51e_b3_snr_minor>3)&(w51e_b6_snr_minor>3))[0]\n",
    "#w51n_snrind = np.where((w51n_peak_flux_b3>3*w51n_b3_err)&(w51n_peak_flux_b6>3*w51n_b6_err)&(w51n_b3_snr_major>3)&(w51n_b6_snr_major>3)&(w51n_b3_snr_minor>3)&(w51n_b6_snr_minor>3))[0]\n",
    "\"\"\"\n",
    "for i in range(len(w51e_b3_major)):\n",
    "    print(i, w51e_catalog['is_matched'][i],'%3.2e'%w51e_b3_flux_rescaled_int.value[i], '%3.2e'%w51e_b6_flux_rescaled_int.value[i], w51e_b3_avg_size[i], w51e_b6_avg_size[i], w51e_b3_error_code[i], w51e_b6_error_code[i])\n",
    "for i in range(len(w51n_b3_major)):\n",
    "    print(i, w51n_catalog['is_matched'][i],'%3.2e'%w51n_b3_flux_rescaled_int.value[i], '%3.2e'%w51n_b6_flux_rescaled_int.value[i], w51n_b3_avg_size[i], w51n_b6_avg_size[i], w51n_b3_error_code[i], w51n_b6_error_code[i])\n",
    "\"\"\"   \n",
    "    \n",
    "\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 3,
   "id": "d793dd5c-3cea-4162-804f-2e4eb3afe62d",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2025-07-15T14:27:08.367713Z",
     "iopub.status.busy": "2025-07-15T14:27:08.366725Z",
     "iopub.status.idle": "2025-07-15T14:27:08.639853Z",
     "shell.execute_reply": "2025-07-15T14:27:08.639464Z"
    }
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "125 125 125\n"
     ]
    },
    {
     "data": {
      "text/plain": [
       "<matplotlib.legend.Legend at 0x14bcd00298e0>"
      ]
     },
     "execution_count": 3,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "",
      "text/plain": [
       "<Figure size 720x720 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "w51e_alpha_int = np.log10(w51e_b3_flux_rescaled_int/w51e_b6_flux_rescaled_int)/np.log10(freq93/freq225)\n",
    "w51e_alpha = w51e_catalog['alpha']\n",
    "w51n_alpha_int = np.log10(w51n_b3_flux_rescaled_int/w51n_b6_flux_rescaled_int)/np.log10(freq93/freq225)\n",
    "w51n_alpha = w51n_catalog['alpha']\n",
    "fig = plt.figure(figsize=(10,10))\n",
    "ax = fig.add_subplot(111)\n",
    "print(len(w51e_alpha_int), len(w51e_alpha), len(w51e_b3_res_b6_res))\n",
    "ax.scatter(w51e_alpha[w51e_b3_res_b6_res], w51e_alpha_int[w51e_b3_res_b6_res], marker='o', s=100, c='blue', label='W51e')\n",
    "ax.scatter(w51n_alpha[w51n_b3_res_b6_res], w51n_alpha_int[w51n_b3_res_b6_res], marker='o', s=100, c='orange', label='W51n')\n",
    "ax.plot([1.3,3.5],[1.3,3.5], color='black', linestyle='--', linewidth=2)\n",
    "ax.set_xlabel(r'$\\alpha_{peak}$', fontsize=25)\n",
    "ax.set_ylabel(r'$\\alpha_{int}$', fontsize=25)\n",
    "ax.legend()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 4,
   "id": "e2af1b1c-5b9b-462f-b180-f67a480912a0",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2025-07-15T14:27:08.642385Z",
     "iopub.status.busy": "2025-07-15T14:27:08.642067Z",
     "iopub.status.idle": "2025-07-15T14:27:08.650866Z",
     "shell.execute_reply": "2025-07-15T14:27:08.650382Z"
    }
   },
   "outputs": [],
   "source": [
    "def make_temp_hist2(b3flux, b6flux, surf_den, temparr, b3freq, b6freq, index, plot=False, ):\n",
    "    # dist in pc\n",
    "    temp_yso_arr = []\n",
    "   \n",
    "    for i in range(len(b3flux)):\n",
    "        if i in index:\n",
    "            if not np.isfinite(b3flux[i]):\n",
    "                temp_yso_arr.append(np.nan)\n",
    "                continue\n",
    "            if not np.isfinite(b6flux[i]):\n",
    "                temp_yso_arr.append(np.nan)\n",
    "                continue\n",
    "            \n",
    "            b6fluxarr = []\n",
    "            isinsidearr=[]\n",
    "\n",
    "            for temp in temparr:\n",
    "                b3flux_bb = get_bb_intensity(b3freq, surf_den, temp*u.K)\n",
    "                b6flux_bb = get_bb_intensity(b6freq, surf_den, temp*u.K)\n",
    "                b3ind = np.searchsorted(b3flux_bb.value, b3flux[i])\n",
    "                if b3ind==len(surf_den):\n",
    "                    b3ind = len(surf_den)-1\n",
    "                    isinsidearr.append(False)\n",
    "                else:\n",
    "                    isinsidearr.append(True)\n",
    "                b6flux_inbetween = b6flux_bb[b3ind].value\n",
    "                b6fluxarr.append(b6flux_inbetween)\n",
    "\n",
    "\n",
    "            tempind = np.searchsorted(b6fluxarr, b6flux[i])\n",
    "            if tempind==len(b6fluxarr):\n",
    "                tempind = len(b6fluxarr)-1\n",
    "            if not isinsidearr[tempind]:\n",
    "                temp_yso=np.nan\n",
    "            else:\n",
    "                if tempind>=len(b6fluxarr)-1:\n",
    "                    weight=0\n",
    "                else:\n",
    "                    weight = (b6flux[i] - b6fluxarr[tempind])/(b6fluxarr[tempind+1] - b6fluxarr[tempind])\n",
    "\n",
    "                temp_yso = temparr[tempind] + weight\n",
    "        else:\n",
    "            temp_yso = np.nan\n",
    "            \n",
    "        print(i, b3flux[i], b6flux[i], temp_yso) \n",
    "        temp_yso_arr.append(temp_yso)\n",
    "    return np.array(temp_yso_arr)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 5,
   "id": "6cb95d4b-0655-47b2-8937-b67c20a3ecae",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2025-07-15T14:27:08.653242Z",
     "iopub.status.busy": "2025-07-15T14:27:08.652859Z",
     "iopub.status.idle": "2025-07-15T14:40:38.247453Z",
     "shell.execute_reply": "2025-07-15T14:40:38.246973Z"
    }
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "0 0.061383857078860356 0.43621747817625767 16.650242439499028\n",
      "1 0.05433277976023189 0.14178412808193297 nan\n",
      "2 0.1018595562317004 0.4508037431603409 nan\n",
      "3 0.023173278393113755 0.365842625501321 18.807939576189554\n",
      "4 0.1899702558487702 1.7565301796944448 53.20947613648212\n",
      "5 0.0379994810900371 0.2579277023375061 11.59703939803148\n",
      "6 0.028607296658953823 0.07473288951164563 nan\n",
      "7 0.16869257959962516 0.11544700109604066 nan\n",
      "8 0.33030185655563615 1.9572890605041402 58.01322050406531\n",
      "9 0.2722151707521358 0.9683403630880416 nan\n",
      "10 0.24075943037709102 1.0344127064099893 nan\n",
      "11 0.07225461759989198 0.6670919661255249 23.43888220376253\n",
      "12 0.13296211257513413 0.24112349334749597 nan\n",
      "13 0.1591853781505902 0.2649437445504697 nan\n",
      "14 0.03575444659682487 0.21597626989488464 10.326177945032068\n",
      "15 0.03942967324076416 0.2978535375498532 12.82175850867341\n",
      "16 0.08314487562783876 0.49668936145052345 18.288696943436328\n",
      "17 0.02711133878836886 0.1582420090757824 8.604502073343737\n",
      "18 0.033519172765484016 0.5149557919670534 23.647995110054648\n",
      "19 0.0828539555412962 0.36185353386647534 nan\n",
      "20 0.6404019917897732 2.1368443002130566 nan\n",
      "21 0.09527827606104411 0.46510119734222594 17.41143352032949\n",
      "22 0.27199581093071223 0.9681244290812437 nan\n",
      "23 0.025030302614429383 0.06853315012998543 5.6549638068155295\n",
      "24 0.07147274092829882 0.6991244161537312 24.458059421914577\n",
      "25 0.20414498009010237 1.3228595761131883 40.85051525287638\n",
      "26 0.009780154758345908 0.052774382459055094 5.0441361451913185\n",
      "27 0.573131145700932 0.7673418332439143 nan\n",
      "28 0.5287998811000524 0.25377742453656327 nan\n",
      "29 0.19628583664052549 1.0560612969168715 33.60472769627263\n",
      "30 2.0124237722680847 3.855171956362328 nan\n",
      "31 0.10421028504253753 0.13286445372802005 nan\n",
      "32 0.016787245313516726 0.13798625769851544 8.199144404295387\n",
      "33 0.023902496339914737 0.34378406989690985 17.008448077220415\n",
      "34 0.24123116522662255 0.8616888691997364 nan\n",
      "35 0.0488753852488649 0.4581933553693118 17.670595166217236\n",
      "36 2.802605107040707 5.105539839969237 nan\n",
      "37 0.8654224024692425 0.978648717678048 nan\n",
      "38 0.019321083267720193 0.1105273704773655 7.073588298024747\n",
      "39 0.2992717807702696 0.567691772249662 nan\n",
      "40 0.0962691734005903 0.22411570992463098 nan\n",
      "41 0.035365914535037755 0.28280140406473275 12.437198118507863\n",
      "42 0.037434127693240137 0.31667661363533467 13.480761615212824\n",
      "43 1.0847178492014689 1.117754362445272 nan\n",
      "44 0.04121574077141195 0.17879548541800933 9.21741185922003\n",
      "45 0.1561203522501405 1.2163408411742267 38.06618451787748\n",
      "46 0.16071104744085013 0.4598828187602027 nan\n",
      "47 0.27174732200285695 0.7934937062303263 nan\n",
      "48 0.05437225124315884 0.2794975927945802 12.171218238007317\n",
      "49 0.04729649496934125 0.3389143703124525 13.938590954737414\n",
      "50 0.09757417890424694 0.5985351805948028 21.10307646153878\n",
      "51 0.10029599250593876 0.3017747150301981 nan\n",
      "52 0.045485026786817394 0.7149877022076483 30.316310751317964\n",
      "53 0.1461908845045004 0.8605969031042002 28.282500646499454\n",
      "54 0.04210805693661644 0.5171644659426115 20.6830395804742\n",
      "55 0.13081283785016684 0.7013114179891086 23.92731761375447\n",
      "56 0.057889938416599465 0.275798311788058 12.068656402732708\n",
      "57 0.037312477554486044 0.10948383208615871 nan\n",
      "58 0.03453791029814823 0.20834980198128747 10.09486032594168\n",
      "59 0.18609779482155356 1.303309633467794 40.338657197834756\n",
      "60 0.01649014485177145 0.14869817724707216 8.740189490027797\n",
      "61 0.04658226998045188 0.2465896864434498 11.216018342838293\n",
      "62 0.0333170644578755 0.05679472630973248 nan\n",
      "63 0.017444429939157746 0.1668461624259195 9.397184855012707\n",
      "64 0.07756825208266192 0.42978395576970185 16.42516049538332\n",
      "65 0.014110585816633924 0.259476060891592 18.666007730542557\n",
      "66 0.053388408962722365 0.2163565821546407 10.340007309058281\n",
      "67 0.06161605061237338 0.5649399703873634 20.584376695252026\n",
      "68 0.039062090654855365 0.265296051133755 11.81142257292822\n",
      "69 0.05144335459017065 0.2834509607209291 12.28352627435723\n",
      "0 0.11452149346994286 0.7859360088800078 26.260681156987186\n",
      "1 0.21585895564374927 0.6125237249917672 nan\n",
      "2 0.31427121498389415 0.2161630138397197 nan\n",
      "3 0.01455338014792273 0.035733033780015994 4.3836649916715675\n",
      "4 8.41665659437973 6.842980470564515 nan\n",
      "5 0.2738616820417826 1.6657263955679316 50.12968091704702\n",
      "6 0.10117179916385811 1.0332796728873352 33.94865927429359\n",
      "7 0.18491332322117565 0.8882041811359918 nan\n",
      "8 0.2256577331806356 0.7881394377536117 nan\n",
      "9 0.47067980897631 1.4154930901400062 nan\n",
      "10 0.6620556827229579 2.433599417211827 nan\n",
      "11 1.438233715162558 5.454362104787169 nan\n",
      "12 0.07853231997822117 0.5623347788550505 20.13725902006221\n",
      "13 0.3679080627065839 0.28596605842270556 nan\n",
      "14 0.10747211309042558 0.34761149785538015 nan\n",
      "15 0.7318573238993715 1.032493683395978 nan\n",
      "16 0.1565136665331315 0.5590204160714615 nan\n",
      "17 0.029831748592260957 0.6475934402718568 47.880753975909556\n",
      "18 0.4332749655574343 0.7088096132632921 nan\n",
      "19 0.3887401041631749 0.8142318742729362 nan\n",
      "20 0.6017693826950132 0.857206409311826 nan\n",
      "21 0.42440554894967697 1.554433338255997 nan\n",
      "22 0.05211126162552593 0.11898776520262722 nan\n"
     ]
    }
   ],
   "source": [
    "temparr = np.arange(1,5000,step=1)\n",
    "\n",
    "temp_yso_arr_w51e = make_temp_hist2(w51e_b3_flux_rescaled_int.value, w51e_b6_flux_rescaled_int.value, surf_den, temparr, freq93, freq225, np.arange(len(w51e_b3_flux_rescaled_int)))\n",
    "temp_yso_arr_w51n = make_temp_hist2(w51n_b3_flux_rescaled_int.value, w51n_b6_flux_rescaled_int.value, surf_den, temparr, freq93, freq225, np.arange(len(w51n_b3_flux_rescaled_int)))\n",
    "\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 6,
   "id": "deaf8dd4-9b73-4569-81cd-2320deb82a04",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2025-07-15T14:40:38.249853Z",
     "iopub.status.busy": "2025-07-15T14:40:38.249541Z",
     "iopub.status.idle": "2025-07-15T14:40:40.939491Z",
     "shell.execute_reply": "2025-07-15T14:40:40.939076Z"
    }
   },
   "outputs": [
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "*c* argument looks like a single numeric RGB or RGBA sequence, which should be avoided as value-mapping will have precedence in case its length matches with *x* & *y*.  Please use the *color* keyword-argument or provide a 2D array with a single row if you intend to specify the same RGB or RGBA value for all points.\n",
      "*c* argument looks like a single numeric RGB or RGBA sequence, which should be avoided as value-mapping will have precedence in case its length matches with *x* & *y*.  Please use the *color* keyword-argument or provide a 2D array with a single row if you intend to specify the same RGB or RGBA value for all points.\n",
      "*c* argument looks like a single numeric RGB or RGBA sequence, which should be avoided as value-mapping will have precedence in case its length matches with *x* & *y*.  Please use the *color* keyword-argument or provide a 2D array with a single row if you intend to specify the same RGB or RGBA value for all points.\n",
      "*c* argument looks like a single numeric RGB or RGBA sequence, which should be avoided as value-mapping will have precedence in case its length matches with *x* & *y*.  Please use the *color* keyword-argument or provide a 2D array with a single row if you intend to specify the same RGB or RGBA value for all points.\n",
      "*c* argument looks like a single numeric RGB or RGBA sequence, which should be avoided as value-mapping will have precedence in case its length matches with *x* & *y*.  Please use the *color* keyword-argument or provide a 2D array with a single row if you intend to specify the same RGB or RGBA value for all points.\n",
      "*c* argument looks like a single numeric RGB or RGBA sequence, which should be avoided as value-mapping will have precedence in case its length matches with *x* & *y*.  Please use the *color* keyword-argument or provide a 2D array with a single row if you intend to specify the same RGB or RGBA value for all points.\n",
      "*c* argument looks like a single numeric RGB or RGBA sequence, which should be avoided as value-mapping will have precedence in case its length matches with *x* & *y*.  Please use the *color* keyword-argument or provide a 2D array with a single row if you intend to specify the same RGB or RGBA value for all points.\n",
      "*c* argument looks like a single numeric RGB or RGBA sequence, which should be avoided as value-mapping will have precedence in case its length matches with *x* & *y*.  Please use the *color* keyword-argument or provide a 2D array with a single row if you intend to specify the same RGB or RGBA value for all points.\n",
      "*c* argument looks like a single numeric RGB or RGBA sequence, which should be avoided as value-mapping will have precedence in case its length matches with *x* & *y*.  Please use the *color* keyword-argument or provide a 2D array with a single row if you intend to specify the same RGB or RGBA value for all points.\n",
      "*c* argument looks like a single numeric RGB or RGBA sequence, which should be avoided as value-mapping will have precedence in case its length matches with *x* & *y*.  Please use the *color* keyword-argument or provide a 2D array with a single row if you intend to specify the same RGB or RGBA value for all points.\n",
      "*c* argument looks like a single numeric RGB or RGBA sequence, which should be avoided as value-mapping will have precedence in case its length matches with *x* & *y*.  Please use the *color* keyword-argument or provide a 2D array with a single row if you intend to specify the same RGB or RGBA value for all points.\n",
      "*c* argument looks like a single numeric RGB or RGBA sequence, which should be avoided as value-mapping will have precedence in case its length matches with *x* & *y*.  Please use the *color* keyword-argument or provide a 2D array with a single row if you intend to specify the same RGB or RGBA value for all points.\n",
      "*c* argument looks like a single numeric RGB or RGBA sequence, which should be avoided as value-mapping will have precedence in case its length matches with *x* & *y*.  Please use the *color* keyword-argument or provide a 2D array with a single row if you intend to specify the same RGB or RGBA value for all points.\n",
      "*c* argument looks like a single numeric RGB or RGBA sequence, which should be avoided as value-mapping will have precedence in case its length matches with *x* & *y*.  Please use the *color* keyword-argument or provide a 2D array with a single row if you intend to specify the same RGB or RGBA value for all points.\n",
      "*c* argument looks like a single numeric RGB or RGBA sequence, which should be avoided as value-mapping will have precedence in case its length matches with *x* & *y*.  Please use the *color* keyword-argument or provide a 2D array with a single row if you intend to specify the same RGB or RGBA value for all points.\n",
      "*c* argument looks like a single numeric RGB or RGBA sequence, which should be avoided as value-mapping will have precedence in case its length matches with *x* & *y*.  Please use the *color* keyword-argument or provide a 2D array with a single row if you intend to specify the same RGB or RGBA value for all points.\n",
      "*c* argument looks like a single numeric RGB or RGBA sequence, which should be avoided as value-mapping will have precedence in case its length matches with *x* & *y*.  Please use the *color* keyword-argument or provide a 2D array with a single row if you intend to specify the same RGB or RGBA value for all points.\n",
      "*c* argument looks like a single numeric RGB or RGBA sequence, which should be avoided as value-mapping will have precedence in case its length matches with *x* & *y*.  Please use the *color* keyword-argument or provide a 2D array with a single row if you intend to specify the same RGB or RGBA value for all points.\n",
      "*c* argument looks like a single numeric RGB or RGBA sequence, which should be avoided as value-mapping will have precedence in case its length matches with *x* & *y*.  Please use the *color* keyword-argument or provide a 2D array with a single row if you intend to specify the same RGB or RGBA value for all points.\n",
      "*c* argument looks like a single numeric RGB or RGBA sequence, which should be avoided as value-mapping will have precedence in case its length matches with *x* & *y*.  Please use the *color* keyword-argument or provide a 2D array with a single row if you intend to specify the same RGB or RGBA value for all points.\n",
      "*c* argument looks like a single numeric RGB or RGBA sequence, which should be avoided as value-mapping will have precedence in case its length matches with *x* & *y*.  Please use the *color* keyword-argument or provide a 2D array with a single row if you intend to specify the same RGB or RGBA value for all points.\n",
      "*c* argument looks like a single numeric RGB or RGBA sequence, which should be avoided as value-mapping will have precedence in case its length matches with *x* & *y*.  Please use the *color* keyword-argument or provide a 2D array with a single row if you intend to specify the same RGB or RGBA value for all points.\n",
      "*c* argument looks like a single numeric RGB or RGBA sequence, which should be avoided as value-mapping will have precedence in case its length matches with *x* & *y*.  Please use the *color* keyword-argument or provide a 2D array with a single row if you intend to specify the same RGB or RGBA value for all points.\n",
      "*c* argument looks like a single numeric RGB or RGBA sequence, which should be avoided as value-mapping will have precedence in case its length matches with *x* & *y*.  Please use the *color* keyword-argument or provide a 2D array with a single row if you intend to specify the same RGB or RGBA value for all points.\n",
      "*c* argument looks like a single numeric RGB or RGBA sequence, which should be avoided as value-mapping will have precedence in case its length matches with *x* & *y*.  Please use the *color* keyword-argument or provide a 2D array with a single row if you intend to specify the same RGB or RGBA value for all points.\n",
      "*c* argument looks like a single numeric RGB or RGBA sequence, which should be avoided as value-mapping will have precedence in case its length matches with *x* & *y*.  Please use the *color* keyword-argument or provide a 2D array with a single row if you intend to specify the same RGB or RGBA value for all points.\n",
      "*c* argument looks like a single numeric RGB or RGBA sequence, which should be avoided as value-mapping will have precedence in case its length matches with *x* & *y*.  Please use the *color* keyword-argument or provide a 2D array with a single row if you intend to specify the same RGB or RGBA value for all points.\n",
      "*c* argument looks like a single numeric RGB or RGBA sequence, which should be avoided as value-mapping will have precedence in case its length matches with *x* & *y*.  Please use the *color* keyword-argument or provide a 2D array with a single row if you intend to specify the same RGB or RGBA value for all points.\n",
      "*c* argument looks like a single numeric RGB or RGBA sequence, which should be avoided as value-mapping will have precedence in case its length matches with *x* & *y*.  Please use the *color* keyword-argument or provide a 2D array with a single row if you intend to specify the same RGB or RGBA value for all points.\n",
      "*c* argument looks like a single numeric RGB or RGBA sequence, which should be avoided as value-mapping will have precedence in case its length matches with *x* & *y*.  Please use the *color* keyword-argument or provide a 2D array with a single row if you intend to specify the same RGB or RGBA value for all points.\n",
      "*c* argument looks like a single numeric RGB or RGBA sequence, which should be avoided as value-mapping will have precedence in case its length matches with *x* & *y*.  Please use the *color* keyword-argument or provide a 2D array with a single row if you intend to specify the same RGB or RGBA value for all points.\n",
      "*c* argument looks like a single numeric RGB or RGBA sequence, which should be avoided as value-mapping will have precedence in case its length matches with *x* & *y*.  Please use the *color* keyword-argument or provide a 2D array with a single row if you intend to specify the same RGB or RGBA value for all points.\n",
      "*c* argument looks like a single numeric RGB or RGBA sequence, which should be avoided as value-mapping will have precedence in case its length matches with *x* & *y*.  Please use the *color* keyword-argument or provide a 2D array with a single row if you intend to specify the same RGB or RGBA value for all points.\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "[16.65024244         nan         nan 18.80793958 53.20947614 11.5970394\n",
      "         nan         nan 58.0132205          nan         nan 23.4388822\n",
      "         nan         nan 10.32617795 12.82175851 18.28869694  8.60450207\n",
      " 23.64799511         nan         nan 17.41143352         nan  5.65496381\n",
      " 24.45805942 40.85051525  5.04413615         nan         nan 33.6047277\n",
      "         nan         nan  8.1991444  17.00844808         nan 17.67059517\n",
      "         nan         nan  7.0735883          nan         nan 12.43719812\n",
      " 13.48076162         nan  9.21741186 38.06618452         nan         nan\n",
      " 12.17121824 13.93859095 21.10307646         nan 30.31631075 28.28250065\n",
      " 20.68303958 23.92731761 12.0686564          nan 10.09486033 40.3386572\n",
      "  8.74018949 11.21601834         nan  9.39718486 16.4251605  18.66600773\n",
      " 10.34000731 20.5843767  11.81142257 12.28352627         nan         nan\n",
      "         nan         nan         nan         nan         nan         nan\n",
      "         nan         nan         nan         nan         nan         nan\n",
      "         nan         nan         nan         nan         nan         nan\n",
      "         nan         nan         nan         nan         nan         nan\n",
      "         nan         nan         nan         nan         nan         nan\n",
      "         nan         nan         nan         nan         nan         nan\n",
      "         nan         nan         nan         nan         nan         nan\n",
      "         nan         nan         nan         nan         nan         nan\n",
      "         nan         nan         nan         nan         nan]\n",
      "44 125 25\n",
      "[26.26068116         nan         nan  4.38366499         nan 50.12968092\n",
      " 33.94865927         nan         nan         nan         nan         nan\n",
      " 20.13725902         nan         nan         nan         nan 47.88075398\n",
      "         nan         nan         nan         nan         nan         nan\n",
      "         nan         nan         nan         nan         nan         nan\n",
      "         nan         nan         nan         nan         nan         nan\n",
      "         nan         nan         nan         nan         nan         nan\n",
      "         nan         nan         nan         nan         nan         nan\n",
      "         nan         nan         nan         nan         nan         nan\n",
      "         nan         nan         nan         nan         nan         nan\n",
      "         nan         nan         nan         nan         nan         nan\n",
      "         nan         nan         nan         nan         nan         nan\n",
      "         nan         nan         nan         nan         nan         nan\n",
      "         nan         nan         nan         nan         nan         nan\n",
      "         nan         nan         nan         nan         nan         nan\n",
      "         nan         nan         nan         nan]\n",
      "6 94 38\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "*c* argument looks like a single numeric RGB or RGBA sequence, which should be avoided as value-mapping will have precedence in case its length matches with *x* & *y*.  Please use the *color* keyword-argument or provide a 2D array with a single row if you intend to specify the same RGB or RGBA value for all points.\n",
      "*c* argument looks like a single numeric RGB or RGBA sequence, which should be avoided as value-mapping will have precedence in case its length matches with *x* & *y*.  Please use the *color* keyword-argument or provide a 2D array with a single row if you intend to specify the same RGB or RGBA value for all points.\n",
      "*c* argument looks like a single numeric RGB or RGBA sequence, which should be avoided as value-mapping will have precedence in case its length matches with *x* & *y*.  Please use the *color* keyword-argument or provide a 2D array with a single row if you intend to specify the same RGB or RGBA value for all points.\n",
      "*c* argument looks like a single numeric RGB or RGBA sequence, which should be avoided as value-mapping will have precedence in case its length matches with *x* & *y*.  Please use the *color* keyword-argument or provide a 2D array with a single row if you intend to specify the same RGB or RGBA value for all points.\n",
      "*c* argument looks like a single numeric RGB or RGBA sequence, which should be avoided as value-mapping will have precedence in case its length matches with *x* & *y*.  Please use the *color* keyword-argument or provide a 2D array with a single row if you intend to specify the same RGB or RGBA value for all points.\n",
      "*c* argument looks like a single numeric RGB or RGBA sequence, which should be avoided as value-mapping will have precedence in case its length matches with *x* & *y*.  Please use the *color* keyword-argument or provide a 2D array with a single row if you intend to specify the same RGB or RGBA value for all points.\n",
      "*c* argument looks like a single numeric RGB or RGBA sequence, which should be avoided as value-mapping will have precedence in case its length matches with *x* & *y*.  Please use the *color* keyword-argument or provide a 2D array with a single row if you intend to specify the same RGB or RGBA value for all points.\n",
      "*c* argument looks like a single numeric RGB or RGBA sequence, which should be avoided as value-mapping will have precedence in case its length matches with *x* & *y*.  Please use the *color* keyword-argument or provide a 2D array with a single row if you intend to specify the same RGB or RGBA value for all points.\n",
      "*c* argument looks like a single numeric RGB or RGBA sequence, which should be avoided as value-mapping will have precedence in case its length matches with *x* & *y*.  Please use the *color* keyword-argument or provide a 2D array with a single row if you intend to specify the same RGB or RGBA value for all points.\n",
      "*c* argument looks like a single numeric RGB or RGBA sequence, which should be avoided as value-mapping will have precedence in case its length matches with *x* & *y*.  Please use the *color* keyword-argument or provide a 2D array with a single row if you intend to specify the same RGB or RGBA value for all points.\n",
      "*c* argument looks like a single numeric RGB or RGBA sequence, which should be avoided as value-mapping will have precedence in case its length matches with *x* & *y*.  Please use the *color* keyword-argument or provide a 2D array with a single row if you intend to specify the same RGB or RGBA value for all points.\n",
      "*c* argument looks like a single numeric RGB or RGBA sequence, which should be avoided as value-mapping will have precedence in case its length matches with *x* & *y*.  Please use the *color* keyword-argument or provide a 2D array with a single row if you intend to specify the same RGB or RGBA value for all points.\n",
      "*c* argument looks like a single numeric RGB or RGBA sequence, which should be avoided as value-mapping will have precedence in case its length matches with *x* & *y*.  Please use the *color* keyword-argument or provide a 2D array with a single row if you intend to specify the same RGB or RGBA value for all points.\n",
      "*c* argument looks like a single numeric RGB or RGBA sequence, which should be avoided as value-mapping will have precedence in case its length matches with *x* & *y*.  Please use the *color* keyword-argument or provide a 2D array with a single row if you intend to specify the same RGB or RGBA value for all points.\n",
      "*c* argument looks like a single numeric RGB or RGBA sequence, which should be avoided as value-mapping will have precedence in case its length matches with *x* & *y*.  Please use the *color* keyword-argument or provide a 2D array with a single row if you intend to specify the same RGB or RGBA value for all points.\n",
      "*c* argument looks like a single numeric RGB or RGBA sequence, which should be avoided as value-mapping will have precedence in case its length matches with *x* & *y*.  Please use the *color* keyword-argument or provide a 2D array with a single row if you intend to specify the same RGB or RGBA value for all points.\n",
      "*c* argument looks like a single numeric RGB or RGBA sequence, which should be avoided as value-mapping will have precedence in case its length matches with *x* & *y*.  Please use the *color* keyword-argument or provide a 2D array with a single row if you intend to specify the same RGB or RGBA value for all points.\n",
      "*c* argument looks like a single numeric RGB or RGBA sequence, which should be avoided as value-mapping will have precedence in case its length matches with *x* & *y*.  Please use the *color* keyword-argument or provide a 2D array with a single row if you intend to specify the same RGB or RGBA value for all points.\n",
      "*c* argument looks like a single numeric RGB or RGBA sequence, which should be avoided as value-mapping will have precedence in case its length matches with *x* & *y*.  Please use the *color* keyword-argument or provide a 2D array with a single row if you intend to specify the same RGB or RGBA value for all points.\n",
      "*c* argument looks like a single numeric RGB or RGBA sequence, which should be avoided as value-mapping will have precedence in case its length matches with *x* & *y*.  Please use the *color* keyword-argument or provide a 2D array with a single row if you intend to specify the same RGB or RGBA value for all points.\n",
      "*c* argument looks like a single numeric RGB or RGBA sequence, which should be avoided as value-mapping will have precedence in case its length matches with *x* & *y*.  Please use the *color* keyword-argument or provide a 2D array with a single row if you intend to specify the same RGB or RGBA value for all points.\n",
      "*c* argument looks like a single numeric RGB or RGBA sequence, which should be avoided as value-mapping will have precedence in case its length matches with *x* & *y*.  Please use the *color* keyword-argument or provide a 2D array with a single row if you intend to specify the same RGB or RGBA value for all points.\n",
      "*c* argument looks like a single numeric RGB or RGBA sequence, which should be avoided as value-mapping will have precedence in case its length matches with *x* & *y*.  Please use the *color* keyword-argument or provide a 2D array with a single row if you intend to specify the same RGB or RGBA value for all points.\n",
      "*c* argument looks like a single numeric RGB or RGBA sequence, which should be avoided as value-mapping will have precedence in case its length matches with *x* & *y*.  Please use the *color* keyword-argument or provide a 2D array with a single row if you intend to specify the same RGB or RGBA value for all points.\n",
      "*c* argument looks like a single numeric RGB or RGBA sequence, which should be avoided as value-mapping will have precedence in case its length matches with *x* & *y*.  Please use the *color* keyword-argument or provide a 2D array with a single row if you intend to specify the same RGB or RGBA value for all points.\n",
      "*c* argument looks like a single numeric RGB or RGBA sequence, which should be avoided as value-mapping will have precedence in case its length matches with *x* & *y*.  Please use the *color* keyword-argument or provide a 2D array with a single row if you intend to specify the same RGB or RGBA value for all points.\n",
      "*c* argument looks like a single numeric RGB or RGBA sequence, which should be avoided as value-mapping will have precedence in case its length matches with *x* & *y*.  Please use the *color* keyword-argument or provide a 2D array with a single row if you intend to specify the same RGB or RGBA value for all points.\n",
      "*c* argument looks like a single numeric RGB or RGBA sequence, which should be avoided as value-mapping will have precedence in case its length matches with *x* & *y*.  Please use the *color* keyword-argument or provide a 2D array with a single row if you intend to specify the same RGB or RGBA value for all points.\n",
      "*c* argument looks like a single numeric RGB or RGBA sequence, which should be avoided as value-mapping will have precedence in case its length matches with *x* & *y*.  Please use the *color* keyword-argument or provide a 2D array with a single row if you intend to specify the same RGB or RGBA value for all points.\n",
      "*c* argument looks like a single numeric RGB or RGBA sequence, which should be avoided as value-mapping will have precedence in case its length matches with *x* & *y*.  Please use the *color* keyword-argument or provide a 2D array with a single row if you intend to specify the same RGB or RGBA value for all points.\n",
      "*c* argument looks like a single numeric RGB or RGBA sequence, which should be avoided as value-mapping will have precedence in case its length matches with *x* & *y*.  Please use the *color* keyword-argument or provide a 2D array with a single row if you intend to specify the same RGB or RGBA value for all points.\n",
      "*c* argument looks like a single numeric RGB or RGBA sequence, which should be avoided as value-mapping will have precedence in case its length matches with *x* & *y*.  Please use the *color* keyword-argument or provide a 2D array with a single row if you intend to specify the same RGB or RGBA value for all points.\n",
      "*c* argument looks like a single numeric RGB or RGBA sequence, which should be avoided as value-mapping will have precedence in case its length matches with *x* & *y*.  Please use the *color* keyword-argument or provide a 2D array with a single row if you intend to specify the same RGB or RGBA value for all points.\n",
      "*c* argument looks like a single numeric RGB or RGBA sequence, which should be avoided as value-mapping will have precedence in case its length matches with *x* & *y*.  Please use the *color* keyword-argument or provide a 2D array with a single row if you intend to specify the same RGB or RGBA value for all points.\n",
      "*c* argument looks like a single numeric RGB or RGBA sequence, which should be avoided as value-mapping will have precedence in case its length matches with *x* & *y*.  Please use the *color* keyword-argument or provide a 2D array with a single row if you intend to specify the same RGB or RGBA value for all points.\n",
      "*c* argument looks like a single numeric RGB or RGBA sequence, which should be avoided as value-mapping will have precedence in case its length matches with *x* & *y*.  Please use the *color* keyword-argument or provide a 2D array with a single row if you intend to specify the same RGB or RGBA value for all points.\n",
      "*c* argument looks like a single numeric RGB or RGBA sequence, which should be avoided as value-mapping will have precedence in case its length matches with *x* & *y*.  Please use the *color* keyword-argument or provide a 2D array with a single row if you intend to specify the same RGB or RGBA value for all points.\n",
      "*c* argument looks like a single numeric RGB or RGBA sequence, which should be avoided as value-mapping will have precedence in case its length matches with *x* & *y*.  Please use the *color* keyword-argument or provide a 2D array with a single row if you intend to specify the same RGB or RGBA value for all points.\n",
      "*c* argument looks like a single numeric RGB or RGBA sequence, which should be avoided as value-mapping will have precedence in case its length matches with *x* & *y*.  Please use the *color* keyword-argument or provide a 2D array with a single row if you intend to specify the same RGB or RGBA value for all points.\n",
      "*c* argument looks like a single numeric RGB or RGBA sequence, which should be avoided as value-mapping will have precedence in case its length matches with *x* & *y*.  Please use the *color* keyword-argument or provide a 2D array with a single row if you intend to specify the same RGB or RGBA value for all points.\n",
      "*c* argument looks like a single numeric RGB or RGBA sequence, which should be avoided as value-mapping will have precedence in case its length matches with *x* & *y*.  Please use the *color* keyword-argument or provide a 2D array with a single row if you intend to specify the same RGB or RGBA value for all points.\n",
      "*c* argument looks like a single numeric RGB or RGBA sequence, which should be avoided as value-mapping will have precedence in case its length matches with *x* & *y*.  Please use the *color* keyword-argument or provide a 2D array with a single row if you intend to specify the same RGB or RGBA value for all points.\n",
      "*c* argument looks like a single numeric RGB or RGBA sequence, which should be avoided as value-mapping will have precedence in case its length matches with *x* & *y*.  Please use the *color* keyword-argument or provide a 2D array with a single row if you intend to specify the same RGB or RGBA value for all points.\n",
      "*c* argument looks like a single numeric RGB or RGBA sequence, which should be avoided as value-mapping will have precedence in case its length matches with *x* & *y*.  Please use the *color* keyword-argument or provide a 2D array with a single row if you intend to specify the same RGB or RGBA value for all points.\n",
      "*c* argument looks like a single numeric RGB or RGBA sequence, which should be avoided as value-mapping will have precedence in case its length matches with *x* & *y*.  Please use the *color* keyword-argument or provide a 2D array with a single row if you intend to specify the same RGB or RGBA value for all points.\n",
      "*c* argument looks like a single numeric RGB or RGBA sequence, which should be avoided as value-mapping will have precedence in case its length matches with *x* & *y*.  Please use the *color* keyword-argument or provide a 2D array with a single row if you intend to specify the same RGB or RGBA value for all points.\n",
      "*c* argument looks like a single numeric RGB or RGBA sequence, which should be avoided as value-mapping will have precedence in case its length matches with *x* & *y*.  Please use the *color* keyword-argument or provide a 2D array with a single row if you intend to specify the same RGB or RGBA value for all points.\n",
      "*c* argument looks like a single numeric RGB or RGBA sequence, which should be avoided as value-mapping will have precedence in case its length matches with *x* & *y*.  Please use the *color* keyword-argument or provide a 2D array with a single row if you intend to specify the same RGB or RGBA value for all points.\n",
      "*c* argument looks like a single numeric RGB or RGBA sequence, which should be avoided as value-mapping will have precedence in case its length matches with *x* & *y*.  Please use the *color* keyword-argument or provide a 2D array with a single row if you intend to specify the same RGB or RGBA value for all points.\n",
      "*c* argument looks like a single numeric RGB or RGBA sequence, which should be avoided as value-mapping will have precedence in case its length matches with *x* & *y*.  Please use the *color* keyword-argument or provide a 2D array with a single row if you intend to specify the same RGB or RGBA value for all points.\n",
      "*c* argument looks like a single numeric RGB or RGBA sequence, which should be avoided as value-mapping will have precedence in case its length matches with *x* & *y*.  Please use the *color* keyword-argument or provide a 2D array with a single row if you intend to specify the same RGB or RGBA value for all points.\n",
      "*c* argument looks like a single numeric RGB or RGBA sequence, which should be avoided as value-mapping will have precedence in case its length matches with *x* & *y*.  Please use the *color* keyword-argument or provide a 2D array with a single row if you intend to specify the same RGB or RGBA value for all points.\n",
      "*c* argument looks like a single numeric RGB or RGBA sequence, which should be avoided as value-mapping will have precedence in case its length matches with *x* & *y*.  Please use the *color* keyword-argument or provide a 2D array with a single row if you intend to specify the same RGB or RGBA value for all points.\n",
      "*c* argument looks like a single numeric RGB or RGBA sequence, which should be avoided as value-mapping will have precedence in case its length matches with *x* & *y*.  Please use the *color* keyword-argument or provide a 2D array with a single row if you intend to specify the same RGB or RGBA value for all points.\n",
      "*c* argument looks like a single numeric RGB or RGBA sequence, which should be avoided as value-mapping will have precedence in case its length matches with *x* & *y*.  Please use the *color* keyword-argument or provide a 2D array with a single row if you intend to specify the same RGB or RGBA value for all points.\n",
      "*c* argument looks like a single numeric RGB or RGBA sequence, which should be avoided as value-mapping will have precedence in case its length matches with *x* & *y*.  Please use the *color* keyword-argument or provide a 2D array with a single row if you intend to specify the same RGB or RGBA value for all points.\n",
      "*c* argument looks like a single numeric RGB or RGBA sequence, which should be avoided as value-mapping will have precedence in case its length matches with *x* & *y*.  Please use the *color* keyword-argument or provide a 2D array with a single row if you intend to specify the same RGB or RGBA value for all points.\n",
      "*c* argument looks like a single numeric RGB or RGBA sequence, which should be avoided as value-mapping will have precedence in case its length matches with *x* & *y*.  Please use the *color* keyword-argument or provide a 2D array with a single row if you intend to specify the same RGB or RGBA value for all points.\n",
      "*c* argument looks like a single numeric RGB or RGBA sequence, which should be avoided as value-mapping will have precedence in case its length matches with *x* & *y*.  Please use the *color* keyword-argument or provide a 2D array with a single row if you intend to specify the same RGB or RGBA value for all points.\n",
      "*c* argument looks like a single numeric RGB or RGBA sequence, which should be avoided as value-mapping will have precedence in case its length matches with *x* & *y*.  Please use the *color* keyword-argument or provide a 2D array with a single row if you intend to specify the same RGB or RGBA value for all points.\n",
      "*c* argument looks like a single numeric RGB or RGBA sequence, which should be avoided as value-mapping will have precedence in case its length matches with *x* & *y*.  Please use the *color* keyword-argument or provide a 2D array with a single row if you intend to specify the same RGB or RGBA value for all points.\n",
      "*c* argument looks like a single numeric RGB or RGBA sequence, which should be avoided as value-mapping will have precedence in case its length matches with *x* & *y*.  Please use the *color* keyword-argument or provide a 2D array with a single row if you intend to specify the same RGB or RGBA value for all points.\n",
      "*c* argument looks like a single numeric RGB or RGBA sequence, which should be avoided as value-mapping will have precedence in case its length matches with *x* & *y*.  Please use the *color* keyword-argument or provide a 2D array with a single row if you intend to specify the same RGB or RGBA value for all points.\n",
      "*c* argument looks like a single numeric RGB or RGBA sequence, which should be avoided as value-mapping will have precedence in case its length matches with *x* & *y*.  Please use the *color* keyword-argument or provide a 2D array with a single row if you intend to specify the same RGB or RGBA value for all points.\n"
     ]
    },
    {
     "data": {
      "image/png": "",
      "text/plain": [
       "<Figure size 1368x576 with 4 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "import seaborn as sns\n",
    "import matplotlib\n",
    "import matplotlib.cm as cm\n",
    "from scipy.interpolate import CubicSpline\n",
    "\n",
    "temp_yso_arr_w51e = np.array(temp_yso_arr_w51e)\n",
    "temp_yso_arr_w51n = np.array(temp_yso_arr_w51n)\n",
    "print(temp_yso_arr_w51e)\n",
    "print(len(np.where(np.isfinite(temp_yso_arr_w51e))[0]), len(temp_yso_arr_w51e), len(temp_yso_arr_w51e)-56-len(np.where(np.isfinite(temp_yso_arr_w51e))[0]))\n",
    "print(temp_yso_arr_w51n)\n",
    "print(len(np.where(np.isfinite(temp_yso_arr_w51n))[0]), len(temp_yso_arr_w51n), len(temp_yso_arr_w51n)-50-len(np.where(np.isfinite(temp_yso_arr_w51n))[0]))\n",
    "\n",
    "#temp_yso_arr_w51e[temp_yso_arr_w51e>500]=np.nan\n",
    "#temp_yso_arr_w51n[temp_yso_arr_w51n>500]=np.nan\n",
    "\n",
    "#nonan_w51e = np.where(np.isfinite(temp_yso_arr_w51e))\n",
    "#nonan_w51n = np.where(np.isfinite(temp_yso_arr_w51n))\n",
    "\n",
    "#nan_w51e = np.where(~np.isfinite(temp_yso_arr_w51e))\n",
    "#nan_w51n = np.where(~np.isfinite(temp_yso_arr_w51n))\n",
    "\n",
    "\n",
    "\"\"\"\n",
    "w51e_b3_flux_rescaled_err_nonan = np.array(list(zip(w51e_b3_flux_rescaled_int.to(u.Jy).value[nonan_w51e]-w51e_b3_flux_low_rescaled_int.to(u.Jy).value[nonan_w51e],\n",
    "                                              w51e_b3_flux_upp_rescaled_int.to(u.Jy).value[nonan_w51e]-w51e_b3_flux_rescaled_int.to(u.Jy).value[nonan_w51e])))\n",
    "w51e_b3_flux_rescaled_err_nonan = np.array([[w51e_b3_flux_rescaled_int.to(u.Jy).value[nonan_w51e]-w51e_b3_flux_low_rescaled_int.to(u.Jy).value[nonan_w51e]\n",
    "                                             ,w51e_b3_flux_upp_rescaled_int.to(u.Jy).value[nonan_w51e]-w51e_b3_flux_rescaled_int.to(u.Jy).value[nonan_w51e]]]).T\n",
    "\n",
    "w51e_b6_flux_rescaled_err_nonan = np.array(list(zip(w51e_b6_flux_rescaled_int.to(u.Jy).value[nonan_w51e]-w51e_b6_flux_low_rescaled_int.to(u.Jy).value[nonan_w51e],\n",
    "                                              w51e_b6_flux_upp_rescaled_int.to(u.Jy).value[nonan_w51e]-w51e_b6_flux_rescaled_int.to(u.Jy).value[nonan_w51e]))).T\n",
    "w51e_b6_flux_rescaled_err_nonan = np.array([[w51e_b6_flux_rescaled_int.to(u.Jy).value[nonan_w51e]-w51e_b6_flux_low_rescaled_int.to(u.Jy).value[nonan_w51e]\n",
    "                                             ,w51e_b6_flux_upp_rescaled_int.to(u.Jy).value[nonan_w51e]-w51e_b6_flux_rescaled_int.to(u.Jy).value[nonan_w51e]]]).T\n",
    "\n",
    "w51n_b3_flux_rescaled_err_nonan = np.array(list(zip(w51n_b3_flux_rescaled_int.to(u.Jy).value[nonan_w51n]-w51n_b3_flux_low_rescaled_int.to(u.Jy).value[nonan_w51n],\n",
    "                                              w51n_b3_flux_upp_rescaled_int.to(u.Jy).value[nonan_w51n]-w51n_b3_flux_rescaled_int.to(u.Jy).value[nonan_w51n]))).T\n",
    "w51n_b3_flux_rescaled_err_nonan = np.array([[w51n_b3_flux_rescaled_int.to(u.Jy).value[nonan_w51n]-w51n_b3_flux_low_rescaled_int.to(u.Jy).value[nonan_w51n]\n",
    "                                             ,w51n_b3_flux_upp_rescaled_int.to(u.Jy).value[nonan_w51n]-w51n_b3_flux_rescaled_int.to(u.Jy).value[nonan_w51n]]]).T\n",
    "w51n_b6_flux_rescaled_err_nonan = np.array(list(zip(w51n_b6_flux_rescaled_int.to(u.Jy).value[nonan_w51n]-w51n_b6_flux_low_rescaled_int.to(u.Jy).value[nonan_w51n],\n",
    "                                              w51n_b6_flux_upp_rescaled_int.to(u.Jy).value[nonan_w51n]-w51n_b6_flux_rescaled_int.to(u.Jy).value[nonan_w51n]))).T\n",
    "w51n_b6_flux_rescaled_err_nonan = np.array([[w51n_b6_flux_rescaled_int.to(u.Jy).value[nonan_w51n]-w51n_b6_flux_low_rescaled_int.to(u.Jy).value[nonan_w51n]\n",
    "                                             ,w51n_b6_flux_upp_rescaled_int.to(u.Jy).value[nonan_w51n]-w51n_b6_flux_rescaled_int.to(u.Jy).value[nonan_w51n]]]).T\n",
    "\n",
    "\n",
    "w51e_b3_flux_rescaled_err_nan = np.array(list(zip(w51e_b3_flux_rescaled_int.to(u.Jy).value[nan_w51e]-w51e_b3_flux_low_rescaled_int.to(u.Jy).value[nan_w51e],\n",
    "                                              w51e_b3_flux_upp_rescaled_int.to(u.Jy).value[nan_w51e]-w51e_b3_flux_rescaled_int.to(u.Jy).value[nan_w51e]))).T\n",
    "\n",
    "w51e_b6_flux_rescaled_err_nan = np.array(list(zip(w51e_b6_flux_rescaled_int.to(u.Jy).value[nan_w51e]-w51e_b6_flux_low_rescaled_int.to(u.Jy).value[nan_w51e],\n",
    "                                              w51e_b6_flux_upp_rescaled_int.to(u.Jy).value[nan_w51e]-w51e_b6_flux_rescaled_int.to(u.Jy).value[nan_w51e]))).T\n",
    "\n",
    "w51n_b3_flux_rescaled_err_nan = np.array(list(zip(w51n_b3_flux_rescaled_int.to(u.Jy).value[nan_w51n]-w51n_b3_flux_low_rescaled_int.to(u.Jy).value[nan_w51n],\n",
    "                                              w51n_b3_flux_upp_rescaled_int.to(u.Jy).value[nan_w51n]-w51n_b3_flux_rescaled_int.to(u.Jy).value[nan_w51n]))).T\n",
    "\n",
    "w51n_b6_flux_rescaled_err_nan = np.array(list(zip(w51n_b6_flux_rescaled_int.to(u.Jy).value[nan_w51n]-w51n_b6_flux_low_rescaled_int.to(u.Jy).value[nan_w51n],\n",
    "                                              w51n_b6_flux_upp_rescaled_int.to(u.Jy).value[nan_w51n]-w51n_b6_flux_rescaled_int.to(u.Jy).value[nan_w51n]))).T\n",
    "\"\"\"\n",
    "cmap = sns.color_palette(\"YlOrBr_r\", as_cmap=True)\n",
    "norm = matplotlib.colors.Normalize(vmin=0, vmax=100, clip=True)\n",
    "mapper = cm.ScalarMappable(norm=norm, cmap=cmap)\n",
    "color_w51e = np.array([(mapper.to_rgba(v)) for v in temp_yso_arr_w51e])\n",
    "color_w51n = np.array([(mapper.to_rgba(v)) for v in temp_yso_arr_w51n])\n",
    "\n",
    "fig = plt.figure(figsize=(19,8))\n",
    "ax1 = fig.add_axes([0.1,0.15,0.4,0.77])\n",
    "ax2 = fig.add_axes([0.55,0.15,0.4,0.77])\n",
    "\n",
    "sc=ax1.scatter(w51e_b3_flux_rescaled_int.to(u.Jy).value, w51e_b6_flux_rescaled_int.to(u.Jy).value,s=0,\n",
    "              c=temp_yso_arr_w51e,vmin=0,vmax=100,cmap=cmap)\n",
    "\n",
    "def plot_flux_flux_temp(ax, b3flux, b6flux, b3fluxerr, b6fluxerr, color, idxlist, lws=[4,1,1,1],\n",
    "                        label='W51-E', markerlist=['o','^', '>', 'D'], sizelist=[20,10,10,10], uplimarr=[False,True,True, True], lolimarr=[False,False,True,True]):\n",
    "    for idx, marker, size, uplim, lolim, lw in zip(idxlist, markerlist, sizelist, uplimarr, lolimarr, lws):\n",
    "        for x, y, xerr, yerr, c,  in zip(b3flux[idx], \n",
    "                                    b6flux[idx],\n",
    "                                    b3fluxerr[idx],\n",
    "                                    b6fluxerr[idx],\n",
    "                                    color[idx], \n",
    "                                   ):\n",
    "            ax.errorbar(x,y, \n",
    "                    xerr=xerr, \n",
    "                    yerr=yerr,\n",
    "                    fmt=marker, c=c, \n",
    "                    ecolor='k', elinewidth=1, mec='k',ms=size,zorder=50)\n",
    "            ax.scatter(x,y, edgecolor='k',lw=lw, marker=marker,zorder=0,s=size**2,c=c)\n",
    "\n",
    "idxlist_w51e = [w51e_b3_res_b6_res, w51e_b3_res_b6_unres, w51e_b3_unres_b6_res , w51e_b3_unres_b6_unres   ]\n",
    "\n",
    "plot_flux_flux_temp(ax1, w51e_b3_flux_rescaled_int.to(u.Jy).value, w51e_b6_flux_rescaled_int.to(u.Jy).value, \n",
    "                    w51e_b3_flux_err_rescaled_int, w51e_b3_flux_err_rescaled_int, color_w51e, idxlist_w51e,\n",
    "                        label='W51-E',)\n",
    "idxlist_w51n = [w51n_b3_res_b6_res, w51n_b3_res_b6_unres, w51n_b3_unres_b6_res , w51n_b3_unres_b6_unres   ]\n",
    "    \n",
    "plot_flux_flux_temp(ax2, w51n_b3_flux_rescaled_int.to(u.Jy).value, w51n_b6_flux_rescaled_int.to(u.Jy).value, \n",
    "                    w51n_b3_flux_err_rescaled_int, w51n_b3_flux_err_rescaled_int, color_w51n, idxlist_w51n,\n",
    "                        label='W51-IRS2',)\n",
    "\n",
    "axins1 = inset_axes(\n",
    "    ax1,\n",
    "    width=\"30%\",  # width: 50% of parent_bbox width\n",
    "    height=\"5%\",  # height: 5%\n",
    "    loc=\"upper left\", borderpad=2.5\n",
    "    )\n",
    "axins1.xaxis.set_ticks_position(\"bottom\")\n",
    "axcbr = fig.colorbar(sc, cax=axins1, orientation=\"horizontal\", ticks=[0, 50, 100])\n",
    "axcbr.set_label('Temperature (K)')\n",
    "axins2 = inset_axes(\n",
    "    ax2,\n",
    "    width=\"30%\",  # width: 50% of parent_bbox width\n",
    "    height=\"5%\",  # height: 5%\n",
    "    loc=\"upper left\",borderpad=2.5\n",
    "    )\n",
    "axins2.xaxis.set_ticks_position(\"bottom\")\n",
    "axcbr = fig.colorbar(sc, cax=axins2, orientation=\"horizontal\", ticks=[0, 50, 100])\n",
    "axcbr.set_label('Temperature (K)')\n",
    "\n",
    "\"\"\"\n",
    "b3freq = 92982346121.91989 \n",
    "b6freq = 226691598706.70853\n",
    "spectral_indices=[-1,0,1,2,3,4]\n",
    "for si in spectral_indices:\n",
    "    ax1.plot([1e-5,1e-1],10**(np.log10([1e-5,1e-1]) - np.log10(b3freq/b6freq) * si), c='grey',ls='dashed')\n",
    "ax1.text(1e-3,3e-2,r'$\\alpha=4$',rotation=50,fontsize=14,c='gray')\n",
    "\n",
    "ax1.text(1.5e-2,5e-3,r'$\\alpha=-1$',rotation=50,fontsize=14,c='gray')\n",
    "\"\"\"\n",
    "b3flux_5 = get_bb_intensity(freq93, surf_den, 5*u.K)\n",
    "b6flux_5 = get_bb_intensity(freq225, surf_den, 5*u.K)\n",
    "\n",
    "b3flux_lowlimit_curve_over1 = get_bb_intensity(freq93, surf_den[-1], np.arange(2,400,1)*u.K)\n",
    "b6flux_lowlimit_curve_over1 = get_bb_intensity(freq225, surf_den[-1], np.arange(2,400,1)*u.K)\n",
    "b3flux_lowlimit_curve = np.concatenate((b3flux_5.value, b3flux_lowlimit_curve_over1.value))\n",
    "b6flux_lowlimit_curve = np.concatenate((b6flux_5.value, b6flux_lowlimit_curve_over1.value))\n",
    "b3flux_400 = get_bb_intensity(freq93, surf_den, 400*u.K)\n",
    "b6flux_400 = get_bb_intensity(freq225, surf_den, 400*u.K)\n",
    "\n",
    "interp = CubicSpline(b3flux_400.value, b6flux_400.value)\n",
    "\n",
    "ax1.fill_between(b3flux_lowlimit_curve, b6flux_lowlimit_curve, interp(b3flux_lowlimit_curve), color='chartreuse', alpha=0.3,label='modified blackbody T=5-400K')\n",
    "ax2.fill_between(b3flux_lowlimit_curve, b6flux_lowlimit_curve, interp(b3flux_lowlimit_curve), color='chartreuse', alpha=0.3)\n",
    "\n",
    "\n",
    "b3flux_20 = get_bb_intensity(freq93, surf_den, 20*u.K)\n",
    "b6flux_20 = get_bb_intensity(freq225, surf_den, 20*u.K)\n",
    "\n",
    "b3flux_40 = get_bb_intensity(freq93, surf_den, 40*u.K)\n",
    "b6flux_40 = get_bb_intensity(freq225, surf_den, 40*u.K)\n",
    "\n",
    "b3flux_60 = get_bb_intensity(freq93, surf_den, 60*u.K)\n",
    "b6flux_60 = get_bb_intensity(freq225, surf_den, 60*u.K)\n",
    "\n",
    "b3flux_80 = get_bb_intensity(freq93, surf_den, 80*u.K)\n",
    "b6flux_80 = get_bb_intensity(freq225, surf_den, 80*u.K)\n",
    "\n",
    "ax1.plot(b3flux_20, b6flux_20, c='r', ls='dotted',lw=3)\n",
    "ax1.plot(b3flux_40, b6flux_40, c='magenta', ls='dotted',lw=3)\n",
    "ax1.plot(b3flux_60, b6flux_60, c='orange', ls='dotted',lw=3)\n",
    "ax1.plot(b3flux_80, b6flux_80, c='dodgerblue', ls='dotted',lw=3)\n",
    "\n",
    "ax2.plot(b3flux_20, b6flux_20, c='r', ls='dotted',lw=3)\n",
    "ax2.plot(b3flux_40, b6flux_40, c='magenta', ls='dotted',lw=3)\n",
    "ax2.plot(b3flux_60, b6flux_60, c='orange', ls='dotted',lw=3)\n",
    "ax2.plot(b3flux_80, b6flux_80, c='dodgerblue', ls='dotted',lw=3)\n",
    "ax2.text(1.2*b3flux_20[-1].value,0.95*b6flux_20[-1].value, '20K', fontsize=20,color='r')\n",
    "ax2.text(1.2*b3flux_40[-1].value,0.95*b6flux_40[-1].value, '40K', fontsize=20,color='magenta')\n",
    "\n",
    "ax2.text(1.2*b3flux_60[-1].value,0.95*b6flux_60[-1].value, '60K', fontsize=20,color='orange')\n",
    "ax2.text(1.2*b3flux_80[-1].value,1.05*b6flux_80[-1].value, '80K', fontsize=20,color='dodgerblue')\n",
    "\n",
    "#ax1.text(1.5e-3,7e-3,r'$T=100\\,{\\rm K}$',c='dodgerblue',fontsize=13)\n",
    "#ax1.text(8e-4,3.5e-3,r'$T=50\\,{\\rm K}$',c='magenta',fontsize=13)\n",
    "#ax1.text(3e-4,1e-3,r'$T=20\\,{\\rm K}$',c='r',fontsize=13)\n",
    "ax1.set_xscale('log')\n",
    "ax1.set_yscale('log')\n",
    "ax1.set_xlabel('3mm surface brightness (Jy/arcsec$^2$)')\n",
    "ax1.set_ylabel('1.3mm surface brightness (Jy/arcsec$^2$)')\n",
    "#ax1.set_xlabel(r'$S_{\\rm 3mm}$ $({\\rm Jy\\,arcsec^{-2}})$')\n",
    "#ax1.set_ylabel(r'$S_{\\rm 1.3mm, conv}$ $({\\rm Jy\\,arcsec^{-2}})$')\n",
    "ax2.set_xscale('log')\n",
    "ax2.set_yscale('log')\n",
    "ax2.set_xlabel('3mm surface brightness (Jy/arcsec$^2$)')\n",
    "#ax2.set_xlabel(r'$S_{\\rm 3mm}$ $({\\rm Jy\\,arcsec^{-2}})$')\n",
    "#ax2.set_ylabel(r'$S_{\\rm int, 1.3mm}$ (Jy)')\n",
    "\n",
    "ax1.set_title('W51-E', fontsize=40)\n",
    "ax2.set_title('W51-IRS2', fontsize=40)\n",
    "ax1.set_xlim(1e-2,5e1)\n",
    "ax1.set_ylim(5e-2,1e1)\n",
    "ax2.set_xlim(1e-2,5e1)\n",
    "ax2.set_ylim(5e-2,1e1)\n",
    "\n",
    "#ax1.set_xlim(1e9,1e13)\n",
    "#ax1.set_ylim(1e10,5e12)\n",
    "#ax2.set_xlim(1e9,1e13)\n",
    "#ax2.set_ylim(1e10,5e12)\n",
    "ax2.set_yticks([])\n",
    "b3freq = 92982346121.91989 \n",
    "b6freq = 226691598706.70853\n",
    "spectral_indices=[-1,0,1,2,3,4]\n",
    "for si in spectral_indices:\n",
    "    ax1.plot([1e-2,1e2],10**(np.log10([1e-2,1e2]) - np.log10(b3freq/b6freq) * si), c='grey',ls='dashed')\n",
    "    ax2.plot([1e-2,1e2],10**(np.log10([1e-2,1e2]) - np.log10(b3freq/b6freq) * si), c='grey',ls='dashed')\n",
    "\n",
    "ax1.scatter([-1,-1],[-1,-1], c=mapper.to_rgba(10), s=20**2, lw=4, marker='o',label='resolved in both bands',edgecolor='k')\n",
    "ax1.scatter([-1,-1],[-1,-1], c=mapper.to_rgba(10), s=10**2, lw=1, marker='^',label='resolved in Band 3 only',edgecolor='k') \n",
    "ax1.scatter([-1,-1],[-1,-1], c=mapper.to_rgba(10), s=10**2, lw=1, marker='>',label='resolved in Band 6 only',edgecolor='k') \n",
    "ax1.scatter([-1,-1],[-1,-1], c=mapper.to_rgba(10), s=10**2, lw=1, marker='D',label='unresolved in both bands',edgecolor='k') \n",
    "\n",
    "ax1.legend(fontsize=16, frameon=False, loc='lower right')\n",
    "    \n",
    "    \n",
    "\n",
    "ax1.text(0.03,1.5,r'$\\alpha=4$',rotation=55,fontsize=20)\n",
    "ax1.text(1,0.3,r'$\\alpha=-1$',rotation=55,fontsize=20)\n",
    "ax2.text(0.03,1.5,r'$\\alpha=4$',rotation=55,fontsize=20)\n",
    "ax2.text(1,0.3,r'$\\alpha=-1$',rotation=55,fontsize=20)\n",
    "plt.savefig('fluxflux_temp.png')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 7,
   "id": "dd223640",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2025-07-15T14:40:40.943014Z",
     "iopub.status.busy": "2025-07-15T14:40:40.942818Z",
     "iopub.status.idle": "2025-07-15T14:40:41.170943Z",
     "shell.execute_reply": "2025-07-15T14:40:41.170538Z"
    }
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "19.044800469926937 30.456783222661855\n",
      "19.044800469926937 30.456783222661855\n",
      "16.537701467441174 30.10467021564039\n",
      "36\n",
      "125 44 94 6\n"
     ]
    },
    {
     "data": {
      "image/png": "",
      "text/plain": [
       "<Figure size 576x576 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "fig = plt.figure(figsize=(8,8))\n",
    "ax3 = fig.add_axes([0.15,0.15,0.83,0.83])\n",
    "tempbin = np.linspace(0,70,15)\n",
    "ax3.hist(temp_yso_arr_w51e[w51e_b3_res_b6_res], bins=tempbin,  histtype='step', color=sns.color_palette('colorblind')[0], label='W51-E (resolved)',lw=4, hatch='/')\n",
    "ax3.hist(temp_yso_arr_w51n[w51n_b3_res_b6_res], bins=tempbin,  histtype='step',color=sns.color_palette('colorblind')[1], label='W51-IRS2 (resolved)',hatch='\\\\',lw=4)\n",
    "\n",
    "unresolveds_w51e = np.logical_or(np.logical_or(w51e_b3_res_b6_unres, w51e_b3_unres_b6_res), w51e_b3_unres_b6_unres)\n",
    "unresolveds_w51n = np.logical_or(np.logical_or(w51n_b3_res_b6_unres, w51n_b3_unres_b6_res), w51n_b3_unres_b6_unres)\n",
    "ax3.hist(temp_yso_arr_w51e[unresolveds_w51e], bins=tempbin,   facecolor='cyan', alpha=0.4,label='W51-E (unresolved)')\n",
    "ax3.hist(temp_yso_arr_w51n[unresolveds_w51n], bins=tempbin,  facecolor='orange', alpha=0.4,label='W51-IRS2 (unresolved)')\n",
    "\n",
    "print(np.nanmean(temp_yso_arr_w51e), np.nanmean(temp_yso_arr_w51n))\n",
    "print(np.nanmean(temp_yso_arr_w51e), np.nanmean(temp_yso_arr_w51n))\n",
    "print(np.nanmedian(temp_yso_arr_w51e), np.nanmedian(temp_yso_arr_w51n))\n",
    "\n",
    "print(np.nanargmax(w51e_b3_flux_rescaled_int.to(u.Jy).value))\n",
    "print(len(temp_yso_arr_w51e), len(np.where(np.isfinite(temp_yso_arr_w51e))[0]), len(temp_yso_arr_w51n),len(np.where(np.isfinite(temp_yso_arr_w51n))[0]))\n",
    "ax3.legend(fontsize=20, frameon=False)\n",
    "ax3.set_xlabel('modified blackbody temperature (K)')\n",
    "ax3.set_ylabel('number')\n",
    "#ax3.set_yticks([5,10,15])\n",
    "\n",
    "plt.savefig('temp_hist.png')\n",
    "\n",
    "\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 8,
   "id": "66091885",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2025-07-15T14:40:41.173252Z",
     "iopub.status.busy": "2025-07-15T14:40:41.172938Z",
     "iopub.status.idle": "2025-07-15T14:40:43.736206Z",
     "shell.execute_reply": "2025-07-15T14:40:43.735679Z"
    }
   },
   "outputs": [
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "*c* argument looks like a single numeric RGB or RGBA sequence, which should be avoided as value-mapping will have precedence in case its length matches with *x* & *y*.  Please use the *color* keyword-argument or provide a 2D array with a single row if you intend to specify the same RGB or RGBA value for all points.\n",
      "*c* argument looks like a single numeric RGB or RGBA sequence, which should be avoided as value-mapping will have precedence in case its length matches with *x* & *y*.  Please use the *color* keyword-argument or provide a 2D array with a single row if you intend to specify the same RGB or RGBA value for all points.\n",
      "*c* argument looks like a single numeric RGB or RGBA sequence, which should be avoided as value-mapping will have precedence in case its length matches with *x* & *y*.  Please use the *color* keyword-argument or provide a 2D array with a single row if you intend to specify the same RGB or RGBA value for all points.\n",
      "*c* argument looks like a single numeric RGB or RGBA sequence, which should be avoided as value-mapping will have precedence in case its length matches with *x* & *y*.  Please use the *color* keyword-argument or provide a 2D array with a single row if you intend to specify the same RGB or RGBA value for all points.\n",
      "*c* argument looks like a single numeric RGB or RGBA sequence, which should be avoided as value-mapping will have precedence in case its length matches with *x* & *y*.  Please use the *color* keyword-argument or provide a 2D array with a single row if you intend to specify the same RGB or RGBA value for all points.\n",
      "*c* argument looks like a single numeric RGB or RGBA sequence, which should be avoided as value-mapping will have precedence in case its length matches with *x* & *y*.  Please use the *color* keyword-argument or provide a 2D array with a single row if you intend to specify the same RGB or RGBA value for all points.\n",
      "*c* argument looks like a single numeric RGB or RGBA sequence, which should be avoided as value-mapping will have precedence in case its length matches with *x* & *y*.  Please use the *color* keyword-argument or provide a 2D array with a single row if you intend to specify the same RGB or RGBA value for all points.\n",
      "*c* argument looks like a single numeric RGB or RGBA sequence, which should be avoided as value-mapping will have precedence in case its length matches with *x* & *y*.  Please use the *color* keyword-argument or provide a 2D array with a single row if you intend to specify the same RGB or RGBA value for all points.\n",
      "*c* argument looks like a single numeric RGB or RGBA sequence, which should be avoided as value-mapping will have precedence in case its length matches with *x* & *y*.  Please use the *color* keyword-argument or provide a 2D array with a single row if you intend to specify the same RGB or RGBA value for all points.\n",
      "*c* argument looks like a single numeric RGB or RGBA sequence, which should be avoided as value-mapping will have precedence in case its length matches with *x* & *y*.  Please use the *color* keyword-argument or provide a 2D array with a single row if you intend to specify the same RGB or RGBA value for all points.\n",
      "*c* argument looks like a single numeric RGB or RGBA sequence, which should be avoided as value-mapping will have precedence in case its length matches with *x* & *y*.  Please use the *color* keyword-argument or provide a 2D array with a single row if you intend to specify the same RGB or RGBA value for all points.\n",
      "*c* argument looks like a single numeric RGB or RGBA sequence, which should be avoided as value-mapping will have precedence in case its length matches with *x* & *y*.  Please use the *color* keyword-argument or provide a 2D array with a single row if you intend to specify the same RGB or RGBA value for all points.\n",
      "*c* argument looks like a single numeric RGB or RGBA sequence, which should be avoided as value-mapping will have precedence in case its length matches with *x* & *y*.  Please use the *color* keyword-argument or provide a 2D array with a single row if you intend to specify the same RGB or RGBA value for all points.\n",
      "*c* argument looks like a single numeric RGB or RGBA sequence, which should be avoided as value-mapping will have precedence in case its length matches with *x* & *y*.  Please use the *color* keyword-argument or provide a 2D array with a single row if you intend to specify the same RGB or RGBA value for all points.\n",
      "*c* argument looks like a single numeric RGB or RGBA sequence, which should be avoided as value-mapping will have precedence in case its length matches with *x* & *y*.  Please use the *color* keyword-argument or provide a 2D array with a single row if you intend to specify the same RGB or RGBA value for all points.\n",
      "*c* argument looks like a single numeric RGB or RGBA sequence, which should be avoided as value-mapping will have precedence in case its length matches with *x* & *y*.  Please use the *color* keyword-argument or provide a 2D array with a single row if you intend to specify the same RGB or RGBA value for all points.\n",
      "*c* argument looks like a single numeric RGB or RGBA sequence, which should be avoided as value-mapping will have precedence in case its length matches with *x* & *y*.  Please use the *color* keyword-argument or provide a 2D array with a single row if you intend to specify the same RGB or RGBA value for all points.\n",
      "*c* argument looks like a single numeric RGB or RGBA sequence, which should be avoided as value-mapping will have precedence in case its length matches with *x* & *y*.  Please use the *color* keyword-argument or provide a 2D array with a single row if you intend to specify the same RGB or RGBA value for all points.\n",
      "*c* argument looks like a single numeric RGB or RGBA sequence, which should be avoided as value-mapping will have precedence in case its length matches with *x* & *y*.  Please use the *color* keyword-argument or provide a 2D array with a single row if you intend to specify the same RGB or RGBA value for all points.\n",
      "*c* argument looks like a single numeric RGB or RGBA sequence, which should be avoided as value-mapping will have precedence in case its length matches with *x* & *y*.  Please use the *color* keyword-argument or provide a 2D array with a single row if you intend to specify the same RGB or RGBA value for all points.\n",
      "*c* argument looks like a single numeric RGB or RGBA sequence, which should be avoided as value-mapping will have precedence in case its length matches with *x* & *y*.  Please use the *color* keyword-argument or provide a 2D array with a single row if you intend to specify the same RGB or RGBA value for all points.\n",
      "*c* argument looks like a single numeric RGB or RGBA sequence, which should be avoided as value-mapping will have precedence in case its length matches with *x* & *y*.  Please use the *color* keyword-argument or provide a 2D array with a single row if you intend to specify the same RGB or RGBA value for all points.\n",
      "*c* argument looks like a single numeric RGB or RGBA sequence, which should be avoided as value-mapping will have precedence in case its length matches with *x* & *y*.  Please use the *color* keyword-argument or provide a 2D array with a single row if you intend to specify the same RGB or RGBA value for all points.\n",
      "*c* argument looks like a single numeric RGB or RGBA sequence, which should be avoided as value-mapping will have precedence in case its length matches with *x* & *y*.  Please use the *color* keyword-argument or provide a 2D array with a single row if you intend to specify the same RGB or RGBA value for all points.\n",
      "*c* argument looks like a single numeric RGB or RGBA sequence, which should be avoided as value-mapping will have precedence in case its length matches with *x* & *y*.  Please use the *color* keyword-argument or provide a 2D array with a single row if you intend to specify the same RGB or RGBA value for all points.\n",
      "*c* argument looks like a single numeric RGB or RGBA sequence, which should be avoided as value-mapping will have precedence in case its length matches with *x* & *y*.  Please use the *color* keyword-argument or provide a 2D array with a single row if you intend to specify the same RGB or RGBA value for all points.\n",
      "*c* argument looks like a single numeric RGB or RGBA sequence, which should be avoided as value-mapping will have precedence in case its length matches with *x* & *y*.  Please use the *color* keyword-argument or provide a 2D array with a single row if you intend to specify the same RGB or RGBA value for all points.\n",
      "*c* argument looks like a single numeric RGB or RGBA sequence, which should be avoided as value-mapping will have precedence in case its length matches with *x* & *y*.  Please use the *color* keyword-argument or provide a 2D array with a single row if you intend to specify the same RGB or RGBA value for all points.\n",
      "*c* argument looks like a single numeric RGB or RGBA sequence, which should be avoided as value-mapping will have precedence in case its length matches with *x* & *y*.  Please use the *color* keyword-argument or provide a 2D array with a single row if you intend to specify the same RGB or RGBA value for all points.\n",
      "*c* argument looks like a single numeric RGB or RGBA sequence, which should be avoided as value-mapping will have precedence in case its length matches with *x* & *y*.  Please use the *color* keyword-argument or provide a 2D array with a single row if you intend to specify the same RGB or RGBA value for all points.\n",
      "*c* argument looks like a single numeric RGB or RGBA sequence, which should be avoided as value-mapping will have precedence in case its length matches with *x* & *y*.  Please use the *color* keyword-argument or provide a 2D array with a single row if you intend to specify the same RGB or RGBA value for all points.\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "[16.65024244         nan         nan 18.80793958 53.20947614 11.5970394\n",
      "         nan         nan 58.0132205          nan         nan 23.4388822\n",
      "         nan         nan 10.32617795 12.82175851 18.28869694  8.60450207\n",
      " 23.64799511         nan         nan 17.41143352         nan  5.65496381\n",
      " 24.45805942 40.85051525  5.04413615         nan         nan 33.6047277\n",
      "         nan         nan  8.1991444  17.00844808         nan 17.67059517\n",
      "         nan         nan  7.0735883          nan         nan 12.43719812\n",
      " 13.48076162         nan  9.21741186 38.06618452         nan         nan\n",
      " 12.17121824 13.93859095 21.10307646         nan 30.31631075 28.28250065\n",
      " 20.68303958 23.92731761 12.0686564          nan 10.09486033 40.3386572\n",
      "  8.74018949 11.21601834         nan  9.39718486 16.4251605  18.66600773\n",
      " 10.34000731 20.5843767  11.81142257 12.28352627         nan         nan\n",
      "         nan         nan         nan         nan         nan         nan\n",
      "         nan         nan         nan         nan         nan         nan\n",
      "         nan         nan         nan         nan         nan         nan\n",
      "         nan         nan         nan         nan         nan         nan\n",
      "         nan         nan         nan         nan         nan         nan\n",
      "         nan         nan         nan         nan         nan         nan\n",
      "         nan         nan         nan         nan         nan         nan\n",
      "         nan         nan         nan         nan         nan         nan\n",
      "         nan         nan         nan         nan         nan]\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "*c* argument looks like a single numeric RGB or RGBA sequence, which should be avoided as value-mapping will have precedence in case its length matches with *x* & *y*.  Please use the *color* keyword-argument or provide a 2D array with a single row if you intend to specify the same RGB or RGBA value for all points.\n",
      "*c* argument looks like a single numeric RGB or RGBA sequence, which should be avoided as value-mapping will have precedence in case its length matches with *x* & *y*.  Please use the *color* keyword-argument or provide a 2D array with a single row if you intend to specify the same RGB or RGBA value for all points.\n",
      "*c* argument looks like a single numeric RGB or RGBA sequence, which should be avoided as value-mapping will have precedence in case its length matches with *x* & *y*.  Please use the *color* keyword-argument or provide a 2D array with a single row if you intend to specify the same RGB or RGBA value for all points.\n",
      "*c* argument looks like a single numeric RGB or RGBA sequence, which should be avoided as value-mapping will have precedence in case its length matches with *x* & *y*.  Please use the *color* keyword-argument or provide a 2D array with a single row if you intend to specify the same RGB or RGBA value for all points.\n",
      "*c* argument looks like a single numeric RGB or RGBA sequence, which should be avoided as value-mapping will have precedence in case its length matches with *x* & *y*.  Please use the *color* keyword-argument or provide a 2D array with a single row if you intend to specify the same RGB or RGBA value for all points.\n",
      "*c* argument looks like a single numeric RGB or RGBA sequence, which should be avoided as value-mapping will have precedence in case its length matches with *x* & *y*.  Please use the *color* keyword-argument or provide a 2D array with a single row if you intend to specify the same RGB or RGBA value for all points.\n",
      "*c* argument looks like a single numeric RGB or RGBA sequence, which should be avoided as value-mapping will have precedence in case its length matches with *x* & *y*.  Please use the *color* keyword-argument or provide a 2D array with a single row if you intend to specify the same RGB or RGBA value for all points.\n",
      "*c* argument looks like a single numeric RGB or RGBA sequence, which should be avoided as value-mapping will have precedence in case its length matches with *x* & *y*.  Please use the *color* keyword-argument or provide a 2D array with a single row if you intend to specify the same RGB or RGBA value for all points.\n",
      "*c* argument looks like a single numeric RGB or RGBA sequence, which should be avoided as value-mapping will have precedence in case its length matches with *x* & *y*.  Please use the *color* keyword-argument or provide a 2D array with a single row if you intend to specify the same RGB or RGBA value for all points.\n",
      "*c* argument looks like a single numeric RGB or RGBA sequence, which should be avoided as value-mapping will have precedence in case its length matches with *x* & *y*.  Please use the *color* keyword-argument or provide a 2D array with a single row if you intend to specify the same RGB or RGBA value for all points.\n",
      "*c* argument looks like a single numeric RGB or RGBA sequence, which should be avoided as value-mapping will have precedence in case its length matches with *x* & *y*.  Please use the *color* keyword-argument or provide a 2D array with a single row if you intend to specify the same RGB or RGBA value for all points.\n",
      "*c* argument looks like a single numeric RGB or RGBA sequence, which should be avoided as value-mapping will have precedence in case its length matches with *x* & *y*.  Please use the *color* keyword-argument or provide a 2D array with a single row if you intend to specify the same RGB or RGBA value for all points.\n",
      "*c* argument looks like a single numeric RGB or RGBA sequence, which should be avoided as value-mapping will have precedence in case its length matches with *x* & *y*.  Please use the *color* keyword-argument or provide a 2D array with a single row if you intend to specify the same RGB or RGBA value for all points.\n",
      "*c* argument looks like a single numeric RGB or RGBA sequence, which should be avoided as value-mapping will have precedence in case its length matches with *x* & *y*.  Please use the *color* keyword-argument or provide a 2D array with a single row if you intend to specify the same RGB or RGBA value for all points.\n",
      "*c* argument looks like a single numeric RGB or RGBA sequence, which should be avoided as value-mapping will have precedence in case its length matches with *x* & *y*.  Please use the *color* keyword-argument or provide a 2D array with a single row if you intend to specify the same RGB or RGBA value for all points.\n",
      "*c* argument looks like a single numeric RGB or RGBA sequence, which should be avoided as value-mapping will have precedence in case its length matches with *x* & *y*.  Please use the *color* keyword-argument or provide a 2D array with a single row if you intend to specify the same RGB or RGBA value for all points.\n",
      "*c* argument looks like a single numeric RGB or RGBA sequence, which should be avoided as value-mapping will have precedence in case its length matches with *x* & *y*.  Please use the *color* keyword-argument or provide a 2D array with a single row if you intend to specify the same RGB or RGBA value for all points.\n",
      "*c* argument looks like a single numeric RGB or RGBA sequence, which should be avoided as value-mapping will have precedence in case its length matches with *x* & *y*.  Please use the *color* keyword-argument or provide a 2D array with a single row if you intend to specify the same RGB or RGBA value for all points.\n",
      "*c* argument looks like a single numeric RGB or RGBA sequence, which should be avoided as value-mapping will have precedence in case its length matches with *x* & *y*.  Please use the *color* keyword-argument or provide a 2D array with a single row if you intend to specify the same RGB or RGBA value for all points.\n",
      "*c* argument looks like a single numeric RGB or RGBA sequence, which should be avoided as value-mapping will have precedence in case its length matches with *x* & *y*.  Please use the *color* keyword-argument or provide a 2D array with a single row if you intend to specify the same RGB or RGBA value for all points.\n",
      "*c* argument looks like a single numeric RGB or RGBA sequence, which should be avoided as value-mapping will have precedence in case its length matches with *x* & *y*.  Please use the *color* keyword-argument or provide a 2D array with a single row if you intend to specify the same RGB or RGBA value for all points.\n",
      "*c* argument looks like a single numeric RGB or RGBA sequence, which should be avoided as value-mapping will have precedence in case its length matches with *x* & *y*.  Please use the *color* keyword-argument or provide a 2D array with a single row if you intend to specify the same RGB or RGBA value for all points.\n",
      "*c* argument looks like a single numeric RGB or RGBA sequence, which should be avoided as value-mapping will have precedence in case its length matches with *x* & *y*.  Please use the *color* keyword-argument or provide a 2D array with a single row if you intend to specify the same RGB or RGBA value for all points.\n",
      "*c* argument looks like a single numeric RGB or RGBA sequence, which should be avoided as value-mapping will have precedence in case its length matches with *x* & *y*.  Please use the *color* keyword-argument or provide a 2D array with a single row if you intend to specify the same RGB or RGBA value for all points.\n",
      "*c* argument looks like a single numeric RGB or RGBA sequence, which should be avoided as value-mapping will have precedence in case its length matches with *x* & *y*.  Please use the *color* keyword-argument or provide a 2D array with a single row if you intend to specify the same RGB or RGBA value for all points.\n",
      "*c* argument looks like a single numeric RGB or RGBA sequence, which should be avoided as value-mapping will have precedence in case its length matches with *x* & *y*.  Please use the *color* keyword-argument or provide a 2D array with a single row if you intend to specify the same RGB or RGBA value for all points.\n",
      "*c* argument looks like a single numeric RGB or RGBA sequence, which should be avoided as value-mapping will have precedence in case its length matches with *x* & *y*.  Please use the *color* keyword-argument or provide a 2D array with a single row if you intend to specify the same RGB or RGBA value for all points.\n",
      "*c* argument looks like a single numeric RGB or RGBA sequence, which should be avoided as value-mapping will have precedence in case its length matches with *x* & *y*.  Please use the *color* keyword-argument or provide a 2D array with a single row if you intend to specify the same RGB or RGBA value for all points.\n",
      "*c* argument looks like a single numeric RGB or RGBA sequence, which should be avoided as value-mapping will have precedence in case its length matches with *x* & *y*.  Please use the *color* keyword-argument or provide a 2D array with a single row if you intend to specify the same RGB or RGBA value for all points.\n",
      "*c* argument looks like a single numeric RGB or RGBA sequence, which should be avoided as value-mapping will have precedence in case its length matches with *x* & *y*.  Please use the *color* keyword-argument or provide a 2D array with a single row if you intend to specify the same RGB or RGBA value for all points.\n",
      "*c* argument looks like a single numeric RGB or RGBA sequence, which should be avoided as value-mapping will have precedence in case its length matches with *x* & *y*.  Please use the *color* keyword-argument or provide a 2D array with a single row if you intend to specify the same RGB or RGBA value for all points.\n",
      "*c* argument looks like a single numeric RGB or RGBA sequence, which should be avoided as value-mapping will have precedence in case its length matches with *x* & *y*.  Please use the *color* keyword-argument or provide a 2D array with a single row if you intend to specify the same RGB or RGBA value for all points.\n",
      "*c* argument looks like a single numeric RGB or RGBA sequence, which should be avoided as value-mapping will have precedence in case its length matches with *x* & *y*.  Please use the *color* keyword-argument or provide a 2D array with a single row if you intend to specify the same RGB or RGBA value for all points.\n",
      "*c* argument looks like a single numeric RGB or RGBA sequence, which should be avoided as value-mapping will have precedence in case its length matches with *x* & *y*.  Please use the *color* keyword-argument or provide a 2D array with a single row if you intend to specify the same RGB or RGBA value for all points.\n",
      "*c* argument looks like a single numeric RGB or RGBA sequence, which should be avoided as value-mapping will have precedence in case its length matches with *x* & *y*.  Please use the *color* keyword-argument or provide a 2D array with a single row if you intend to specify the same RGB or RGBA value for all points.\n",
      "*c* argument looks like a single numeric RGB or RGBA sequence, which should be avoided as value-mapping will have precedence in case its length matches with *x* & *y*.  Please use the *color* keyword-argument or provide a 2D array with a single row if you intend to specify the same RGB or RGBA value for all points.\n",
      "*c* argument looks like a single numeric RGB or RGBA sequence, which should be avoided as value-mapping will have precedence in case its length matches with *x* & *y*.  Please use the *color* keyword-argument or provide a 2D array with a single row if you intend to specify the same RGB or RGBA value for all points.\n",
      "*c* argument looks like a single numeric RGB or RGBA sequence, which should be avoided as value-mapping will have precedence in case its length matches with *x* & *y*.  Please use the *color* keyword-argument or provide a 2D array with a single row if you intend to specify the same RGB or RGBA value for all points.\n",
      "*c* argument looks like a single numeric RGB or RGBA sequence, which should be avoided as value-mapping will have precedence in case its length matches with *x* & *y*.  Please use the *color* keyword-argument or provide a 2D array with a single row if you intend to specify the same RGB or RGBA value for all points.\n",
      "*c* argument looks like a single numeric RGB or RGBA sequence, which should be avoided as value-mapping will have precedence in case its length matches with *x* & *y*.  Please use the *color* keyword-argument or provide a 2D array with a single row if you intend to specify the same RGB or RGBA value for all points.\n",
      "*c* argument looks like a single numeric RGB or RGBA sequence, which should be avoided as value-mapping will have precedence in case its length matches with *x* & *y*.  Please use the *color* keyword-argument or provide a 2D array with a single row if you intend to specify the same RGB or RGBA value for all points.\n",
      "*c* argument looks like a single numeric RGB or RGBA sequence, which should be avoided as value-mapping will have precedence in case its length matches with *x* & *y*.  Please use the *color* keyword-argument or provide a 2D array with a single row if you intend to specify the same RGB or RGBA value for all points.\n",
      "*c* argument looks like a single numeric RGB or RGBA sequence, which should be avoided as value-mapping will have precedence in case its length matches with *x* & *y*.  Please use the *color* keyword-argument or provide a 2D array with a single row if you intend to specify the same RGB or RGBA value for all points.\n",
      "*c* argument looks like a single numeric RGB or RGBA sequence, which should be avoided as value-mapping will have precedence in case its length matches with *x* & *y*.  Please use the *color* keyword-argument or provide a 2D array with a single row if you intend to specify the same RGB or RGBA value for all points.\n",
      "*c* argument looks like a single numeric RGB or RGBA sequence, which should be avoided as value-mapping will have precedence in case its length matches with *x* & *y*.  Please use the *color* keyword-argument or provide a 2D array with a single row if you intend to specify the same RGB or RGBA value for all points.\n",
      "*c* argument looks like a single numeric RGB or RGBA sequence, which should be avoided as value-mapping will have precedence in case its length matches with *x* & *y*.  Please use the *color* keyword-argument or provide a 2D array with a single row if you intend to specify the same RGB or RGBA value for all points.\n",
      "*c* argument looks like a single numeric RGB or RGBA sequence, which should be avoided as value-mapping will have precedence in case its length matches with *x* & *y*.  Please use the *color* keyword-argument or provide a 2D array with a single row if you intend to specify the same RGB or RGBA value for all points.\n",
      "*c* argument looks like a single numeric RGB or RGBA sequence, which should be avoided as value-mapping will have precedence in case its length matches with *x* & *y*.  Please use the *color* keyword-argument or provide a 2D array with a single row if you intend to specify the same RGB or RGBA value for all points.\n",
      "*c* argument looks like a single numeric RGB or RGBA sequence, which should be avoided as value-mapping will have precedence in case its length matches with *x* & *y*.  Please use the *color* keyword-argument or provide a 2D array with a single row if you intend to specify the same RGB or RGBA value for all points.\n",
      "*c* argument looks like a single numeric RGB or RGBA sequence, which should be avoided as value-mapping will have precedence in case its length matches with *x* & *y*.  Please use the *color* keyword-argument or provide a 2D array with a single row if you intend to specify the same RGB or RGBA value for all points.\n",
      "*c* argument looks like a single numeric RGB or RGBA sequence, which should be avoided as value-mapping will have precedence in case its length matches with *x* & *y*.  Please use the *color* keyword-argument or provide a 2D array with a single row if you intend to specify the same RGB or RGBA value for all points.\n",
      "*c* argument looks like a single numeric RGB or RGBA sequence, which should be avoided as value-mapping will have precedence in case its length matches with *x* & *y*.  Please use the *color* keyword-argument or provide a 2D array with a single row if you intend to specify the same RGB or RGBA value for all points.\n",
      "*c* argument looks like a single numeric RGB or RGBA sequence, which should be avoided as value-mapping will have precedence in case its length matches with *x* & *y*.  Please use the *color* keyword-argument or provide a 2D array with a single row if you intend to specify the same RGB or RGBA value for all points.\n",
      "*c* argument looks like a single numeric RGB or RGBA sequence, which should be avoided as value-mapping will have precedence in case its length matches with *x* & *y*.  Please use the *color* keyword-argument or provide a 2D array with a single row if you intend to specify the same RGB or RGBA value for all points.\n",
      "*c* argument looks like a single numeric RGB or RGBA sequence, which should be avoided as value-mapping will have precedence in case its length matches with *x* & *y*.  Please use the *color* keyword-argument or provide a 2D array with a single row if you intend to specify the same RGB or RGBA value for all points.\n",
      "*c* argument looks like a single numeric RGB or RGBA sequence, which should be avoided as value-mapping will have precedence in case its length matches with *x* & *y*.  Please use the *color* keyword-argument or provide a 2D array with a single row if you intend to specify the same RGB or RGBA value for all points.\n",
      "*c* argument looks like a single numeric RGB or RGBA sequence, which should be avoided as value-mapping will have precedence in case its length matches with *x* & *y*.  Please use the *color* keyword-argument or provide a 2D array with a single row if you intend to specify the same RGB or RGBA value for all points.\n",
      "*c* argument looks like a single numeric RGB or RGBA sequence, which should be avoided as value-mapping will have precedence in case its length matches with *x* & *y*.  Please use the *color* keyword-argument or provide a 2D array with a single row if you intend to specify the same RGB or RGBA value for all points.\n",
      "*c* argument looks like a single numeric RGB or RGBA sequence, which should be avoided as value-mapping will have precedence in case its length matches with *x* & *y*.  Please use the *color* keyword-argument or provide a 2D array with a single row if you intend to specify the same RGB or RGBA value for all points.\n",
      "*c* argument looks like a single numeric RGB or RGBA sequence, which should be avoided as value-mapping will have precedence in case its length matches with *x* & *y*.  Please use the *color* keyword-argument or provide a 2D array with a single row if you intend to specify the same RGB or RGBA value for all points.\n",
      "*c* argument looks like a single numeric RGB or RGBA sequence, which should be avoided as value-mapping will have precedence in case its length matches with *x* & *y*.  Please use the *color* keyword-argument or provide a 2D array with a single row if you intend to specify the same RGB or RGBA value for all points.\n",
      "*c* argument looks like a single numeric RGB or RGBA sequence, which should be avoided as value-mapping will have precedence in case its length matches with *x* & *y*.  Please use the *color* keyword-argument or provide a 2D array with a single row if you intend to specify the same RGB or RGBA value for all points.\n",
      "*c* argument looks like a single numeric RGB or RGBA sequence, which should be avoided as value-mapping will have precedence in case its length matches with *x* & *y*.  Please use the *color* keyword-argument or provide a 2D array with a single row if you intend to specify the same RGB or RGBA value for all points.\n",
      "*c* argument looks like a single numeric RGB or RGBA sequence, which should be avoided as value-mapping will have precedence in case its length matches with *x* & *y*.  Please use the *color* keyword-argument or provide a 2D array with a single row if you intend to specify the same RGB or RGBA value for all points.\n",
      "*c* argument looks like a single numeric RGB or RGBA sequence, which should be avoided as value-mapping will have precedence in case its length matches with *x* & *y*.  Please use the *color* keyword-argument or provide a 2D array with a single row if you intend to specify the same RGB or RGBA value for all points.\n",
      "*c* argument looks like a single numeric RGB or RGBA sequence, which should be avoided as value-mapping will have precedence in case its length matches with *x* & *y*.  Please use the *color* keyword-argument or provide a 2D array with a single row if you intend to specify the same RGB or RGBA value for all points.\n"
     ]
    },
    {
     "data": {
      "image/png": "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zx77/JycHEJDQ/Hx8WHGjBn213ZsbCxgvRqtBzt37uTevXvMmjULX19frcNxmhEjRvD000/r9hbQgsXpkSNHah2OU9iK097e3rouTitKdVK5WfWoDblZQaNHjy61b9PanJsBnDlzhqNHjzJo0CD7vvSWmxkMhlIHpUrMAIuEoBbQpF7h9Ya0BV8PSCnQyH/LFbibA090gT4Fuub0coM/Drb+/kM5td+0XHh2HWyLgYmd4Lup0MCxO7bL5ObmxjPPPENwcDDu7u5V32ANtH37dhISEpg6daruWqDalFacVvSvrEw8Fuhf0gwpZR4wC2vffv8CXq7+0BRnaNasGVOnTgXg73//O5cuXSpz+Ype+atO8fHxrFixoth0i8XC+++/D1iThoJvWk888YS9g9Xf//735fZpUtnjs115td1CWtSXX35ZZhJl69C3rITQx8fHXqhbs2ZNicu89957JU7Pzs5my5Yt9udl3YLz4osvAtYE9e9//3upywFkZWXZO9V21IgRIwDrucrNza3QugBdunRh3759tGnThuzsbCZPnmxP2Ddv3kx6ejrBwcHUq2fNqHJzc+1/F70UVUaPHs2sWbOK3fajF7dv38ZgMODm5lbhkf9qi9KK03oipeSXX36xF6f1OqiMolQ3lZsVptfcDKxfum3Kuhhbm3Oz9PR0Nm7cSJs2bRgzZgygz9zMy8uLGTNmEBwcXKxw274ReLjCyeTChT2AiETINMKwgPvTDuXXjkeWkOYNag3ebnD8BuQWbxAKwM1MmB1qvR342T7w2UTwrIZxsmxF7ebNmzs8wEttc/bs2WLFab1JSUnhl19+KbE4rehfWQW/3cAMIYRHSTOllCbgSeAnrKP0KrXERx99hL+/P+np6QwbNoxly5YVuvXgzp07rF27lhkzZvD009p11diwYUNefvllli5dar9t4vr16zz99NP2K4lFkyovLy8+//xzhBCcOHGCoUOHsm3btkKJUGxsLF999RUDBw7k888/r1Rs48ePByA8PJx3333X3vlzamoq77//Pq+99lqZV4h69eoFwJYtW0hMTCx1Odv5X7ZsGZ9//rm9z6/r16/zm9/8hp9//tle6LKRUrJ+/XqHO3CeOnUq06dPB+BPf/oTL7/8cqEvG0ajkYiICP7nf/6Hdu3aFeqI2xFDhw7Fzc0No9HIyZMnK7SuTadOndi7dy9t27a1J5a7du1i5MiRTJs2rdBw8lFRURiNRtzc3Co0glxNlJKSgsViwcfHR7dJSHZ2Nj/88AOhoaFah+JUbm5utG/fvlBxWo/at2/P2LFjCQgIKH9hRVHsVG6m79wMrH/DsloYFlSbc7P69eszZswYgoOD7bdU6yk3A+yDqnTu3JlGjRoVm9/IC/40FO5kw+PfW2/X/b9f4ZUt1lZ4wwPg/QIDcl/N70qxQ/FN4eYCbRuCyQLx6cXnX70HM1bDhbvwh0dg8WhwqYZritHR0Sxbtoxz585VfWM1WOPGjendu7e9OK1HXl5edOrUqcTitFIHlNFZbl+sxbzB5XSqK4CPgD2OdsSrHo4/sHbzUOjhiEWLFpW5/IkTJ2RgYKB9GSGE9PPzk76+voX29fjjjxdaLzY21j4vNja2xG3v2bOn3FiXL18uAdmuXbti80aOHCkB+dZbb8lhw4ZJQLq7u0s/P79Csb399tulbv+HH36Q9erVsy/r5uYm/f39paenZ6FtLF682OG4CjIajXL48OHFzp+Li4sE5KRJk+Tbb78tATly5Mhi61+6dEl6eXlJQLq4uMjmzZvLdu3ayXbt2snr16/bl8vIyJA9evSw78fFxUU2atTIfk5++ukn2a5dOwnI5cuX29e7fPmy3Lx5c7l/K5usrCz51FNPFTo3Pj4+hY7J9khISChzWyWZOnWqBOT/+3//r9RlbH/3ks6XTUxMjAwICJCA9Pb2ltu3by+2zFtvvSUBOW3atArHWZNkZmbKjz76SK5fv17rUJzGYrHI77//Xr777rsyMTFR63Ccxmw2ax2C09WFY6zLSslFNM+RtHxUJj9TuVndzs1MJpP84YcfVG5Wy504cUK+8847Mi4urtxlt16RsvcXUgb88/5jxHIp150vvNzIb63zYu+VvJ3pP1vnRybdn/bx4cLb/e8dlT6kYm7evCnfe+89uXz5ct1+vuv1uIqqK8dZVzmSn5Xawk9KGSWlfFpKebi0ZbifNbwppRxd1nJKzdK3b1/OnTvHp59+yuOPP06TJk3IyMjAYrHQuXNn5syZw6pVq1i7dq1mMXp4eLBr1y7ef/99unbtSm5uLg0bNuSxxx5j8+bNvPvuu6Wu+8wzz3DlyhXefvttBgwYgK+vL6mpqXh5eREUFMRvf/tbdu7cyf/8z/9UKjZ3d3e2b9/OokWL6NKlC+7u7kgpGThwIF988QUbNmwoczS5zp07s2fPHqZMmULTpk25e/cu165d49q1a4U6cPb19eXgwYP84Q9/oH379ri5ueHu7s7MmTM5fPgwTz31VKHt2m7L6NSpU4VahNWrV4+ffvqJPXv28Oyzz9KhQwcsFguZmZk0a9aMRx99lA8//JDLly/TunXrCp4teOmllwBYuXKl7YtSpXTo0IFNmzbh5+dHTk4OU6ZMYdu2bfb5UkpWrlxZaJ+1kcViYc2aNeTk5DBo0CCtw3Ga/fv3ExMTw/jx42nVqpXW4ThFXFwcX375ZYVGQqxtMjMz+eKLL7h8+bLWoShKraZyM33mZlJKcnNzcXV1rVDrttqUm9lG79Vzbgb3B6UKDAykbdu2ZS77ZSS8vBlm9YADz8OFV2DT0xDQEH6/Dd6vQHeWtr9OSQ33BrUGT1cIO1d85N/KyM3NZfXq1Xh4eOi2L14prV2QbNmypUqv/ZouKiqKFStW2FshK3WT0POLXA+EEMX+QHr/m40aNYp9+/axaNEiQkJCtA6n1khLS2Pp0qU8+uij9tFqawqLxUKXLl2IiYlh37599r5jKrOd7777jqSkJH7zm98UGgUQrAWkkSNH0rFjRy5dulRrk5Tdu3dz4MABpkyZUmrn47Xd1atX+f777+nTpw/Tpk3TZZ92GRkZfPXVV3h5ebFw4UI8Pauh9+waxmKx8MMPP3D9+nVeeOEF+2icir6U9P8ppdTfP20F1LX8TOVmlRcREcHhw4dZsGCBvZ/AmqC6cjOwDkq1bNkyAgMDeeaZZwq9Z+glNzMYDCxdupS8vDxeeumlMvupPZwAT62BcR1hyeTC83LyYNR31pF89z1nLQA+8RNE34JNT0Hv5sW3N+YHuHTXOuJv5/yu9D45Av+MgNcHwcOtYOEm6yi97z8KT/eq/HGGhYVx7tw55s2bR2BgYOU3VINFRkayefNmRo0apZs+JYtKTk7mm2++oW3btsydO7fW/t8pZXMkP1N/+VpICKHLL8dK5dmGk8/Ly6uRfWe5uLjYr/p/8MEHld7Orl27uHbtGpMnTy5W7AP429/+BsDixYtr7Qfb5cuXOXDgAH379tVtsQ+gSZMmBAUFMWnSJF2+n1ksFsLCwjAajcyePVuXxT6AvXv3Ehsby8SJE1WxT2dsuYYe/z+dRZ0vpaiEhAS2b99O8+bNqV+/vtbhFFJduVlOTg6rV68udVAqPeRmUko2bNhAamqqQ4NS7Yq1/hzcpvg8b3d4qLl1FN8z+V0vdsgf/PlqavHlTRa4nmbtyy+glHrxsADrqLw+7vDWLlh+0qHDKlGPHj0YO3asbot9SUlJbN26lU6dOlWpyF2TGQwGVq9ejbe3t25badZlFc3PKvzXF0L0FkJECyEeqnB0iqI4xY4dO0hISGDKlCk0adJE63BK9NRTTzFw4EDCw8OJiIio8PoXLlzg0KFD9O/fnz59+hSbHxERwdatWxk4cCBPPvlkdYSsCV9fX7p168aECRO0DsUpzGYzFouFBg0aMHXqVDw8ShwXqtbbtWsX8fHxpRan9eDSpUt1ojitKIpSGdnZ2YSGhtKgQYMa25K9qrmZlJJ169aRkZFR4qBUesnNAFq1asWYMWMcurBuNFt/Fh2h18Y23SP/DvMh+XcH77tWfNmIRMgxQf+WZY+8+3Br+HE6NPCEkH3WW4orwnbbeo8ePXjkkUcqtnItkZOTQ2hoKD4+PkyfPr1G/k9Wle125bS0NIeK04r+VabcWw/oBahXj0bk/Q6jFYWzZ88SERHBwIED6dmzp9bhlEoIwVdffcWiRYvso5tVhIuLCx06dLCPwlfU7du3WbRoEUuWLKmVH+C2/+mWLVvy5JNP4u7urnFEzrFjxw5WrlyJ2WzWOhSnMZlMxMfHl1qc1ovY2FhatGih2+J0XVeww2fFMep8KTYWi4W1a9eSlZXF7Nmz8fb21jqkElU1N7NYLPj4+DBu3DjatCnenK2252Zg/b8WQjBs2DCHC2ED87sl/ukMJGcWnrcnDiKTrP3u9W9pnTaxEzT2ho2XIPrm/WUNJvhHfm/6c3uXv9+HWsCqmeDvDX/7Ff55xKFwyc7O5vPPP+fUqVOOrVBL3bx5E4PBwOzZs0scSVsPsrKyuHnzJo8//niNvOtLqbqK5mdqXGZFqeWysrIICAhg7NixWodSrqCgIIKCgiq1bpcuXejcuXOpCePkyZOZPHlyifNqgy1btgAwceLEWpsUl8dWnB40aFCZHafXdm5ubjz//PO6/+I/btw4cnNzdVucVhRFqSyj0YjZbGbChAm0bNlS63DKVJXczNXVlalTp5b6eVfbc7PMzEy+//57xo8fT/v27R1eb2JnGHYGDl6Hx7639uXXtB5cSbHe7iuBPw0Fv/w6cH1P+OAx6yAfT66BJ7pAIy/YeRVi7lkLgk90cWzfPZrCz7Ngzlr4JMJaNPzTsNKXtxWn09PTdXtHgk1gYCCvv/66brtZAeudQi+99JJu76BRKq6yBT99f4tRNLV3716tQ6hVBg4cyIABA3TbP8PmzZvx9/fnkUce0W0hLDo6msjISAYPHqzbY7xz5w4bNmygTZs2jBkzRutwnCIvL4/du3czYsSIGtuaozrs37+frl270rx5c10nzYqi3Kdys4rx8vLi2Wef1e1nekZGBmFhYUyaNIlmzZrp8jgtFgtr1qwhJSWlwq3BXAR8OxW+i7a22tsWYx2so5EXjA6E+UEwol3hdcZ1tBbqPj0K4Vcg1wSBjeDPw63LV+QUd24MoflFvy+Og8EMi0aUvI39+/cTExPD5MmTa3xxurJiY2NJSUmhX79+us1bMjMzOXz4MKNHj9btMSqVo1r4KUotJKVk69atdOjQga5du+q22Hfy5EkiIyMZPny41qE4za1bt9i0aRMBAQE89thjWofjFEajkdWrV+Pm5sasWbN027ovPDycqKgoOnbsSKdOnbQOxymio6PZs2cPRqOR5s1LGEpQURSlDktLS2P79u1MmDABX19frcNxCttAcTdu3NBloc9mz549xMXFMXXq1Ep93rm7wgt9rQ9HPdwKVkxzbNk3HrE+ShPYCA4tKHsbthGaH3roIfr16+domLVKeno6a9aswdvbmz59+ujyrgRbcTohIYGgoCCaNm2qdUhKDaIKfopSC504cYKjR4/i7e1N165dtQ7HKZKTk9m8eTPt27dn1KhRD3z/mUa4mQX3cqC5L7QtMjLazqvWWzVyTTC2o/WKbUE/nbH202K2wFO9YEyHwvOXRcHB2FxaXVpNPVcPXRfC0tLSMBqNzJgxg4YNG2odjlNERUURFRXF8OHDdVvsK1icfvTRR7UOR1EUpUaxFcJu3bqFwWDQbcHPNijVjBkzHnhhITsP7uZARq711tWC8szwn6PWATMswP8bVnzdN7dbb1PzdoNPxhWen5JjnQ/QJOcSvhcP0rdv30rf7lwb3Lx5k+bNm+u2Oxmz2cyaNWswGo0899xzuiz2QeHitCr2KUWpgp+i1DJJSUmEh4fTsWNHXQ8nHxoa6tTh5BPS4dRN68+eTWFYgX5tLVj4NNLCF8esb5G/fSSDFwelYSEPC2YkZvYl+fHdSWtfJz714+kYeB0LFsCCxELEnc5si7F2YN217SU6koAs0BvC0TvdORNromVuJt7DB+NRv9oPscZo2rQpv/3tb3Fz0+dHTnJyMlu2bNGsOP0g5Obmsnr1ajw8rMVpvbYqVhRFqawdO3aQkJDArFmzaNKkidbhOMX58+c5fPgwAwYMoHdvB0aRqKA0A1xNhfg0mFrkenZ2HnT//P7z6NduI1zysGDCggkjZv51tDMArkIyb9gxLJgAiQULmRbBlivWKqCPh4mr7LdvSyK5bfJkd5x1/ui8C7Rt4UPQhBbVclyJiYlERkZy8eJFDAYDXl5edO3alQEDBtC6detq2UdlDBkyhIEDB+o2P9OyOP2gXLp0iYMHD9KvXz9dF6eVytPnf7ei6FTB4eRnzJih2y/dV69eJS0tjXnz5lV5OPk72dYOi9sUaKFnwULoBSP/POwFwMw+t2gVcBoDaRjJII8csr36AEOs8RjiuMSvBbYqyXUfAFgLfhnyDne5BFivjgoEJnH/9o9cUkknoVBceQRw060zqxu8zvxmB8klA0/0VfVLSkri7NmzPProo7pNJgG2bt3q1OJ0TXD48GFSUlKYN28e9evr63WqKIpSVQUHperZs6fW4TiFlJITJ07QqlUrxo0bV/4KZTBZwFUU7lPOIuHhryW5ZuvEXu0u4e51h1zSyCUDo3sG9Tzmkm209k92wrgZX69cbF3LSxcQdEIiMEvBDctZXF0kAuvncjbugLWgZ5ayWF6WJe73vXuq4WO88uxt7rqfI4CBlTpGg8HAypUr+fzzzzl+/Hipy/Xv359XXnmFOXPm4OXlVal9VdTevXsJDAwkMDBQt/nZ7du3nVqcrgnMZjNbtmyhRYsWTJgwQetwlBpKn//hiqJT0dHRpKenM3/+fN0OJw/Qo0cP2rRpQ4MGDcpfuBS7Y+HPeyAhA57olkPIuHgySSaTmxi4h0fjQMCasF7LyCGdRFzxwIP6eOFHG18PWjXMooG3kVa+rjSg8BXYIQEGGrmfxcPNTNfmmdSj8NX8iT1uE9QqEhcXSYcmGXjjZ593NyGL4e6RDJ98F5MwENgkDW8aV/pYayJbcdpisTB06FBdv15nzZpFRkZGlYvTNdnw4cMJCAggMDBQ61AURVFqFCkl+/fv1/WgVABCCJ566ikMBkOli0T/PgoHrkH0LcmmuZk0a5hKNnfI5CZZ4ibNG00m/q4/ABGpZ+jWIhU3PHHBHW/8adHAQLrBQn3PPDzNrWhAboEAYd7gi7gIiburBR+a4lrgzgoPN8H/TohECHB1kYXyMoBmXi78of1P+AQ0x6exN3gZaUr/Sh3nr7/+yvz587l8+XK5yx4/fpwXXniBDz74gOXLlzN06NBK7dNRZ86cYd++fRgMBl1/pjdt2pRnn32WgICA8heupVxdXZk7dy6urq66LdwqVSdKG0a91BWEGAQcAoZLKQ85JSrFTghR7A9U0b+Zoh9SSm7fvk2zZs20DsUprl+/Tl5eHh06dCh/4Xx3suFyCgy23j1LLpnkcJfDN1L5r9UPAdCqUSr/fm4VbnjhjjdueHEj1ZfP9vaiVaNsujRPZUz3hDL2Un1ys01s++o8wkUw9uXOGDxu0oNZ+KKfARCklKxatYorV64wf/582rRpo3VIThEfH0+bNm1026oPrP371K9fX9cFW6V8JfXtJKXUX4dPFaDyM6WgnJwcTCaTbltAHz16lF69ejn8WSAlmCW45X88WjCTwz2eCfMmKtF6cewPE7czpPNVBC64Uw936vH3rQOJu1uf1o2ymDPwMh2bphfbrrO6mouLTuHIujh6DG9Bp0c98aQBXZmCawXbx3zyySe8+eablXo/EELw0Ucf8cYbb1R4XUfcuXOHpUuX0qxZM55//nld9h2dl5fHrVu3NL1V+kGIi4ujXbt2uux7UXGcI/lZZUvB6pWlKA/Q9evX8fLyomnTprot9mVlZREaGoqHhwcvv/xyuUnIjQz4bTgcvyHx87bwy8JIUsUVcskAwK+pN64uvXEV1vne5ja4u95Pvlo1yua9aUedekxFSSk5si4OQ5aJxxd0xeBxk7YM1VWxD+DgwYNcunSJ8ePH67rY9+233zJy5EhGjhypdThOkZ2dzcqVK2ncuDHPPfec1uEoiqLUKFJKoqOj6dWrF97e3uWvUEtFRUURHh6O0Whk2LBhZS57NBHWX4DdcfDm0Bwe7ZbIPWJI4zoWTHRsPYCoxAEA3EkJKNxCD/jT+Kgyt++s2kbarRyObYqnaTtfuo3yw0gaHXi8UsW+P/zhD8WmCyEYNGgQ/fr1w9/fn7t373LixAkiIiIKFQallPb1q7voZzQaWb16NW5ubgQHB+uy2AewZcsWoqOj+d3vfqfbgeKio6NZt24dM2bM0O3tykr1qUzBLwpoD9yo5lgURSlBRkYGP//8Mw0aNGDhwoW6vJJjG04+JyeHOXPmlJuE5GHAtd4NLqa0RuJBSo4rkXcT6NrE4/6tt27w1TP7aNUwCzfXmtHq4uz+ZG5cSWfApLZ4tsrEl/Y0p4/WYVWrrKwsDhw4QM+ePRk4sHL93tR0WVlZhIWF4efnx6BBg7QOxyksFgtr164lKyuLJ598UutwFEVRapzjx4+zefNmTCYT/ftX7tbPmq7goFRDhgwpc1mJZOc1Az+esRY/18UmENhtF+7Uox5NcMGV8V0z6NYkkl6tUmjsk1vm9h6UvFwzB1dfxd3DhcEz25HtkkwXJuFFxbqV+fXXX3nzzTeLTV+4cCFvvfUW7du3LzYvNjaWv/3tbyxdurTQ9DfffJNBgwaVe84r4sSJE9y+fZu5c+dWqcucmiwqKoqTJ08yfPhw3Rb7bt26xaZNm2jXrp1u+wtVqleFC35SSiNwzQmxKIpShMViISwsDKPRyLRp03RZ7ANr58GxsbFMmTKFFi3uj4iWkwfhV2DtBXhntJHGjZK4zXnSuAau0L/9GPZf7ECPlim4m5viRlqh7QY0znzQh1KqjJRczu67QWCfxrTt740JA4GMxAV93Q7q4+PDCy+8QKNGjXT5ei1anH5QHWw/aAcOHCAmJoZJkybRqlUrrcNRFEWpUZKSkti6dSudOnWiX79+WofjFAaDgdWrV5c4KFVCOsTeg+HtwEAa94jjNmfp1tUVjlkvEsUkt6K+bF2oVV5A48walZsBnDuYTGZKLqPndcZU/y4teAg/ihfnymIwGJg/f36h1no+Pj6EhoaWOZhC+/btWbJkCdOnTyc4OJisrCzA2tJv/vz5nDp1qtryjEGDBtG6dWvatm1bLduraQoWp0eNGqV1OE6Rm5vL6tWr8fDw0PVAcUr1Ur07KkoNZhtOfvr06bq9lTcxMZEDBw4QFBRE3759C817NVyyK9aaKX514TSzHjmKBz7UpyUCFxYMjuWV4VdoVM+oRegVUr+xJyOe6YR/Wy+yxQ26Mx0P9DPIg8ViISYmhs6dO9O8ub5uUS5o3759xMbGMnXq1ELFaT25evUqe/fupU+fPrpttaIoilJZtkGpfHx8mD59ui4vbgHs2LGD1NRUnn/+efugVLey4L93wL5rEv96ZpYv2EiuazICF7zwo6e/Ny8MPUf3lvfo2fKe027BrU49R7SkWTtf6geacKMRbXikwttYuXJlsQE6yiv2FTRhwgRCQ0OZOHGifdqlS5dYuXIlCxYsqHA8Bd28eRNPT08aNWqk22KfrRBWUnFaTzZt2kRKSgrz5s3TbX+hSvWr0n+DEMJDCNFHCNHNgWW75S/rXpV9KoqWfvnlF65dezANXK9evcqhQ4fo378/ffro67bPglq1asXUqVMLJTl5GLjNBfp3+9U+7eDFrjSQbfDGD5H/1tWiQU6NL/aZzRZSkqxXbFt2bIDB4xZteKTYqL+13a5du1i5ciUJCQ9m8BOtdO3aleHDhxMUFKR1KE7TvHlz+vfvz6RJk3T7RVZRFP14kLkZwObNm0lPT2f27Nm6HtDo0UcfZdasWYVGOfX0usvpO0YkgjvZbvx61Z/6tKY+rXDHeivvkwNi6NM6BVeXmtGdSmnSbuVgNJhxc3ehWSdvTOTQgTG4UvGvqp9//nmh5wsXLnS42GczYcIEFi5cWOZ2KyonJ4dVq1bx888/63pQIQ8PD4KCgpg1a5a9OK1HvXv3Zty4cboeXVmpfhUepbfQykI8C3wLLJVS/lc5y34PzAHmSil/qvRO6xg1ClzN8cc//pGPP/6Y1157jblz59KvXz+ndnhrMpk4cuQIjzzyiC6HWjeZTGRkZODTwI9fLsKVFHh9WCq3OcctziAx42Zuwv+ueYyB7W/yWLcEmtU3aB12hZ3Yep3Lx24z8dUeuDTOxBs/uvIELuins+QLFy7w888/M2DAACZNmqR1OE6Rl5eHu7u+r1eZzWaEELq9Mq5UnhqltziVn9UMDzo3A2sfWjdv3tRtZ/kpKSk0atSIpEwXvNygcT0L6SSQTBTpJPLz4cGEHe1L/4BbzBl4md6tU7QOucIMWXlsW3KBhk29GDm3E2nE04ExNKVrhbeVmJhYaIAyIQQxMTEl9tlXnqtXr9KpU6dC7yUJCQmVGnFWSsmqVau4cuUKCxYs0O2otXUhP6sLx6hUjiP5WVULfuuBJ4ARUspfy1l2FLAbWCelnFnpndYxKqGsGVJSUujatSt3797F3d2doKAg3njjDcaMGYO/vz9gvaWxOr4o5+XlYTabdds3mM3mzZs5ffoM4Y1fJS7HF4Hkn/NW0tYvh3r446KDHgfiz97jUFgsXQY1pff4JuSSTk9mV7gj6JosJSWFJUuW4O/vz/z583VbnF6+fDkdOnTgscce0zocp9m6dSvJycnMnTtXl39HpfJUwa84lZ9p70HmZmAdRM3X11fXLZ8zMzP5/MuvuFevEz+bpvBMvxRmDQsnl3Q8aYAXDbmX7YEhz42WDbO1DrdSLBbJ/pVXuBWXyeMvdMW9ZRqN6UR7RiOo+N/2l19+Ydq0afbnjzzyCIcPH650fI888ggRERGFtj9lypQKb+fAgQPs3r2bCRMm6HYQtWvXrhEWFsbTTz+t2/6Gs7Ky+Prrrxk+fLhu+wtVKs+R/Kyqn4C98n+ecmDZ4/k/9Xk5TNE1T09P+vbtS9u2bXnzzTe5fPkyv/3tb/noo484e/YsJpMJFxcXpJRcv369SvsKDw9nyZIlGI01+1bVqoiOjiYyMpJe/TvTtJm182aJYEfUEHxprotiX/odA0c3XMO/jQ99xrQki1t04HFdFfssFguhoaEIIQgODtZtkWjbtm0kJSXp9uo4wNmzZ4mIiKBFixa6/TsqiqIvDzI3y8jI4KuvvmLfvn3VFH3NYxuUymAwEG54BLMUhJ32JTfXm4a0xQvrqKd+9Yy1ttgHcHb/DZJjMug3oS0+LU2440MAQytV7AO4ePFioeflFWVCQkLKnF+079wLFy5UOKb4+Hj27NlDr169ePjhhyu8fm2QmZlJWFgYHh4e9gK/3lgsFtatW0dGRgYtW7bUOhyllqpqwa8VkCalLHe4JSllBpAKqFerUuv4+PjwyiuvYDQamTBhAh9//DHt2rXjgw8+4I9//CNbt24F4Pe//z1vvfUW8fHxldrPyZMniYqKomfPnnh4eFTnIWjOaIabWXDz1k02btpIk4B6NHnsBtMfPkUj71zmDznPgqEVT2pqIlOehV9Dr+Lq5sKQWe3Jdr1JC4LwI1Dr0KqVi4sLQ4cOZcaMGTRq1EjrcJzCVpweMmQI3bqV211trXTnzh02bNhAmzZtGDNmjNbhKIqiOORB5WZms5mwsDCMRiM9evSozkOoUXbt2UlcXBy9JtXHt5n19sEuzdLJymmkbWDV6EZMOmf3JRP4UGMC+zXAQBqdGIsbnpXepsFQuLuZ0opPISEhCCF45513EEIghCix+Ne4ceMyt++IFi1aMHjwYJ544gldtkgtWJyePXs2np6V//vVZPv37ycmJoYJEyaogp9SaVW9jG+E/B5ayyGs7zbeQF4V96komujfvz/Z2dns27ePt99+m8DAQFasWMHPP//MxYsX+fnnn/nxxx9ZsGBBpUbUTU5OZvPmzQQGBjJ69GgnHIE2LBLWX4RPjkDreukMvLUcFw8zA2Y1pZGLP/1bGflhwU483Cxah1ptXN0EAT39aNzaB5eGWXjgT5v/n73zDovqTP/3fabQOwpIEcGuWMDejTX2RMVkzaaZbExPtmQ3+91sYrLZlt8204sm2U0zWBBrYi8Y7LEhiKCg9N6nz/v7YwRFQOowMDn3dXENnPOe8z4HmDnP+bxPYYytzWpXtFotTk5OREREND24i5Kfn8+2bdsIDQ2121RevV5PTEwMKpWKpUuXWr32lYyMjEx7Ym3fDGDfvn1cu3aNxYsXt/ocnZESDbxzHFZEGcjOOcAP8QkERzoxIDKIF/2ScFCa6B9QZmsz2xXP7k6EDfdlxJxgqqRsejIRV7q36Zy3l+ApKipqcNyqVavqfDVGcXHdmogtKfFjMpkwmUw4ODjY9QLe/v37SU9PZ9GiRfj7+9vaHKuQmprKwYMHGTZsmJzKK9Mm2hrhdxVwkCRpXDPGjgccgY5royUj004IIQgJCWH58uWsX78egKlTp/Lqq6/yz3/+E6VSyddff42vry8jR45scf09rVbL+vXrcXJysrt28qnF8KvvBdfK4Hi2M8LHgwlL+uDlblkBlSTsSuwzGc1IksTgyT3o3tsRIxp6M6NVXd86K7m5ufznP/+pl8Zib5SUlODm5mZ378lbqaiowGQysXjxYjw9PW1tjoyMjEyzsbZvBpZ0yh9++IGRI0faVZOOuEsw+b+CtWfglYRrlLknETjAnbFzBqDEgSFBxXYl9plNAiEELh4OjFkUis6hCC964UfbFy3796/b6OP06dN3HN9USu+pU6fq/NyS7IK9e/eyZs0auy4LJISgpKSEyMhIhg8fbmtzrEZRUREBAQHMmzfPLqM0ZTqOtj7B7AYk4G+SJDUaLXhj318BAexq45wyMh1OzQftz372M86fP09sbCxms5mwsDCeeuopPDw8UCgUlJSU8P777/Pxxx+3KHXEZDLh6enJ0qVLcXNzs9ZldDh6qnHyPcK0iIsgBC7OAtcRY/APc7e1aVahOKeabe8kUpRZhUBQSS6hTMUZb1ub1m7UiNNqtdqua9qBxYl/5plncHe3z/9XsKQePf300/Tu3dvWpsjIyMi0CGv7ZjVzhIeHM3v2bGtcgs1wcymiXCeBEOxP6g2OQ5h8X19Uavtc3DqzK5NDX6dhNgn0VCGhoBdTUbT5URhGjhxZ5+djx45x9erVVp3rypUrHD9+vM6222v6NUZSUhIJCQmEhobaXVmgW5EkiSVLljBv3jxbm2JVxowZw+OPPy5355VpM239lHsb0AITgT2SJEXePkCSpChg740xOmB1G+eUkbEJJpOJyMhIevXqxY4dO2ojft577z1+/PFHHnjgAX77299SUVHBk08+WVs7pjm4urry4IMPEhoaai3zOwStEa6WgAkjeVzgHF+RTyLRoYk8YnqbDxZt567+2bY20yroNUaOxFxBAtx8HKkkl+4Mohv9bG1auyGEIC4ujpKSEqKjo+1KnL6VkydP1q7Q22uKa3Z2Njt37sRoNNrtNcrIyNg/1vTNwLLwY0+dy7WUk8pu3EO+ZUz4dWaY4nje7zOCvSpsbZrVuJZYQsrxAtx9nUBpRkMRvZmNAy7tcv6goKA6opwQgr/+9a+tOtff/va3Ot2+R4wY0azF1eLiYuLi4ggMDLQ7cboGo9HI5s2bKS4uRpIku/Vd9u/fT2pqKmC/PqhMx9ImwU8IkQmsvPHjJOCkJElZkiT9IEnSEUmSsoETN/YJ4AkhROsq5srI2BilUom7uzuPPfYYmzZtoqqqitTUVJ577jmmTp3KG2+8wV/+8hdef/11Fi5cyP3339/kOa9du8ZXX31FdXV1lw/XPpwBM7+Ex7cbOG/ewDUO44IPDtXdubA1FXdVNfaaMSiE4OjmDDTlBiZEh4NLNWpcCGF8q7u+dUaOHj1KcnIyM2bMoGfPnrY2xypkZmayc+dOLl26VMfptic0Gg3r168nOTnZrtN+ZGRk7B9r+GYA27Zt4+jRowBd2j/TGuGfCXCx0EAOP3KBbyjnOh4E87OAg/SsPEtwNx0KRde9xjtRXqjl+JYMuoW4MnxmEJXkEMQYPAhs13mefvrpOj9/8skn7Ny5s0Xn2LlzJ5988skdz9sQBoOBmJgYFAoF0dHRdiNO3853333H2bNnyc/Pt7UpVuPChQscOnSoVvCTkWkP2hzHLIT4AliApTafhKUL71hgHBBwY9sVYJ4Q4su2zicjY2tmzJhBVVUVX375JQ888AA+Pj4899xztQLIQw89xP/+9z88PDwwmUyNnqeqqooNGzZQXFzc5euDFVXD49ssdfpSi9TsPN8bD4KRzGoSNqWjrTIyIToMR2f7dEKSj+SRnVLG8NlBeAU7oKWM3sxCTcvrBbUEJycnoqKiOHPmjFXnqUGr1TJw4EDGjWtO2dauR3V1NevXr8fDw4N77rmnSz/kNYYQgs2bN1NeXk50dDQuLu0T4SAjIyNjS9rLNwP48ccfOXXqFNXV1R1hutU4mW1ZiH37OPx6fzHXxVFc6I4r3SnP15K4+yrdQ90YOr19xa/OglFv4kjMFZQqBeOXhqFVFuNGD3pQLyGtPvmH4fAS2NQD1jlaXvfNgqwd9ccW/MDDoTGUrFFw4W/g5QLLx8N9y5bWF/3OrYKvJcvrLezcuZPo6GhWTgdfNzj4Cswa24vly5c3aapWq0WpVHLvvffi5eXV9LV1Qc6dO8epU6cYP358i2oadiUKCwvZunUrISEhdt1wRabjaReVQQixA+gLzAJWAR/e+HoNmAn0E0K0LIZeRqaTMmbMGCZNmsRTTz1FcnIyzz//PPfccw9gCTcH8PDwABoPxa5pJ6/RaIiOjm5VIenOghkzZpdLLB19AgA3Rz0ejpbrvng4l9y0cqLuDsYn0NWWZloNIQQleRp6RnjTd1R3KsmhJxNxw/qd/HQ6HQBRUVEdIvzdddddREdH26UQZjaba6NDoqOjcXZuVgP6LseRI0dISUlh9uzZBAcH29ocGRkZmXahPXwzsDSl2rFjB2FhYUydOtXaZlsVZ8dqsiosTdEuZvtz4cpIlKgx6EzEx1xB7aBg/JIwu43uqyrTY9CbGbekFw4eZswYCWMaCppIk7zwJuyZDPmHIPBuGPBrCFoA+hLIP1B3bGYc7JmMsigeXbc57DwHry2G/RfhjwuqmTt3Lk888USjNf2uXLnCE088wfx5c3lxRhVbTsHvFsD978Fr//yqWc8H7u7uPP744/Tt27eZv5muRX5+Ptu2bSM0NJTp06fb2hyroNfriYmJQaVSsXTpUjmVV6ZdabdwGyGECdhz40tGxq753e9+R3JyMgMHDuSRRx5BkiTMZnOzw+gPHDjA1atXWbRoEQEBAVa2tv0xmUGpAA0lpHOICrJYFuWPQefN4sgreLvqMZsEOanlhA71ofeIbrY22WpIksS4xb0wmwTVUgFehLVL17fmcvr0ac6cOcOKFSuIiopi+PDhfPrpp+3WucxsNrN582ZGjBhBaGioXYp9AFevXiUtLY358+cTGGif0Q4ajYb4+HgiIiIYNWqUrc2RkZGRaVfa6ptptVpiYmJwdnbu0t3ZBYIiLqP1PcTCyNHsvjCAxyYkMS48F4CSXA3aSgMT7++Ns7v9NgTw7O7MvGcHoVBBGdfpxzyc8LjzQdfWw7k/QsAMmLQJ1Lc17TIbbn5vKIdjvwBJCdMP4O87EuWVf/Py737FK4vg71thWE9Leu+aNWsYPXo0f7zHxLyesH3Hdv70xHccP34ctVLw8wnw4V54Zha8uRle/8u/GT9+/B1Nzc3N5ciRI8ybN69LBw40xcGDB3FwcOjS78mmOHv2LAUFBTz44IO1CxMyMu2F1J41iiTLk6Av4CLX6msfJEmq9wey17pSXY3i4mIyMzMZOnRoi47T6/V88MEHhIWFsXDhQitZZx2EgG8uwH/PCd6PPk+xwxFUOOOCb4PjTSYzwoxddn0zmwWnd1yn/3g/3H2c0FOFAQ0RLMOBjolmlCSpzudBjfB35syZdhP+9u3bx+HDh1m0aFG7iYidlaysLAIDA+1W1AQoKCjAw8MDR0dHW5si04Vo6D0hhLDfN0ozkP2zzklrfTOAixcvsmnTJh566KEuV6e2sNpSXiW0WznXOEwp6bjij8HggtagxNulbr1WvdaIg5N9llkpzq7i+sVShkwLRKGQKCcbPwYRyqQ7HyjMsKUPaPNgUTo4db/z+LRP4dhjEPYQjPtv7eZ///vfbFv7Kz55HO5/B05cuXnI7+bDn++DP3wLf98Gjipwd4aoXrAwCn79NfztrX/z4osv3nFqrVbLJ598gsFgYOXKlbi62mcWDVhqFJaUlODnZ/3MGVshhCA7O7tZDVpkZG6lOf5Zuwh+NzrxvgLMAFwt8wjVLfu9gb9hadzxvBBCrhLeTGSHsnNgNpvrrCoJIeq8wW7/uSmqq6tRq9VdrtX6czthS4rl+5lDLvCraSkoqXsNJpOZC/tzGDjBHwc7rdkHcGZ3Jsk/5DN2cS96DvGknEwGci8edNzN+nbBD2DVqlXcc8897SL8paSk8M033xAZGdnlxOnmUlZWRnl5OSEhIbY2xWqYTCZSUlIYMGCAXYuZMtZDFvzqI/tntqe9fTOA8vLyLhdhsy0FXtkvcHcy8LcHvsBZJeFKfbGqMLOK0jwNvaN87fZeoNMY+f6jZBCC2SsHYnapQIUjA1lcz1+tR3487JkEIUthwjeQ8z2UXQCFE/iOhu631S/+4eeQ/hWM/xp6/azuriOHGH55KmqFwGUFGG+UjVQrwWgG1Y1/2/vGwm/nw6FL8M4Pffn0s8+bjOwTQhATE0NKSgoPP/xwlxOnm8vly5fp2bOnXS9Q5ubmolar8fVtOHBCRqYpmuOftTnsRpKkB4EE4B7ADUuTjjqTCCFKgDDgF1hq+snIdFpqHPbKykrOnDmDEKJeCPntb67mOE5Go5GEhARMJhMuLi5dTuwzYyYq7Hrtz8mZoegN9VMIzu7OIulIHvkZlR1pXoeSmVxK8g/59BnZjV5DfKgghyBGd6jY1xgHDhxg8+bNnD59mq+++oozZ84wYcKEFp+ntLSU2NhYAgICmDNnjhUstT0mk4kNGzbwzTff1NZDtEf27dtHTEwMmZmZtjZFRkZGplVYyzcDuHbtGleuWMKwuprYl1cFv9ktKNFKXCt1YOPRiQ2KfbpqI0fWXyEpPheTwWwDS62PEIJjseloKwxMiA5H5WLGQDXhzGxa7AMottSixskfvouCg/PhzMtw+kXYPR72TAFtwc3x5Zcsrx796p1q/ITJOHUbiFoFi6YNqt3+f4vA/CV8/iSk/BO+eBrirwfiPGktZ86ea1LsA0hISCA5OZkZM2bYrdh3/fp11q1bx969e21titXQaDSsW7eOmJgYebFIxqq0SfCTJGkg8AmgBt4GRgKFjQz/HxYhcFFb5pSRsTY1DmJNWsfWrVvr7DebW+coff/99+zatYuMjIw229jR6Kgghe0M6r+FCX2yWBKZxvvLD+Gsrtvp7lpiCSnHCug3pjvBA7xsY6yVqSjWcWxzBj6BLkTODqaaItzwpwdRtjYNsAh+99xzD1FRUTzwwANERkaSkJDQ4vOcOHECIQTR0dFdTpxuLrt27SIzM5N58+bZ7QpycnIyP/zwAyNHjrTrKEYZGRn7xlq+WWVlJevXr2fHjh2tPoctUbte4ZEp8QB0d9MwIqSk3hizWZCw6Sq6KiMTloWjcrDPhgAX4/PIvlzO8NlB+AS7UEEuvZiCCz7NO4E23/Ka+iEYNTBtD0RXwNwL0GO2pYlHfPTN8YYyy6vas8HTKRy8ANjw1RoyMzOJi4tj5swZgKWLb6/uUBVwP0+9l8WKFSuaVYdPr9dz9OhRBg4cyNixY5t3XV2MqqoqNmzYgIeHB3fddZetzbEKQghiY2OpqKhg4cKFdhtxK9M5aGu+3a8AB+A9IcSLAJIkNdbrft+N13GN7JeR6TQcO3aMt956i+rq6tpUxsLCQrp169aqgrHnz5/n5MmTjBs3jvDw8PY21yqczoFQLwHOaaRzAAkFXlJP/jj3NA01dCsv1HJ8Swa+wa4Mm2mDSDchkIwaVLpyMBsxeNTtQKquzMXjyl4UJj0Gl+6U9p9fZ79jyVV8Lm4EYWbMg0fx6B3MK2+/SL9Blr+XU+ElfJJi2ZkYgcLsz/joAQiVHhN6wpmOsv16ILWaW2v4RUZGcubMmVbVMQKYMWMGkZGR+Pg001HuYiQmJnL8+HHGjBnD4MGDbW2OVSguLmbz5s0EBgYye/ZsW5sjIyMj0yba2zczm81s3LgRrVbLAw880KUaAhjRcZ0E8rnA/MH+SMbzzByYiaujsd7Yi4dyyU2rYNT8nvj0cOl4Y4VAqStDqS1Hqa9A41f3nisZNPgmrkcyGxAKFYXDH66zX6GrwP/khyDMmNWu5I15ts5+paYY9x8+JzlhIv16lNF3VCSV5NGN/nRjQAvsrHmEFTBpA3gPs/zoNRgmxcK2fpB/EAoS6qf3NnzCGxcoERQUZKnPdu40XNgDfpOh6Diueevh6jwI+3mzTHRwcODxxx/HwcHBLkUis9lMbGwsVVVVPPbYYzg7O9vaJKsQHx/P5cuXmTNnjly3T8bqtPUJdRqWT7O/NzVQCJEtSVI1YJ+xxzJdnppaLzk5OXz44YdcvHiRU6dOAZCUlMSHH35Iz549+dWvftWim2xBQQFbt26lZ8+eXaKdvMkM752E/xwVjA0r5IX53+Mm+aHCsvLYkNgHcGrndZQqBeOXhqFUWsFpNhtxqMhGXZmHZDZRGVJ3ZdO54CI99/weAI1vf67N/n919quqC+l24dva/bcLfkpNCR4ZhwBITodnhhq4f+SviBjfk1fefpEo9yLcr//AvW7HyQiZhtFrBGVcpw9340TDq7sdRXsKfZcvX6Z79+54eXnRrZt9dlcuLS1ly5YtBAcHM3OmfVaZMJvNrF+/HkmSiI6ObnaXShkZGZnOhLV8M4D9+/eTnp7OokWLCAgIsIb57cr1cvjzYXhlegFFTt+jpwpPQpAkBfcMT2/wmIpiLYmHcug1zIfwKCvVCTObcCq+jLoyD5WmhJKB99TZrTBq6LPpIQCEpCDl/li45W8lCRO+FzdYTqV0rCf4SWYjHhmHATA6eZJHXcFPYdTin3eAFUFJuHo5kC6NQ4UjPZmIRAv+Jxy8La+u4TfFvhpUzpYov7S1UHTcIvjVRPbVRPrdjqHc8tpQBKDfXRDxKhxaBEcfBpMW+jzeqGlms5mzZ88ybNiwLpd23hKOHDlCWloa8+fPp0ePHrY2xypcu3aN/fv3ExERwahRo2xtjsxPgLY+AQQCVUKI5hYG0oCNn4ztgBqHRs73bz9qHEqj0ciGDRv473//yxtvvEFkZCRlZWWsW7eOd955p/YBuiXnjY2NxcHBgaVLl6JUdv40itM58M8EAIkjV7oTdX4iC4Y23XR77L29qCrV4+rp0GYbJIMGoa67qudUfIXQXb8BQO8WUE/wMzrd/GhR6uo7X2bVLakSooG0HUXdv807K/vxf9Gh/GV9BveP/BUTxgXx8b1qevkY8Hcv5xK5+DMEX/q09PLalaioqHYR+gDy8/NZv3494eHh3H///e1oZefCw8ODSZMmMWTIkC7xnmwNCoWCqVOnolQq8fLysrU5Ml0Qe4wesTayf9a+WMs3A0tX9vj4eCIjI7tEB/q9V+HF7wXlOokSyvi/uRIeUmCTx7n7ODH5gT507+nW9ve0MONQnoXes355iJ57/g/JbIkuLO0zu44PZ1Y5Y1aoUZgNSMJsieRTOtyyvwn/TGp8EdlsEmRd0REOBDjmoVcGoKGYgSxBTdMpsnXw6G95vZGKW48aQdCkuTm++CSUp4DPiNsMM0LlVZBU4NZIZk/AdJj6HRycB8efsJy3/3MNDt2/fz/x8fG4ubnRt2/fll1XF6LGh42K6hxlcqxBjx49mDRpEhMmTJDvszKtoqX/N20V/HSAkyRJkmjCu5EkyRnwAkrbOKeMTLtT88Y5cOAA//jHPxg3bhyvvPIKYKm9984777Bs2TKWLFnS4vMuWrQInU6Hu7t7u9vd3ggEPYMSmTvczI4zQ4kILGJMr4I7HlOUVYV3Dxec3dQ4u7W+1ptCX4nfyU9wLkxCYdKTds9ndVaAdV43g4PV1YVgNtUR6UyOnpiVDpicvDC41i9YbXTpRmHE/QiVI0bn+mmqOs+eZI/71Q3H8h8A9PBxrBX+/hpznaG/E0yc4MeLbwyhBx4E27hCgaOjI5IktVnoA9DpdMTExODg4MC8efPaycLOhRACrVaLs7MzEydOtLU5VkOj0eDs7Ez//v1tbYqMjIxMq7GWbwYQGBjIokWLukxJhwqDjnKdpdbsiSvh5BRlEtatotHxJpOZsjwtPoEu9Ojd9oiwwEN/wSXvHEpDNan3fo7pVj9KocTg0h2HyhwA1FV56L163dwvSeg9gpDMBkyOHhYx7BbBD4WKgmEPIhQqhKL+o6lZ7UL2+F+DpEAo6/qZ5/ZmkZxQgtv8l/HrLqhUVRDMONxpRcRm98kWga7iMpj0dW0EKL1geXW9cW3+0yxdenO+q9ell/xDYKq2pO4q71Aj2G+ipVbg/tlw6nmL6Dfot3WGpKSk1IrT9ir2aTQanJyc8PT0ZNKkSbY2xyqYTCaMRiOOjo52W5tQpnPSVsEvHRgC9AVSmhg7F1ACF9s4508eeeW4falZQU5LS+Pdd98lPz+fH374AYBTp06xevVqnJyc+PLLLwHLB3ZzooJq6sr4+/tb1f72woCWDA5RRAorJwQT7iUxb0gGSkXj/2/F2dXs/SyFAeP8GDq9+TUolNpSTI6edQQ9s8oZt6xjKA3VAKiq8jG63fzdCZUT1X5DEJICg5s/kkmPUNyyguzgxuVl6+uc81ZMTl4UDV3eqE0mZ28qwqbe+Okfdfb18HHk7Sf78PtlIfxlfQaLp69lYEQ8n3w00KaRAVqttl3OI4Rg69atFBcX89BDD3UJcbo1nDp1iv379/PYY4/ZbW3C3NxcPvvsMxYtWsSgQYOaPkBGphFu9TXkKITmIftn7Ye1fDOj0UhlZSVeXl5dIrIPoIJcQvt9x9zsUZxIC+eVuSfvKPYBnN2VxeWTBcx9ZjDuPs1sSiXMOJZcxeDmj9nBrc4upb6i1j9zLkymMqRuN9mqHpHoNKEY3PwRqvqRdRlz377j1MWDoxvdJ5RqKnpNqbc9M6mU5IR8+ozshsuInuRRgAvdCGD4HedqFKduEHqfRcS78AYMe/PmvpzdkPO9JT038G7Ltp5L4czvIGMd9HsOfEdatpu0cM4iTNPnqabn9R0F0/fDvpmW85k0MOQ1AEpKSoiNjSUgIIC5c+e27ro6OSaTia+++gpvb+9Wifddhb1793Lp0iV+8YtfNKtBi4xMY7TUP2ur4PcdMBR4AXimsUGSJPkCb2Gp97e9jXPKyLQbNQ5ldXU1X3/9NVu2bGHNmjUEBQWRl5fHF198QUJCArt370alUmE0GptVCyszM5PPPvuMu+++u1PXZyjTwudn4dFRhaQrvkdPNZ70RFJJLByWfsdj9RojR9ZfwdFVRf9xzRM1vS5twyP9IM5Fl7g69130t0TtoVCi9e2Ha+4ZzAo1DuVZdQQ/gOsz/tz4yTvggbQm4m/FjB5M+/2PTJ86gaLSKqvPa23Onj1LYmIi06dPp1evXrY2xypkZ2fz3Xff0atXL7y9vW1tjlXQarWsX78eR0dHQkNDbW2OjIyMTKuwlm8G8N1335GYmMizzz6Lq6urla+k9ZjMICnM5HOBaxzGGR+enpiOdsx1PJwNdzz2WmIJKccL6DfGr9lin/fFTfgkx6HSlpAz9gXKw+vWnNZ0G4BLfiJGJy8UBk294/NHPdn8i2sHKoq1HItLxyfQhcjZwRjQIDATxl0oaEMd6ah/QeExSPyzJUrPdzRUZUBmLEhKGPPJzZRftQeM/gTil8LeqRB6Pzj4QNYWKL8EIUstAmJz8B4GMw7CvulwfhWYNIhhf2XTpk0IIVi2bJnd1uLdtWsXWVlZjB8/vunBXZSkpCQSEhIYOXKkLPbJdDht/eT4N/A08KQkSfnAv27deSON917gz0AoUAh82MY5ZWTajRpVfNeuXfznP//hnnvuYcWKFQBs27aN999/nxdeeIHp06djNpubdbOtrq5m/fr1eHh4EBERYVX728L5fHhyuyCzXOK6uMqDY0WzUyCEEBzdnI6m3MC0R/vh6NK8jxLXnB9xLrp04/vTdQU/oHDIcgqHLkfn3RsjCjpbdbWcYh1/icngs105DI6IYM2nX9japHZh4MCBVFdXM26cfTZR12g0rF+/HldXVxYvXmyX0UpCCLZs2UJJSQmPPPJIp36QlZGRkbkT1vDNAM6dO8epU6cYP358p/2MNAt45ziczDHxysK9lCou404PlKhBZcZB1UCNu1soL9RyfEsGvsGuDJvZdI2/GhQmPSptCQCuOWfqCX6l/eZR1mc2Blf/dl9gLSoqIvXyZTKzsjAYDKjVaoKDgujTty++vvUbjZjNgiMxV5EUEhOiw1CooIJ8+jEfR9qYoeDkB7OPwYU3LSJf0VFQuUPgPBj8e+hWt340IfdYhLoLf4ZrG8GsBbc+FuGw3/Mt+115DoQZh2DvdLj4dySjhlkzf41Wp7PbhcoLFy5w/Phxxo4da7dZCUVFRcTFxREYGMjs2bNtbY7MTxCprekHkiTNBzYAasAAKLCk7iYD4YADIGGp9zdfCLG3TRP+xJAkqd4fSE4ZaV/Onz/Ps88+S3JyMteuXcPR0ZGDBw/y9NNPI0kSFy5YanaYzWYUijuvGgoh+Oqrr0hPT2fFihUEBjbf2epo/pFg5p3jluuREKx9aD/B3s2LVkuKz+Xs3myi7g6m3xi/Ovskow63zKOYnLyoDqjb5czjyl56HF2NkBSUDFhEQeSjDZ7/8/fW8eEf1/Hkn+7nkWc6vnnEAGkh5u0362vkFOv4y/oMPt+Tw6DBA1mz5us218zrDGg0GlQqFWp162svdnaEEKxbt47U1FQeffRRgoODbW2SVUhISGDXrl3MmjXLboVbGdvRkEguhLA/5bwFyP6ZdWlP3wwsTanWrFlDYGAgDz30ULOO6WhMZnh6B3yXZvn5/rEneXRMdrM7zRoNZnZ/koy2ysjslQNw8ahbg05VmYfn1X0ISUFxRN3IM4ey64RtfwajowcVoZPJH/lEu1xTY+j1eg4ePMiOHTtIS01rdFzvPr2ZO3cuU6ZMwcHh5vVcu1CM2klJjz6elJOFHxGEYj+1eSsqKuy2vEoNhYWFfPLJJ/j7+/Pwww/bZRM1g8HA2rVrKS8v54knnpCbqMm0O83xz9ocGyyE2CZJ0mTgXWDkLbsG3vL9j8CTQogTbZ1PRqY90Wg0fPnllxw+fJjt27fj6OhIeno6a9euJSkpiXPnzgE0O13k0KFDte3kO7PYp6OSu8fs5kDOKNLy/PnNzDPNFvsA/MLc6T/Wj76j6zbHcLt+lICjq1EaqqjyH1pP8KsMHkPOmOepDB6N2bHhItKfv7eOd3+7jj8u7MGffrsOwCaiH9wi9O3OIWJaD3Yf+45xETNtYkt7I4Rg48aNaLVaVqxY0SkfftoDo9GIUqlk9uzZdiv2gaUGzqBBgxg7dmzTg2VkZGQ6Me3tm93alGrJkiWd9n6nVIC/VymWHodwKSsUszkHZTPNVaokekZ44xvkWk/scyxOo9d3vwTApHalZOC9dTrl6j1DyJj5FlrfvnUaolmDpIsXWb16NdnZOejKQZMF5jIF5WVm9AZwUIOHpwKFp5mL5Wmkpb7Dxg0beOGFF+gd3h8HJyU9Iyx1eDWU4Iw3wYyxqs0dSY04PXv2bEaMGNH0AV0UrVaLt7c3S5cutUuxDyzCtqOjI/fee68s9snYjHYpBiCEOA6MliRpKDARCMQS5ZcLHBFCnGyPeWRk2htnZ2emTp2Ku7s7c+bMQavVEhsby5dffslbb71FREQEJpOp2ekifn5+jBw5slO3k68gl1R2IhSCV+5OpFqXQlAzxT6T0YxSpcA3yBXfoPrpMFrvMBRGS20X17xzqCrz6tThMzu4Ud57RqPnrxH7trzYh6mD3BkV7srCDhb9zGZLhMZzH6by+Z4sIib05NMzLzO+3yKCGd0hNnQEt4rTnfXhpz1Qq9VERzdeDNxemDhxYm3dKxkZGZmuTHv7ZgqFgpCQEIYNG9Zpo6bMmMnmJHPGn+B8wRJCfar5xcSLzRb7avyzwZN7NLhf5x2G3tUfh6o8lIYq3DKPUxFaNyJO231AWy+jSeLi4vh07Vp0lVBxUUJUSzw5yZuZA90YFuKEh5OCcq2Zs9e17Eqq5KPDJVS5CvQDc/jb6/9hTsQTTFrWh6D+XpjQY6Cafsy3pDzbAbeK0/369bO1OVYlODiYlStX2rXf4urqyiOPPGLX1yjT+WlzSq+MdZFTRjqWnTt3smLFCgYOHMi+ffsAmvUQ3dkftFOK4Mh1mD88mavswxlvHHBr+sBbMJsE+/93mW4hrgy/qzseV/dTHjYNoazrZAUe+guOpemUh02jtO8cTE6ezTr/7WJfDQcuVrDwP6k8+1bHpPee25vF7x9/k+693Hnlg6cIHOCBIx70ZyHK9lkjsTlpaWl8+eWXDB06lHvuuadT/++2loqKCrZs2cLcuXPttvaN2Wxm06ZNREZG0rt3b1ubI2PHyCm99ZH9s46jtb5ZS8bZAiEs3QxNkpZ0DlBCGu4EYTKpUCub/79UnF3F4XVXmHhfOAEe5fgkxVLSb369Osk+F2JwLrhIefgMKoNH14nw6wji4uJYu2YtFdlQdlHij3O78euZ3VApG//7GIyCf+0p5M0dhdx192wGDRqET2QFi5bOp4zrhDON7nWSyrouNZkXFy9e5KGHHrLbJmonT56ktLSUadOm2e2Cc25uLgcPHmTBggW4uLjY2hwZO6ZDUnplZLoad3L+HBwccHd3Z906S1SZyWRqMszcZDLxxRdfMGTIkE4Zer/nCjz/naDKIFHmepVZff1R0nIn79y+LAquVTIkOJuwLX9ArSlGKB0oD7urzrjcsS9gVjuD1PybeGNiH8DUQe5sebFPh0T6ZaeUcTE+j9dWv8zohaEY0aGhmHCm243YV1ZWxqZNm/Dz82PevHmd9kGoLZhMJjZs2EBOTg4Gw527GXZl9u/fT2JiIn369LG1KTIyMjJtor19M4DMzEy2bdvGsmXL8PHxaVd724rWCL/bA/7uWhZM2IyOCjyxCHSKFoh9Oo2R+BsNLILzdxNy6HMkYWnskTf66TpjiwdHt3vDjeaSdPEin661iH3aFAVHXurFsJCmu5WqVRK/u7s7dw92Z+bq/aTkn0A6X0TYcB+i+kyjG9aPSuwojh8/TmJiItOnT7dbsS87O5vvvvuOsLAwu/Q/wZKqHBMTg9FolBeBZDoFbZLVJUlykCSppyRJ9Vp7SpLkJknSPyRJOitJ0mlJkv50o2uvjEyHYjKZAEhOTgYaVsJrmD59OqdPn8bPz6+29ldT7N69m4yMjE7ZZl0I+O85E1UGyzV/tv8uDIaWvw0zk0tJ/iGfPiO7MdA/G7WmGADvS1stk9yC2cG13cS+GmpEv3d/u47P31vXYvubQ2WpjqOx6XgFOBM1JwSBmUpyCWMaTjQvSrErYDab6datG9HR0XUKYNsTe/fu5dq1ayxYsAA/P7+mD+iCpKSkEB8fT2RkJMOHD7e1OTIyMjItwtq+WXV1NevXr0en0+Hs3LkeP8p08MAm2HwJPjrpxMGUANyp9yjVJEIIjsWmo60wMCE6DKlHWK3Y53F1Hwp9Zd0DbCSw6PV6Vq9eja7SEtm375fNE/tuZViIE7tfCCLzdDFmM6z9+HP8taOa3dCkK+Do6MjgwYOZMGGCrU2xChqNhpiYGNzc3Lj33nvtUvATQhAXF0dZWRlLly7ttN3AZX5atDWO9nHgKvCXBvZtB34JDAGGA/8H7JTs8d0t06lRKpVcunSJefPmkZOT0+g4IQRCCNzcLKmuzakNk5iYyLFjxxg9ejSDBw9uN5vbC61UytN3x9LDqwx/92r+du9RnNSmFp2joljHsc3p+AS6EDk7mJL+CzCrnDE6+1DeawrccC5bQ3PEvhqsLfrpqow4uamZEB2OSq2gglz8iMAH+0mVFELg7e3NI488Qrdu3WxtjlVISkoiISGBkSNHMmTIEFubYxVKSkqIjY0lICCAOXPm2NocGRkZmRZjTd+sptxBVVUV0dHRnU7wc1GBUn1TjEvN6XmH0Q2j1JZzMT6P7MvlRM4OxjfIlWr/oWi6DaDKfxiZU1/FrO4cYsPBgwfJzs6h4kYab0vFvhqGhTjxypxulF+Q+OGLPNZ/HdvOltqGmiiw4cOHs2TJErsVwmJjY6moqCA6Otpu01wTEhJITk5mxowZ9OzZ8ve1jIw1aKvgN/vG69e3bpQkaSEwCUtpiq+ANYDhxrYH2zinjEyLMRgMXL16lX/+85+NjpEkqUU32cLCQrZs2UJwcDCzZs1qDzPblQpyuMgGnJ2q+cuik7xz/2HCu1c072Bhxv3qAUJ2v0xFXgUqRyXjo8NQqhSYHd25Pu11riz8mJIBi1rdzc1kMvHhHy3deJsS+2qYOsidPy7swYd/XFcbHdBe+Aa5Mufpgbj7OKKjHEfcCGGc3aweJyYmsmHDBvR6vV06k2BxKI8ePUpgYCCzZ89u+oAuypkzZxBCEB0djVptH4XKZWRkfnpYwzeDm02p5syZQ2BgYFvNbFfMmMlRJvDk3K/p5VvGykmJPDk5sdnHK7Wl+J38mLDYR6i4XkDPCG/6jLqxgCdJXL/rdTKn/wmN/1CbRfTdzo4dO9CVg6iW+PXMti02/mZWN/RFEpW58P7777eThbbDbDYTExNT23naXv2z3Nxcrly5wt13301QUJCtzbEKBoOB48ePM3DgQMaOHWtrc2RkamlrUaqaKqmnbtu+HIvY93chxB8AJEk6Dbx/Y9//2jivjEyLiIiI4KWXXmLPnj3k5uYSENDy1InbSU9PR61Wd6p28tfLIaMUBvS8zBV244wPDrgS5FXdovMEHfgTbjmWt3VE0EH8n7sXperm+oC2W9trpiiVSp780/386bfrGBXu2izR78DFCv60JYdn37q/3X7n6eeLKcvTMGRaIAqFhAkDWsoYxFJUOLbLHLamRpz28/PrNP+r1kCSJH7+85+j1Wqb3b2xKzJ16lSGDRvW6WpSycjIyLQEa/hmJpOJtLQ0hg4dSlRUVDtY2X4Y0ZPOAYq5TA/HIN69Px4HVcuyJPxOfYJHxmEAlvhv4NqU1+qIRELduaIZi4qKSEtNQ5MFT07yvmODjuagUlq6+v5zVxGnTp0iKyurSwtIhw4dIjk52e5r8fbo0YOnn37abpuoAajVan7xi1+gUqnsVriV6Zq0NcKvO1AthCi5bXtNFf81t2z74sbrsDbOKSPTJEajEYDz58/z5JNP8uCDD3L9+nV+/PFH/vKXv2AymdpcSHXkyJE8++yzeHp2jvpuZ3Jh0TrBY1tN7M4/jSt+ONC6dI7K4NGcLR/Kj2WReKbuQqmwTtHZR565n2ffup+F/0nlwMU7Rx9ao1tvWb6GE1uvUZhZVbutkhxCGI8b9lH7Ta/XExMTg0qlIjo62m4Fv9OnT6PX61Gr1bi7Ny9itKuRkpJCcXExkiTJYp+MjEyXoyN8M6VSycMPP8z8+fM7xUO3WcDf4mFLqoYUtlJKOh6EoEDZYrEPoGDgfWzLn0+x3huFWYtKaK1gdfuRevkyAOYyBTMHurXLOWcOcsNJbXmEPXXq9piTllPzf9nRpKamcvDgQYYNG9bpxOn2oqKigsRESwSrj49Pp3hPtjdms5mTJ09iNptxdXXF0dE+ggVk7Ie2hkC4AppbN0iS1AuLEHhNCHG1ZrsQokqSpFJAfkqRsSpmsxmVSoVeryc6OpqUlBTUanVt6/fdu3eTm5tLUFAQZrO5xS3hz549i4eHB2FhYZ2mUYfJDC/tERRpJEDJf7bPZ+1D+6E5nd6EqJf2ke46kb35vgT46nCdHdnqtN3mUCPeLbxDLT9riH0GnYn4mCuoHRSMXxKGQiFRRQFe9MKfoe0yh60RQrB9+3YKCgr4+c9/joeHh61Nsgo//vgjW7duRafTMW7cOFubYxXy8/PZsGEDYWFh/OxnP7O1OTIyMjItwtq+mclkYv/+/UyYMKHT1OzTGeE3u2FLCjio1Lzp5sDwgB7NPl5VVYDRtXudbSdOKrhUNhL3yEgCJo/sNGm7jZGZlQVAeZm51bX7bmd4iBMag0UsTU5OZuHCha0+15tvvslrr73G66+/ziuvvNIu9jWHsrIyNm3ahJ+fH/PmzbNLIcxkMrFhwwZycnIIDQ2trcNpb+zfv5/4+Hjc3d3p37+/rc2RkalHWyP8igE3SZK8btk27cbrDw2MVwGVDWyXkWk3apzEl156ieLiYt555x3Ky8t54403CA4O5tKlS/zmN7+huLi4dmx1dfNSXrOzs9m6dSsJCQlWs781mBVafjv3EK6OOtyd9Px21hnUzRD73K4fJfS7F1Fqy2q36bUmjmy8htrNiZGPjEU4Wv8GfadIP2uIfUIITmy9RmWxjnFLw3B2V2OgGoEglCko2vzR2DmoqKggNTWVqVOn0ru3/TQfuZXc3Fx27NhBWFgYY8aMsbU5VkGn0xETE4ODgwPz58+3tTkyMjIyLcaavhnArl27OHLkCBkZGVaxvzVU6OFUriV6TG9Use9C8xYTFYZqup9aS/iWJ3DNOlm7/XpSCZcS8ukzshsBU0Z1erEPLHXNAPQG8HBqH9/K3UmB4UYZZ6229RGOb775Jq+++iqLFy/m1Vdf5c0332wX+5pDcnIyJpOJZcuW2W0t3r1793Lt2jUWLFhgt2JfSkoK8fHxREZGymKfTKelrZ+8p2+8PgYgSZLixvcC2H/rQEmSugNuQG4b55SRaZKSkhLOnz/PxIkTeeyxx3B0dOSll14iNjaW6dOn8+233/Loo49y7NgxcnNziY2NJTs7+47n1Gg0rF+/HldXV+65556OuZBmoKOSS2zF2yeFNxac5O1l8UQEFTd5nN+JDwk6/BecSq7S7awl414IwfEtGVSV6Bi/NBwn145zQhoS/awh9gGUF2jJTC5lyLRA/Hu5IzBTRSG9mYEj9uOUeHh48NRTTzF58mRbm2IVtFot69evx9nZmSVLlrQ4IqQrIIRg69atFBcXs3TpUrtNV5aRkbF/rOGbAVy4cIHjx48zZswYBgxoe43h9kJySeW393yLh7OWBUOv8sK0c806rtuZ/+FzKQ5JmPA79QmSyUBFkZbjcRn4BLoQOTvYypa3HzViloMayrUtT2FuiAqtGfWNxJPWZtrUiH0ffPAB69ev54MPPuhQ0W/MmDE8++yz+Pr6dsh8HU1SUhIJCQmMGjWKIUOG2Nocq1BSUkJsbCwBAQHMnTvX1ubIyDRKW1N6PwfuBv4mSdIMLKm8UUAFsP62sZNuvCa1cU4ZmSbx9vYmNTWVKVOm4OTkhEajwcnJiREjRvDNN98wZcoUtm/fzvHjx1GpVGRlZbFr165Gu7kJIdi8eTPl5eU8+uijNm8nbzRDUTW4uxWTwjbMmHAngCHNEPpqqOoRifflHQC4ZR6jIPIRcnMEmUmlDJ8VRPeeHS983Zre+8eFPWobdLSn2Afg6efM3U8OxN3XUmejghwCGIYXoe06j63QaDScPXuWMWPG2O2qKsD3339PSUkJjzzyCK6uratX2dk5d+4ciYmJTJ8+nV69etnaHBkZGZlW096+GViaUm3dupXg4GBmzpzZgVfTOAJBLme5Rjx9vQP4cPlhfF21zQ7IK4q4D4+MQyj1lRhdfFHoyrlwsBxJkpgQHVaniVpnJ/hGQw0PTwVnr2uZ0r/t9+oz17U4qxUYTOZWCby3in0rV64EqH196qmnAKyW3nvp0iXc3NwICgqy2wW86upq4uLiCAwMZNasWbY2xyoIIYiNjUUIQXR0tF03ipPp+rTpv1MIESNJ0mzgUWD2jc1a4EkhROltw++jgcg/GZn2xmQyYTAYcHNzIy0tDb1eX1vPxWg00q1bNyZNmkRSUhIeHh74+voyb948ZsyY0eg5L168SEpKCnPmzCE42LYrqxoDPLMTUoqNvB69k26uClxpederquAxlPeciFntQsHwhzE7uOEXCjNW9MM32HbiSY2499c/rmt3sU9XbSQ/vYKQQd54dLOsCmsowRlvgrGPdNAacTo1NZXw8HD8/Oyj+UhDTJkyhfDwcHr27GlrU6zGoEGD0Gq1jB492tamyMjIyLQaa/hmADt37uw0TalO54Cboxknn2PkcAoPglCgopvbHdJOa5qU3KIGmpy9yRv1FAgzFaGTQZIYtcCbikItrl5dqyFAn759AVB4mtmVVNkugt/ui5Vob9TwGzFiRIuObUjsq8Haol9hYSGbNm0iMDCQhx56yC7r9gG4uLgwb948QkJC7FYIkySJOXPmUFVVJTdRk+n0SG3thgUgSdIEYDxQCuy5tVnHjf0OwLuAGnjj9v0yjSNJUr0/UHv8zX4K3H///cTExPDuu+/y9NNPYzKZap3BU6dOsXDhQn7zm9+wcuVKHB0dUSqVdcbcihCCS5cu0b9/f5veoIWAB2LhyHXLz727F/Ov6KM4q013OMiM96WtVISMr1f8GbMJFEq0VQYqS/R0s6HQdzuN/S1ai9ksOPR1Kvnplcx7bjCung6YMFBFHoNZhgv2kVYRHx/P3r17mTNnjt2KRGVlZXh4eNitswyWKE2FQiF3e5PpFDT0XhNC2O8bsBnI/lnraE/fDKCyspLS0lKbL8buvQJP7xR4Out4fdk3hLn5IDVROUlVXYT/sXeo7Dmest4NR0LlXa3AJ9AFtaNtxcy28Mtf/pKLp9Oo+FFBzt/7o1a1/qPDYBT4/+YSpdVmRowYwcmTJ5s+6AZ3Evtu5aOPPuKpp57ijTfeaDfRT6/Xs2bNGqqqqli5cqXdNlErLS3Fy8vL1mZYlZ/CNcp0HZrjn7VLTLgQ4ogQ4v8JIT5pSMwTQuiFEE8IIR6VxT6ZjuI3v/kNfn5+fPjhh2RkZNQ6jQCurq4UFRUBlpWomjfL7Q5lRUUFpaWlSJLEgAEDbC4wSBIsGZ6FJFlWNkeFFuGkalzsU1XlE7L3FfxOryXg6NsgbqufolBiNgt+2JjOwS8vo9carWl+i2jvlfqLh3LJTasg6u5gXD0dEAgqySGUKXYj9l29epV9+/YRERHBqFGjbG2OVaisrGTNmjV89913tjbFapjNZjZu3Mhnn32G2dw+NY9kZGRkOgPt4ZsBZGVlYTabcXNzs7nYV6aDF74XaI0SeRVOfLhrfpNin1PhJXrteA63nNN0P/0ZSk39kiwludUc+jqVH3dlWsv0DmHu3Lk4eoDkIvjXnsI2nesfuwoxGC3C+tNPP93s45or9oEl0q89a/oJIdi2bRsFBQUsXrzYbsW+06dP8+677zar7mZXJT8/n/fff59jx47Z2hQZmWbTdYpAyMi0ACEEERERPProo1y4cIEZM2Zw8ODBWqcxPj4eIQQODg4ADRb7r2kn/9lnn2E02l4IEwhyOENweCwvTPuRpyZfYMWE5DvWhFFXF+KcnwiAa95ZPNIP1htz4UAO+VcriLw7BAcn+wy9z0kr58LBHHoN9aH3iG4AVFOAN73pzkAbW9c+GI1GYmNj8fX1Zf78+TYXp61BjRCm1WqJioqytTlW49ChQ6SlpTFq1Ci7bEQiIyPz06Q9fDOA7OxsPvvsMw4cONBRpt8RF0cNv5v7A0qFmQCPKl6463yTx+g8QzCpLVkVCkM1rjln6uzXa40cibmKg7OKodMar2HYFZgyZQqBgT1wHyT4045Czl5vXWfdM9e1vLm9kCq9oF+/fixfvrxZxxmNRl577TWWLFlSR+xbtWoVkiQhSRKrVq2qc8zKlStZsmQJr732WpufAS5dusT58+eZOnUqvXv3btO5Oiu5ubns2LGD0NBQAgICbG2OVdDpdMTExODo6MjgwYNtbY6MTLNpU0rvjVTdAYBeCJHcxNgBgAOQJIQwtHrSnxhyykjbqK6u5plnnuG///0vLi4u/PznP0cIwbfffkv37t25fPkyYPmd3i6Q7N69mx9++IF7772XoUOH2sL8WsyYyeYEWZyorQnTXLqd+S8+SbEUDVpKUcR9oLzZeTc7pYxD36QRHunL6IX20bDidvRaI9vfuYiTq4qZj/dH5aBETxVGNAzmPhywbQOW9uTatWs4OTnZbd2+vXv3Eh8fz6JFixg+fLitzbEKqampfPXVVwwbNoxFixbZpXAr0/WQU3rrI/tnractvplGo+Gjjz5CCMHKlStt3kRNRwUpbMdAFeeuDKG/fyk+rrpmHeucf5GAo/8hd8zzaPwjarcLIYiPuUJ2ShnTHu5nkyZq7U3SxYu8/PLLlGeBNkXBvl/2YlhI8zvsnrmu5a5/pFOmMSNJEvHx8YwfP77Zx98pwm/VqlX1BL/2TOs1m82cO3eOYcOG2eU9XavV8vHHH2M0Glm5cqVdNlETQrBhwwaSkpJ4+OGHCQ21z2cmma5Hc/yztgp+D2Lp1PuJEOLJJsZ+ASwHfi6E+KbVk/7EkB3K1nOro/j//t//43e/+13tvvDwcDZs2MDw4cMxGo31isomJyfz7bffMmLECObPn9+hdt/KiSz43zkzz886QonyHO4EoeAOqa5mIyjqXotkMuBQloHOp0+d7ZoKPTvfT8LFy4EZK/qjUnfOSKKioiJSL18mMysLg8GAWq0mOCiIPn374uvbvFTc9PPF+PRwwaObE2ZMlJPFQO7BgyArW98xFBQU0L1796YHdmFSUlL45ptviIyMZOHChbY2xyqUlZXx0Ucf4e7uzuOPP45arW76IBmZDkAW/Ooj+2etoy2+mRCCb775hrS0NFasWEFQkG3u4UKAzgRCVUoKWzFjunNpELMRp+I0tN36N7jvdr8t5Vg+p7/LJHJWEP3H+bez9bYjLi6OtWvWUpENZRclXpnTnd/M8kWlbPyjxGAU/GNXIW9uL0RjsLy//v3vf/Piiy+2eP6OruGn0WgwGo12240XqBXqL1++zCOPPEJISIitTbIKx44d47vvvmPGjBlMmDDB1ubIyNTSHP+srfl7S268ftGMsWuBB4ClgCz4yVgdSZJqHcuXXnqJpUuXEhMTQ9++fQkLC2P48OGYzeZ6DmVJSQmbN28mMDCQu+++20bWw+EMeHybQGtUUCB68Me7ixtP7zOb8L2wDtecH7k24691oviEUl1P7ANwdFXTf7w/PQd7dzqxT6/Xc/DgQXbs2EFaalqj43r36c3cuXOZMmVKbQrQrWgq9Di7O9BryM0OWpXkEMgIuxH7kpKSiImJ4b777mPAgAG2NsdqODo60qdPH+bOnWtrU6yGJEn06NGDuXPnymKfjIyMXdJa3wzgyJEjXL58mTlz5thM7DOZ4eW9kFFu4NeLtuCo4o5in7oylx5H/oFjaToZs/+J3uu2yCBF/esMGuCFrtpIv7H2Fa2/aNEiAL74/CtcvI38K6GAf+wpZOUkb2YOdGN4iBPuTgoqtGbOXNey+2IlHxwswWAUaAyW/5l//etfrRL74GbX3ZouvLeKfk5OTgwaNIi5c+fyl7/8pc1inxCC2NhY8vPzefbZZ+22W60QAl9fX3r16mW3Yh+Am5sbQ4YMaVFUqYxMZ6GtEX6pQBjgKYSobGKsO1AGpAoh+rV60p8Y8gpy+2A2m5tdC0uv17Nr1y4mTpxo0y5M/zxq4u1jlmg+bxctq++LJ8BDU3+gMBO8/zVcc88CUDxgEQVRj93x3HqtCQenztnxLeniRVavXk12dg66cqjOBFEmUVYmMBhBrQJPTwnJU+ASDI4eEBjYgxdeeIGBgwbVnudaYglHY9OZ9nBfuoVY0mE0lKDCmYHci7LN6x22p7i4mI8//hhfX18effRRu3QoG0rpskd+Ktcp0zWRI/zqI/tnbaclvhlYGnVcuHCBWbNm2eTz0izguZ2wzZJxzOiwTFbNO4NK2fjfPWT3y7gUXARA5xFCxt3/Qqga7r5u0JlQOSjs+l5gNgt2fHyW7Ou5bDv3AbpygSYLpGoFxQVmi5+nBGe1Aq3BjP5GX7p+/frx2WeftYvg0lCknyRJhISEcP36dQICAti5c2ebSoccPnyYffv2MWfOHEaPHt1mmzsjPwW/5adwjTJdm47o0hsIlDUl9t2YuAIoBXq0cU4ZmRajUCia5YgbjUYcHByYP3++TcU+IzrmjtnB3OHn6e6m4Z9Lf2hY7AOQFFT1GFH7o2PJVUuKSCOknytm+7uJlBe2rmiyNYmLi+Pll18m/XIORcclKk5JPNTDjf/O8SH1hQBK/q8HqS8E8N85PjzUw42KUxJFxyXSL+fw8ssvExcXB0B5oZbjWzLw7uGCd6Clvo8JPUY09GaGXYh9BoOBmJgYJEkiOjraLsU+gB07drBv3z67fpBOTEzkm2++QadrXt0nGRkZGXugJb4ZQFBQELNnz7bZA7hCgj7dy2t/9nY237FxGkDe6KcxKx0QkpKy3jMQyoajt81mweF1afyw4apd3+8uHsqlMs/MlEXDee75ZxkU1ZvAyeA2zIzhhrhnMEG51iL2jRgxgrVr13L27Nl2i6565ZVXeOONN3jqqaf46KOPardnZmby1FNP0aNHD6KiooiKiuLMmTMtPv/Vq1fZv38/ERERjBo1ql1s7mxUVlayZs0aMjO7dgfpO2E2m1m3bh2nT5+2tSkyMm2irU+IesC5OQMly93ZGZAbdsjYhKYcxB9//JGEhAQefPBBm9bbMKDhMjuplop4fjKUjcrG20V/x2NKBizCuSARnXdvigZHg6Lh6L2yfA0ntl3Dp4cLbj4NrzDbijq1XRLhtxPceG6MGypF3b+bl5PExFBHJoY68vtJ7rx7vJK3jlTgORjWrlmLMEk45vZBqVIwIToMpVKBQFBBDuFMxxlvG11h+7Jjxw7y8vJYvny5TcVpa3Lu3DlOnjzJ+PHj7XaFtbCwkC1btuDn52e3oq2MjIxMYzT12W4ymfjiiy8ICQlhxowZHWRVw5RyjYmjdpCln4zR6MTKyYkomrg16T17kjPuRYwu3Ruu4XeD8/uzyU+vZPSiULu93+WklXPhYA69hvnQb5Q//aUAps6cQH5xJmUJIVy+Kx2tVouTkxMDBgxgxIgRVkvdvjW9d8+ePQB10njPnDnDihUriIqKYvjw4Xz66afNivgrLy9n48aN+Pr6smDBArv8W5rNZjZu3Eh+fr5dlx85dOgQKSkp9O/f+PtWRqYr0Nani6vAUEmSxgkhEpoYOx5wBFLbOKeMTLtT004+JCTEZt2lTmbD0MAqUtiBnnLcCQCJemKfUluGWe2MUN5Ss06SyJ70e5AaD9o16EzEx1xB7aBg/NIwFE15qR1I0sWLfLrWIvZpkiV2PdiNIf5NOxFqpcQvx7kzI9yJ+V8XAoKkA0WE+QYz9ed9cPGw/I6qyMeXfnTDfmrchYSE4OXlRd++fW1tilXIz89n27ZthIaGMn36dFubYxX0ej0xMTGoVCqWLl2KUtk50+xlZGRkbMXevXu5du0aI0eOtKkdxVwhle9woRuPj7fUFr5dy3HNOoHR2QedT+862yt7TrzjubNSykiKzyM80pfw4c1rRtbVqCrTk7DxKp5+Toyc1xNJkjBjoooConyi8ZrXE+a14IRfAA/d+P4T4PEGxvwAvAkcBbRAH2AF8BygvCn6vfbaawC88sdXwAisguHDh3P69Ola4W985HhWspJfBf6KkP0h0EhxKrVaTVhYGJMnT26wtrQ9sH//ftLT01m0aBH+/vbTVOZWUlNTOXjwIMOGDSMyMtLW5sjItIm2pvTuBiTgb5IkNSoe3tj3V0AAu9o4p4xMu6LValm/fj3Ozs4sWbKkRfVk2ot3jsOS9fDnk5fRU4ErDRdqdiq8ROh3v8Tv5Mf1d95B7BNCcGLbNSqLdYxbGoaze+dZkdPr9axevRpdpSWy742pHjwWW8Kh9OanNw7xV7NteTfKEqGgMJ+rFSfwCXGynJ8qFKgIZRISnUfkbC01qT5RUVFMmTLFxtZYB51OR0xMDA4ODjZ7T1obIQTbt2+noKCAxYsX4+npaWuTZGRkZDoVSUlJJCQkMGrUKIYMGdLh85dp4X9noVCkkspOXPFDjTOSdJvYJ8z4nv+G4IN/IujwX1Hoyhs95+1Ulug4GpuOV4AzUXPst+mBMAs8/ZyZsCy8tlFcJbn0IAoverbsZNexiHZudxgTB0wGDgH3As9gyUv7JXD/zWGvvPJKg+U0Vq1ahSRJbN60mdOjTnOEI3zKpwwtGdqo2CeEqH2W6N69e8uuqYtw6dIl4uPjiYyMbFONw85MWVkZmzZtws/Pj3nz5tlllKbMT4u2PkW9jWXNZCKwR5KkehK4JElRwN4bY3TA6jbOKSPTbgghiIuLo6SkhKVLl9okum9TEvzjRnzs50eG82Nqw06tQ+k1Qvb8HnV1IV5pu/BM/b7Zc5hNArPRzJBpgfj36rh05aKiIo4dPcrGjRtZt24dGzdu5NjRoxQVFdWOOXjwINnZOVQkSkQPcub1/RU8MNSZRza1XPR7abw7x/b+QMKl7Rw8eBAzJqoppDczUTev+kCnRqvV8vHHH5OUlGRrU6xKZmYmZWVlLF261Kbp9daksrKSK1euMHXqVHr37t30ATIyMjI/IYqLi4mLiyMoKIhZs2Z1+PwlGlgeC388AH85WoIr/qhouBSKqroI72RLDWF1VT5+pz9t9jy6aiPObmomRN8UwuwNIQRu3o5Mf6QfHr6WxVgtpTjjTRAtrHEngEcBX+DJRsaUA78AlMABYC3w/4AzwDhgA7Du5vCGymmsWrUKoRE8fPhhfvnxL5nKVPoP68/BowcbnDIpKYm1a9dSWdlkWfsuzYULFwgICGDu3Lm2NsVqpKamYjabWbZsmV2nLMv8dGhTSq8QIlOSpJXA58Ak4KQkSblABpaP5DDAH0sUoACeEEJca5PFMjLtiE6no6ysjJkzZ9KzZwtXGNuJu/pUEJFYzYUsfyJDChgZWtDgOL1nCJU9J+CRfhCT2hWjS7dmz6FUKZiwLLy9TL4jer2egwcPsmPHDtJS0xod17tPb+bOncv27dvRlYO+XLCtQsfn93oxKdSRyB5qHtlUwueLvZncq3n1Bp8f68bbxyvRlVtq3I2ZOZBARuKBdWrAdCQ14nReXp7N0s47it69e/Piiy/a9XW6u7vz1FNP4ezc9YVoGRkZmfamoKAAR0dHli5dapP6pu+dhAv5lu83Hh/FtN4a+vqVNTjW6NqdnHG/JPjQn6nyH0pB5KPNnsc3yJU5Tw+02yiijAvFZCaVMnpRKGoHS9kKEwb0VDGYuShpoaDyNrAPi5C3r5ExG4ACLCm/t2aCO2FJ8Z0OfECdSL/bOXvoLP+Z+x+2VG1hjtccDu86zNBRQxscWyNO+/r64uTk1LLr6WIsXrwYjUZj1zWHR4wYwYABA+zaB5X5adHmd6sQ4gtJkoqAd4FeWLrw3t6J9wrwrBDiu7bOJyPTnjg5ObFixQqb1c7SUs419Rb+sBA2Hx/Dz8em4KgyNzxYksgd/SwAhUOWY3BvuuG1rtrI8S0ZRM4Oxs3b+k06ki5eZPXq1WRn56Arh+pMMJdKlJcLDEZQq8DDQ0LhJbhYnkZa6jsAlF4GSUh8vtgi9gFMCnXk83u9WiT6qRQSK4a78r/MSrJ6pqEtkgj0tW3dn/YiISGB5ORkZs2aZTNx2trURPYNHjzYbh0tjUbDqVOnGD9+PC4uLrY2R0ZGRqZT0r9/f3r37m0zYeGRcUmcLHLhTEZPfjnjbKNiXw1VwWO4ftfrVPsPbbRx2q2knyuiLF/LkGmBnaqmcntSVqDhxJZreAU4o1TejF6sIIdeTMGFFtYrTAJeBl7Akq7bmOBXs/3uBvZNBlyw1PfTwe1Bm5dzLvPgkAdJvpDMClZwYtkJwr8JbzQnzmAwEBMTg0KhIDo62m6FsISEBAYPHoyHh4fd+i7Jyck4OzsTGhpqtz6ozE+TdvlUEkLskCSpL3AXluYcATd25WD5SN0vhGhExZCR6XiqqqrYt28fM2fOtNlqnJYykokDBL4OPjw2MbnOflVVAUbXujVAhMqRnPG/btb5zWZBwqar5KdXMniKqb3MbpS4uDg+XbsWXSVUJIK5UuKRIU7cNcKBiO4q3B0lKnSCCwVG9l/T8/lJLQo3gSoQDIUS30Z714p9NbRG9LsrzJH/XqpC5SIoOO6Bck7Xd76uXbvGnj17GDhwIGPHjrW1OVahurqa9evXo1Ao6N+/v106zUIIYmNjSUtLo2/fvnZb7FpGRkamtZw9exaz2UxkZKTN7gO5nCdLdZBV84NJzMqpm3khBF6XtlIeNhWzo0ed46p7NK+4f2m+hhPbruMTaJ/CCYBRb+LI+qso1TcaxSktomYleXgTRncGtfCEwINAT+AvTYy9dOO1oVp7Kiz5Z4lYwlEG3tz1S37Jmo/X8KDDg2xmMwFvBMAf7zzVjh07yMvLY/ny5Xh5eTXjQroeZ8+eZdeuXeh0OqZOnWprc6xCYWEhsbGx9OjRg4cffthuI25lfpq06U4qSdLkG9+eE0KUAntufMnIdFpq2slfv36d0aNHd6jgJwT88yiMCK7EK2QzEhLO+NQb53btCD0S/k1B1ApK+7auTsbFQ7nkplUwcn5PfHpY16mMi4tj7RpLl92yRPjNaBeeGeGC6rZVa08niQkhDkwIceB3Y115aV8FGxN1DYp9NbRU9Bvir6a8TJBxEFJ7Z8KcdrtMm3HlyhW8vb1ZuHChXTohZrOZTZs2UVVVxWOPPWaXYh9AfHw8ly9fZs6cObLYJyMjI3Mbubm5bNu2jZCQEIYPH96h9zujGVQKyOUcGRzCnUCUKmUdsU8y6gg49jYeGYdxzzzK9bteB2XLUlINOhNHYq6gdlAwfkmYXUb31TSKKy/QMvXBPrh4WLrVGqhGQkEvpqBoaRn5N4AfgXhosiRzTTBmY72waraX3twUpgxDMklc5jIB+gB4jCbFPq1WS2ZmJpMmTaJv375NGNU1ycvLY9u2bYSGhjJ58uSmD+iC6PV6YmJiUKlULF682C79bJmfNm19qjoAmAH7bEUkY5ccOHCAq1evsnDhwg596BYC/hwPn5wGh9NOvLYogFHB+nrj3K7/QFD83wHwO/kxevdAqgOGt2iunLRyLhzModcwH3pHtTBlooUkXbzIp2stYp8mWWLnMi8iujf90XI0y8COVD3fRvs0KvbV0BLRz91BwmCAoksWZ8wemDp1KmPHjrXb2jCHDh0iLS2N+fPn06NH06nqXZGrV6+yf/9+IiIiGDWqhUXKZWRkZOwcrVZLTExMbZfTjnzozqmABzfDyglX6Rl+CA+CUDTwiORccBGPjMMAuORfwPvyDkoGLGr2PEIIjm/NoLJYx10P9cXZ3XYNAaRqJY5nPVAWOCCZJCrvza2zX33FhW5/GICkU2AM1pD/dmKd/Q7n3QlYORRMEvpBFeR+drZ2n6bCQG5yJRMvjWX0fWPQjiol7/2zVFFAfxbgQAvTJY9jier7NZamG21F3Hi95V/syitX4HUsKb/HsVSnnwr8vPHTODk58Ytf/MJuFyl1Oh3r16/HycmJpUuXolDYX1MZIQTbtm2joKCABx98EA8Pj6YPkpHpYrT1nVsGlAohStrDGBkZa5OSksLhw4cZPnw4kZHNS71oL4o1sCXFktmuN6rYc35wg+OqeoxA49MHAINbAAaXlunpQgiS4nPx9HNi5Lye1nOaDRL6KgOrV69GV2mJ7Itb0jyxD+C3+yp5Yaxbk2JfDZNCHXlhrCu/+e7OdXQq9ALVjU+2ri6QHT16lOzsbKDrX0tjFBQUcPDgQYYNG0ZUVJStzbEKJpOptqD3ggUL5NVjGRkZmVuoaUpV0529I+tn5VXC/RvhcjG8vKMnl9KjGhT7wJKyWzDsQQBK+s6hpN+8Fs1VVqAlK7mModMC8etl3Q70ihI1Hp+G4Ptqf7r9YUC9/ep0Z0LHTyR40Wi6/6q+P6qoVOKxLgj32B647KnvhyqqlDgn+OB83BuHxLrX4uLhwL2R45m2bhbOJ71wuORKBbkEMBwvQlt2ITWpvP2APzXzmJoIvsbcxfLbxt3KXcA2LA0+HgbW1B+i1WrZvXs3BoMBBwcHuxTCwBIgUVxczJIlS3Bzc7O1OVYhJSWF8+fPc9dddxEe3jHNDWVkOpq2LkmkAkMlSXIUQujawyAZGWthNpvZvXs3/v7+Nmkn7+pSxqrF+/jDxtkMCCjjN7PONDhOqBzJmvwH/M58Tt7IlZgdWnaTlSSJyT/rjU5jQqVufyek2/8NwC02AIdUV7a99jHZ2TlU3Ejjba7YB/DWNDce215OZA91s0S/wxk6Vh+t4vPF3nccdz7PgJNawqATDBhQ38ntKqSkpPD9998zYsQIAgMDbW2O1ejevTvR0dH07dvXboUwpVLJsmXLUKvVODg42NocGRkZmU5FRkaGzZpSGcygF3rAAYSE2XxnP6Z40FK0Pn2aXa/vVrz8nLn7yYG4+7ZTEzUBqgxnHC65UT27oM4uRYWKHo8NB8DkaaDwz3XrRJu638wwUVTVbzJidr1Z+1ky1b83C5Wot02nMZJ+tph+Y7rj6uCIJCzHmTHihAdBjG7+tdVQCaTc+L6xdc9f3Ph6AfgP0B84eeO4EbeNNQJXsTwBN6bvTAe+A+YBTwAa4DnLrhpxOiUlhUGDBhEUFNTiS+oqTJ06ldDQUHr16mVrU6xGv379WLx4MREREbY2RUbGarRV8FuH5aN0GfBF282RkbEeCoWChx56CKPRiFrdsWkUNQ06Ar1h9bIf8HXVolJanCXJqEOo6jp/JhffZjfnuJX0c0UEDfBC7aBE5dD6zsPKXEdc9vuii6hAP6Si7r4CBxyTLau5ebtK0EmWBh3PjGhZncBJPR1YO8+DR2JL+Pzexmv4gUXseyS2tFk1/PZd0aEzWn63I0bc7ul1DUpLS4mNjSUgIIDZs2fb2hyrYDKZKC4upnv37gwa1MLi3V2I3NxcAgIC7Fq0lZGRkWkLvXr1YsWKFQQHB3f43GqPC7yy9CR/3byYFeMvMS48r3af2/WjVAaNqtt1V5JaLPZpqwwUZFQSMsgbj27tE60vVSsJ7z0NVa4TQmXmcvlOhPPN/ojGEA0mdwPKCjXKMjWKUhVmL2PtfpOPHs2YEkzd9BiDNfXOb+yhI/ur0whHM2ZPQ739+gGVXIuPRygFZjcTQgiOxaaTm1ZBQG93lKNKyTh+CBMmqtxzCWcmKlqx4OWIpZ5eQ5zGUtdvIhaRrybddxrwFRbR7me3HXMIqMaSunsnd3Iilqr0s4HnsYh+v7V0q01OTmb27Nl2K/YVFhbi6emJo6Njl144vxMajQa9Xo+npydDhgyxtTkyMlalreE/q4EE4F1Jkjo+ZEpGppmkpKRgNptxd3fH2/vOEWLtSZUetJRziS0AOOONv4emVuxzzk8kfMsTOOdfaPNc1xJLOBqbQcqxgqYH3wGfN/vSp8csApePwOOr+s6MdlRp7feKLAeqM+GRIU71GnQ0h1tFv8MZDQcJt0TsM5gEa09XoTdZxL6u6IwZjUZiYmIQQhAdHd3h4nRHsXv3bj7++GPKyu6cot2VSUpK4qOPPiIxMbHpwTIyMjI/MSorK8nMzAQgJCSkw6O880kknQOEuXvw0fJDTOh9o46dMNP91BqCDv8Fv1OfWIowtxKzWXA0Np2ETelUl9ev29wUqiwnPD/piVRZdxFXuJgwe1gEPMmowPHH2/JTJSh54SpFf0gh9+Oz9SPylHDtaDxZ246T9+H5evMKFxMVy7OoXJJD9YzC+vvdTGgmlKAdW4o+ooKL8XlkXy4n8u5gPLs7Y/Ywoh1VRuGoi3QfMBhXurX42gFLg441jXwtvDGmJvX2vhs/LwW6YQlLOXnLubTAKze+f6oZc48C9mOpVP87KP1lKXv27GHQoEGMGTOmddfTyamqquKLL74gNjbW1qZYDSEEsbGxrF27FoOhvpgtI2NvtDXC7/+wrJUMAbZKkpQIHAHyAVNjBwkh3mjjvDIyzebcuXPExsYyf/78Do34euc4bEgy8eri3fi6m+t143XNOkHg4b+hMBsIOvhnrs36O3rP1qWylBdqOb4lA99gVwaM92vWMYpyFep0Z3RD60bw6SNu/uyyv76DVrkol4zh5Ryp3Mff/70K8w8Sd41ofZrinSL9WiL2Abx9tBLDjU+ep59+utU22ZITJ06Qk5PDfffdh49P/Q7O9kBiYiLHjh1jzJgxeHo21kava1NcXExcXByBgYH079/f1ubIyMjIdCrMZjMbN24kJyeHF198scPq1JZqoUIPjh4Xucp+Szde1KC8KYh5pB/E55Jlodb78g60vv0oD5/WqvkSD+WQm1bBqPk9a7vVNpfA6BG4b7BEhxuDtFTNza+zXzOmBGWOI9oxpUgNaJJFf7rUKptbSt7VCi7sz6ZnhDd9Rt70G6sowIOe+NHB6ZIewCdYhL+pwP2AD7AFuHRj+32NHXwbw4CDIKYLvP7jxbwZ84j4XYRdliAxm81s2rSJqqoqJk2aZGtzrMbhw4e5fPkyc+fOtdtFdRmZW2mr4LcKS6+jmk+9CKDhTgR1kQU/mQ4hPz+/tp18Rzbp+Pg0/CMBQMnvN87k30uP4exWt2OszrMnZgdXFNpShFKNZGrdKpNRb+JIzBWUKgXjl4ahVN45cFeV7kz33w7Cbas/+v6VZJw5VGd/9eQizE4mtKNLqZpZUPcdDpj89Zj89aRvvApAebloUe2+hqgR/R6OLeG/N0S/lop953INvBVfgdZoqcmxfPnyNtlkK8aMGUO3bt3o27evrU2xCoWFhWzZsoXg4GBmzpxpa3OsgsFgICYmBkmSiI6OttsOfjIyMjKtZf/+/aSnp7No0aIOE/vKdPDzWMivNvCHJafo63VD7LuN8l5TcM0+iUfGYSpCxlHRc0Kr5stJLSfxYC69hvkQHuV758G3+VoAhqCbfqPLnm71BL/8dy6Q+9kZaH0FlzZjMpo5GpuOu68ToxbcbBRnRIvATBhTUbQ5oawV3AMcBP4MbMQS3dcH+BeWFN2W6HUDQTokYbrLxIg9I+C3WGoF2pnmd+jQIa5cucL8+fPp0aOHrc2xCleuXOHAgQNEREQwcuRIW5sjI9MhtPUp5BA3m5vLyHQqdDodMTExODg4sGTJkg7tohXooUWlUGM0Kwn00OHuVD+Nw+jmT+bUVwk4/j7ZE3+LwS2gVXOd2Z1FWYGWqT/vg6tn06vHZg8j7psDkAwKnM56ospwxhh6s36L2cdAaul3CEfzHc5CbRi8wQjujm33eib1dGDNXHeWxRTz+0nutQ06miv2zfuyEK3R0rTks88+63JdbYuKinB0dMTNzc1uxT69Xk9MTAwqlYro6GiUShs+pViRnTt3kpeXx/Lly/Hy8rK1OTIyMjKdikuXLhEfH09UVBTDhw/vkDmFgCe2wvl8ADVvbFzC2ocO4KxuICFJUpA79kU03QZS2ndO3Rp+zUSvMZKw6Sqefk6MnNezwYgwSaPAbXMAnv8NQTO6lKI36kbkVd6bi/e7vaieWoR2RP3yF2ZPY71tHU3NYrODsxL1jdrRAjOV5NGXuThixW7Eq258NcYEYEfbz3Xt2jVCeoegvG6fPgtAamoqBw8eZNiwYURFRdnaHKtQUVHBpk2b8PX1ZcGCBXYZpSkj0xBtEvyEEFPbyQ4ZmXZnx44dFBcX89BDD+HubkWH4zb0VBPaZwu/nefL92eH8dr8kziqGhbPdD59yJj9T2jDTWfABH98Al0J6O1RZ7ukUeAeE0jFkhyE202H1uxjoHJOPu5bAtAOK0NZ4FBH8AOaFPuA2jB4tQoqdAJPp7bfOIf7q9Gb4W/xFSwd7Mz4nncWMA0mwdtHK2sj+wD+9a9/MX78+Dbb0pHodDq++eYbHBwc+MUvfmG3TohSqaR379706dMHDw+Ppg/oovTq1QsvLy+7FW5lZGRkWkt5eTmbN28mICCAOXPmdNi8kgQPj87h9NZu6I1qHhxzuVbsU2qKMTnXLaEhlGpK+89v9XwOziqi7g7BJ8gFlbrhBWe3TT0I/LlFXFFdcGHH3f8jMycTg8GAWq0mJCCY/snpePbpOB+2JZQVaPDs7kz3nm51tleQix8R+DTaBrfrkJKSwjfffMO8efPsOiLM29ubiIgI5s2bZ7c+qIODA3369GHChAk4OLS+FJGMTFdDEm0oRCtjfSSpflUO+W/WPDIzM8nNze3QG7QBLSlsQ0c5rnRHCIuTqdBX4n/8PQoiH8Xo2rwae02hqdDj5KZu8Mbs8/fe+Py9D8oSB3I/OkvZE9fq7Hc8545QCvSDK1s9/7GjR/nzn/9C0Q8Sn033YEJI22+e8df1rNhbjvswQUWihLkKHot0Y2ovB4b4q3F3kKjQC87nGdifrmPtqSr0Rqg2CCRJ4l//+hcvvvhim+3oSIQQbNy4kYsXL/LQQw/Rq1cvW5vUYpycnBg0aBCffvppo9EaZrO5Q6NsbcFP4Rplfpo0dJ8RQtjnU2Ezkf2z1mE2m4mPj2fIkCEd2kStlAxS2E5a5mBySryYN8TiF7nk/EjQ4b+SH/UYZX1mt8tc1eX6+vX6GkrZrTAS3nM6LqUemDGzdOIoEr1O1ztf7z69mTt3LlOmTOk0QsX1pBKOxFxl4n3hBA/wqt2uowKBmcFEo7pjG9zOT0lJCR9//DFeXl489thjdlmew2w2I0mS3Yp8Ncj+mYy90hz/TP7PtxGSJCklSfqdJEmpkiTpJElKkyTpFUmS7O9u0sFotZaaJ8HBwR0m9iVkQrVJx2V2oKUUV7oDFrFPqSkhZM8f8Lh2hOD9r6PQt15kq0GnMbJ7bQqntl9veIAEyhKLU+j1Qa96ife6oRVtEvsA+tyIXlJ4CfZfa3nnuYY4cE2Pwkvg4Aq+owVT75nFD4YBPPZ9BX1W5+L71xz6rM5lxe5iPkuvpFQjqDYI+vXrR3x8fJcT+wCOHz9OYmIi06ZN65JiH1giFAGioqKIiorizJkzrFq1qnZ/dnY27733Hnl5eTay0PpotVo++ugjzp+v3+1QRkZGRsbyOalQKJg8eXKHin1lZHKZHbjSnajg8ptiX+5Zgg/+CYVRi/+JD3DNOtnEmZrm2oVitr2dSOH1Gz6WUcL9qyBCh09Gle5cOy7p4kWe+80z/CPo/3ip1y8ID/HkUOJprn4HKdvg6ndQdARKEuHi6TTeefsdnn/uOZIuXmyzjW2lokjL8bgMfAJd6NHnZrS+GRNaSghnRpcX+4xGI+vXr0cIwbJly+xS7AP4/vvv2bRpE2Zz05k9XZWkpCQ+/vhjKioqmh4sI2OHyIKf7XgH+BsQDzyDpfH7n4CPbGlUV6e6upoPPviAI0eOdNic36XCA5sEj2wvodRYihv+dfY7ll3DsdwizDmWX8c158c2zSeE4NjmdLQVBsKG+6LMre9Ula7MwORhQB9eRcXPssDU/it3vr6+9O7TG5dg+Py8FoOpbZENBpPg8/NaXIKhd+9wHl/6EsP6jqNbhArPMXrC7oa+86H/UvCbLijLhxEjRrB27VrOnj3b5dJ4AbKysti1axf9+vVjwoTWFQXvLJw+fZrTpy2RCVFRUbz++uucOXMGjUZDTEwMRqOxQ1PrOxIhBHFxcRQWFtpt12EZGRmZtnD27FneffddCgsLO2Q+oxk+PAUFxhxS2IozPqioW9tX69MHnWdPy3hnHwxu/g2dqtmUF2o5vvUaPoEu+AS6AtBjeRSBP4/C6ZynZQEWiIuL4+WXXyb9cg6r899jbd4aFnTT88EEV04v9yD9cQ9OL/fggwmu3OflQPkJKDwO6ZdzePnll4mLi2uTnW3BaDBzZP1VJIXEhOgwlKqbj5IV5BDEWNxpXU3qzsT3339PTk4O9957b4eK0x3JhQsXOH78OG5ubnYb/VZUVERcXBwqlQpnZ+emD5CRsUPsc7mikyNJ0hDgSeB9IcQzNzavkSSpDPiVJEkfCCHavsz4E+PWdvJhYWEdMmdKETz3ncAkJI5dDWBd/FSemZpYZ0x1wDByxv2SgIR/kzf6WSpC29bqPik+j+yUckYP7svQX0zD+ZgXV67urVO82exp5NqxePT9Kq0q68+dO5e01HdQuAneP13NC6NcW32u905Vo3ATOHrAzEmLqEh0JXigFzOe+QVpadPIzMxEb9Sh9tEwwLyYsW9NJygoqB2vpuPx9vZm+PDhzJgxwy7SKYYPH87p06c5c+YMkZGRREVFMWrUKKZMmcILL7yAi4uLrU20CgkJCSQnJzNr1ix69uxpa3NkZGRkOhX5+fls27aNoKAgfHx8mj6gjZgF/G4PbEiCLemC1xZ0R+1Qf3HU7OBK5l2r8D/2LvkjV2J07d7qOY16E0dirtQ2sVAoLff08p9n4rE+EACPbwNZO/bvrP10LRXZUHoBXhjuyBNDHFEp6voAno4wtoeKsT1U/DLKiU/O61h9RIdXBKxdsxaARYsWtdre1nJqx3VK8zRMXt4bV6+bv9NqinDDjx4M73CbrMHAgQPx8PCgf//+HTqv0WjskGjCgoICtmzZQkhICDNmzLD6fLbAYDCwfv16FAoFS5cutdsoTRmZpmgXKUCSpGGSJH0sSdJFSZLKJUky3eHL9i2lbM/9WCp5/Oe27TU//6wjjbEXDh8+TFpaGnPmzCEwMLBD5gz3MbI48ioAQV6VLB91ucFxFaGTuLrgI8rDp7VpvryrFZzfn03PQd5Me3khbt/5oSxxwPvf9Qsj6wdYV+wDmDJlCoGBPXAfDP84Xs2Fgta9vc/nG/nniWo8IiAwKJCxE0YS1N+T0QtD6datG2PGjGHJkiXMu28yj858lSWzH+rSYp/ZbMZkMuHi4sKCBQvsbtWxpo7f//73PxQKBf/+979ZsGABZ86csald1iAjI4M9e/YwcOBAxo4da2tzZGRkZDoVOp2OmJgYHB0dWbJkSYdEEu1Pt4h9AImZgexPHNDoWJOTF9lTXmmT2CeE4MTWa5QVaBm3pFed+n1V8/OonlJI4evJ7Pr6Ez79bA0V2VCdBLHz3Xh6mFM9se921AqJp4c5ETvfjeokqMiGT9euJSkpqdU2twYhBN2CXYmY2oPAvjej2U3oMaEjjOko6NqdbI1Gix8bHh7OpEltW6BvKW+++SaOjo68+eabVp1Hr9ezfv161Go1S5cuRans2n+zhhBCsGPHDvLy8li8eDFeXl62NklGxma0+a4rSdKzwAngMWAA4IZFzLrT10+dkUCREKKOOiSEuA5kAyNsYlUXJi0tjQMHDjB06NAOaydvxkSGdIClE77nmann+fu9R/F21eNUkIxk1NUb3xZnsgZJAd1D3Ri1sCfFr1n+fYRCoCy0TRFnBwcHXnjhBRzdwHMwLNpY2mLR73y+kXs2leI5GErPQvE5E4XFBUy8rzcOTjedkGqKcMWPAIa1ytasrCzi4uJ46623eOONN3jrrbeIi4sjKyurVedrC4cOHeKzzz5Dr2+f2oedhVWrVtUp/vzggw9y9OhRFi5cyJkzZ7p82nJDXL9+HR8fHxYtWmQXUZoyMjIy7YUQgq1bt1JcXMzSpUs7rKzD+LASHpxwHIA5gzO4Z/hVMJvwO/EhTgXJ7T6f61Z/AjaGc9e+u+ipvW3BWQHX9yeQ83Ii//jv39FVWiL7vp3jxiDflgktg3yVfDvHjdILoK+C1atXd5gfIYSlOVrvEd2ImNLj5nYEleQSymSc8eoQW6yFTqfjo48+4ujRox0+95tvvsmrr77K4sWLefXVV60q+hUVFVFVVcWSJUvw8PBo+oAuiF6vJycnh8mTJ9OnTx9bmyMjY1Pa1KVXkqQxwA83fnwf2A7sAIqBZUAAMANYDpQDzwM5QoiDbbC5XZAkyQWYgkVci7rxWpOL9boQYlUzzuEO/BpYAoQBJiAFWAe8I4Ro8C4sSdJ5wCyEqKdcSJJ0HPAWQvS98bPcBa4ZnD9/nqNHj/Lwww93SAczM2auEU8+F/AgGOmGju12LZ7AH/5FVY8osib9HhRtXzWTKpU4JXihmVlUd4cJuv9mMGVPZKAf2PZGIG0hLi6OtWssKSplifDrUS48O9LljqvWBpPgvVPV/PNENZ6DwT3QUqj6kQgnvk3REjG+J39871f0GxSOCT3VFDGYZQ06lI11idVqtXz99de8//77nDp1qlFbRowYwdNPP83y5ctxcnJqdFx7kJaWxpdffsnQoUO555577EIkkiSp3ueSJEmcOnWKxx9/vDbF97PPPmPo0KE2stJ66PX6TtM5UUbGGshdeusj+2dNYzQa2bhxI0FBQUycOLFD5tRSTjKbkZC4kNGXyJACVEJPjyP/wD3zKCYHN67N+Ct6r9B2mU8IQcicsbh+7wdAxeIcsjfWr8qze/du3nn7HQqPwRNhjjw9rPW+xntntXySrqPbaHju+eeYOXNmq8/VHPRaI/s+v8zgKQGEDKxbz66KfDwIpjezan3hrogQgg0bNpCUlMRDDz3UoU3UasS+Dz74gJUrV/LRRx/x1FNP8cYbb/DKK69YZc6fgt9iMBhQKpV2W59QRgY6pkvv81gi9lYLIZ4TQnx3Y7teCLFPCPG1EGIFMBZLn9A/AfX7zduG0VjEyT8B93JT7GsWkiSFAueA14AILL8HRyzRe/8AjkqS1FiVVxegfgiYBS1gX/l9HcCQIUN4/PHHrX7zul4OX54XZHKMfM7jQVCtg+NYnEZg/P9DMhtxyzpO97P/a9tkZvD4PJjwftNI/mclF2Lz6z5MKKHg34k2F/vAUkfmsccfwyMI/MbD+ynVDPi4iDePVBJ/XU+Z1ozJLCjTmom/rufNI5UM/KSI91Oq8Z8AHkHwaLSlnOUb4xw5FO3O4MJc7ot8kQfveoZzl07ccfW4oS6xR44cYejQoTz22GN3FPsATp06xWOPPcbQoUOt2vClrKyMjRs34ufnx7x58+xC7Lsdk8nEmjVrABg5ciSSJHHmzBlOnTplV2LfDz/8wPXrlmY89u40y8jIyLQGlUrFsmXLOiy6W08VKWxDYMYJL0aGFqBUgKqqAJd8S31lpb4Sz6v72mU+ncbI3s9TuPjSMQDMbkZ0Q8otTzy3sWPHDnTlICrhiSFt62C7cogj5grQlVvOa02EEByLy6CsQIOzm7rOPgPVgIKeTOrSYh/AsWPHuHjxItOnT7ep2AewcuVKPvjgg3aP9MvOziY+Ph4hhN36LVqtlu+++w6dTodarZbFPhkZ2i74TcByW1t92/Y6n/pCiDPAc0Bv4KU2ztmelAB7gf+HpW5ebnMOkiRJCWwFegE5wEwhhCsWIe9+oAKIBL5q5BTV0Gi/eidA0zzzZfbs2VNbF8za4kleFTywCf6wT2L1USVuIgjplreQzjuc4oH3Wr73CKak3/w2z+n1XhiXPa+SMC4BxUH3Ti0QLVq0iL/9/e/06heI72jwGCn4skDDir3l9P+4CP//FNL/4yJW7C3nywINHiMFvqMhtG8gb7z6V0TOza5u/i4K3hjnfEP4y2PF0L8zZ9jSO9aAu7VLbGRkJBMnTuTy5YZrKjbG5cuXmTRpEv/+979b9Tu4EyaTiQ0bNmAymYiOjrZLZ+vMmTOMHTuW559/vvZnexP6AFJSUti9e7dd1iSUkZGRaStVVVWsW7eOkpKSOmUerMX6i/BWgpFLYjtGtLjgW2e/wSOI69PewKR2pXjAPRQMf6R1ExkkXLdaOvkKITgWm05xZjWGAVXkfP4jV9L2UrQqpV7xoqKiItJS06i+Dg8McGiyZl9TqBQSPx/gQHUmpKWmUVRU1PRBreRSQj5ZyWUMnxlMtxC32u0CM1UUEM40HOjaDbmuX7/O7t276d+/P+PHj++weRsS+2pob9FPo9EQExPDyZMnaxfJ7Q0hBJs3b+bEiRMUFBTY2hwZmU5DW9vV+AM6IUTGLdvMQENx6rGAAVgMvNrGeduDw0KIOq3CJEn6WzOPfQQYcuP7JUKIBAAhhBn4VpIkBfA1MEeSpOlCiL23HX+nOn1BQMtUip8oiYmJHDlyhDFjxnTIfP9KgIwyy/dxJ0cwt38lwd5VNwdIEoXDH8bk5El52HRMTm2si6GAtD+f+V4lBAABAABJREFUYNv+U/TID2DUyHCqyGnbOa3MwIEDefvttzl48CA7duwgzSMNELe53pal7959ejN37lwmTpjEoS/TEaJ+7b8a4e+ZYY689+Nlxo2MZPDgwaz575d1UndrGD58OA8++CA//vhjvX2SJDFmzBiioqLw9fWlqKiI06dPc+zYsTqRk0IIfvWrXwHwy1/+sg2/jbpUVlai0WhYuHAh3bp1a7fzdhaioqI4d+4co0aNYvXq1WRlZdmd0AdQWlpKbGwsAQEB3H333bY2R0ZGRqZTYTab2bRpExkZGUyZMsXq822/DL/dIzALFen6QTw/+WqD1cJ1Pr1Jn/cuRmcfaIUA6ZTgTcATQ3G84MH1PQmcdLhA9uVyRswJwTfIlfKHMxs9NvXG4qO5FCYPVjc6riVMClTzTYalclBqaiq+vr5NHNFy8jMqObsni+CBXvQbU7cOdSW5BDAML9onNdqWFBYW4u3t3aFlVu4k9tVQs/2pp54CaHV6rxCC2NhYKioqWLFihdVL19iKH374gUuXLjFr1iyCg4NtbY6MTKehrYJfdQPnqAA8JElyFELULiEIIQySJFVD57gzCCFMbTj84Ruv+2vEvttYB/wZS12/h7BEEd7KKWCWJEl9b23cIUlSCBB443iZO1BYWMiWLVsIDg62eu2SGp6dkkpSpZrz10L4w5xTdcW+GiSJkhtRfi1CgOMZD3SR5bWbjAYze6/8CC5mRj7rR1VQ5xb7anBwcGDmzJnMnDmToqIiUlNTyczMxGAwoFarCQ4Opk+fPrXOaWleNVWlOsbcEwq/b/ic/i4K3pjgzLL+Dty3PZFpk8ZRXFE/EPbIkSP8+te/bvAcAwcO5IMPPqgnFF69epW//vWvfPLJJ3W2//rXv2bMmDHtttrr6enJU089ZZfd0BwdHVEoFPz2t78lLCyMRx99FJWqrbeXzofRaCQmJgYhBNHR0ajV7fPgJiMjI2MvHDp0iCtXrjB//nx69OjR9AFtQAjYkGTGLCzZFkmZIWgM13ATpUjChMnJq854o0vrRTGff4XjeMGykKt504Pzd2XTM8KbPqOaXsDLvNEcrLwCBvq0jw8wyFdJeTn4ApmZmVZZ/M67Uo6btyNjFoXWEcJ0lOOAO0F0zIK7tYmMjGTo0KEd5p81R+yroT1Ev/j4eC5fvszcuXMJCgpqucFdgIyMDPbu3cvAgQMZO3asrc2RkelUtDWlNwtwkyTp1lCmtBuvo24dKElSIOBJF+/Se6PZR00xkp0NjRGWcKGaeoazGhjyLZYwpxdv2/7iLftlGkGv1xMTE4NKpSI6OrpDbtClZJCj/p435p/m74uPMj48F99zX+NzIabN51ZdcyZo3mhCR0zG6bhX7faizCrKC7WMua8nrkFdUzzx9fVlzJgxLFmyhPvvv58lS5YwZsyYOivRXv4uLHghguABXo2eJ6/azKtHNCzeWkn/gREcOHKs3hitVsvChQvrFU1fvnw5X3/9NUlJSQ3WEQoLC+Pjjz9mx44duLq61m4XQvDoo4+i1WpbceU3KSwsZPv27bXFgzszTk5OtTUQW4JWq+Wll17C09OT6OhouxT7wJI2npOTwz333IOPj0/TB8jIyMj8hEhNTeXgwYMMGzaMqKgoq88nJBO/m7eP8f0uE+xdyV/vPYq7uZiQvX8gZN8fUejKmz5JM8lbfQGThwGzi5HT007g7uPEqAU9mxURZjAYLK9GcG+nah5uajAa656/vRlyVyCznhiA2vGm72LGiJZSwpmBiq5dmuTIkSMkJ1u6NneUf2Y0GnnttddYsmRJPbFv1apVTJ06td4xK1euZMmSJbz22msYjfWzYe5EeXk5Bw8eJCIigpEjR7bF9E6LEIKdO3fi7e3NokWLOnX5IxkZW9BWwe/cjdf+t2w7gEXUe1WSJCcASZIcgLdv7D/fxjltzUBu/t4u3GFczb4ASZLqPBkKIc4CHwNPS5L0uSRJj0mStAb4FfBfIcTxOxlQUw+loa+fApcuXaKwsJDFixd3SDv5crK5zA5c8cNZpWJYUCHdzv6PbhfW0f3cl3gnxbbp/P7PROC20x9JSPivHApGy9/RP8ydBS8MJrCfZ3tcRqejLF9D0pFchBB1nMlbqRH6Jn1bwQV1P46dOsuJM+cbTBX9+uuvKS4urrPtnXfe4ZtvvmH58uX079+fhISGAnItzJkzh/Xr19fZlpKSwtdff92Kq7NQI05fvHgRjabzl+ZsqPlJc1m0aBEPPPAAXl5e1jGuEzBq1CgefPBBBgwYYGtTZGTalTv5FT8V30KmbQghOHLkSIc1pTJjJoPDVCgv88rsJP4dfQRvp2pC9r2CU2k6jqUZBO9/HcwtT+hRlKrqNd4wBerIWXeaqxcPMPwVH+56pC9qh+aJRDXR4GoVVOhbbE6DVBqgZm2tvaPNLx3Npzin2nLu2/yzCnIIZhxu+LXrnB1Namoqe/bsqRX8OgqVSsXrr7/Oxo0b+eijj+rsa0zw++ijj9i4cSOvv/56ixdUPTw8ePjhh1mwYIHdfpZLksTPfvYz7r//fhwd29YQR0bGHmmr4LcNi7h33y3b3sPSgXY6kClJ0hEskYD3Yrl9vtvGOW1N4C3fZ91h3K37AhvY/yzwf8Ak4H0sv6/XgF+01UB7Z8iQITz99NP07t3banMIAW8chL3XS0hhG874oKopTWk24lScWjvWJfdsqxzKGvJXJ2J2MSIkgWZCMaXXtVxLLAHAub2WgjsZBp2J+JgrXErIR1ddf7Uyr9rMqz80T+ir4f3336/zs6+vL88//zxCCPr378+lS5d45JFH7ihizZkzh1/8ou5b8PbzNhchBNu3b6egoKDDxOn24NbmJ80R/q5du4bRaMTJyclua6YUFhZSXl6OJEmEh4fb2hwZGRmZTkfNQ/fy5cutWu7ALEAgyOQoBSTiTiAqhYSnsx4UKooHLkYgISQFpf3mgaJlkVtuG3sQ1nca7uvqu+5nuydS7l2GJEn1OtbeieAbaZQe7pBU3JaKQje5WGSixq1oz3tvVkoZP36fyZXThfX2VVOEOz0IYFi7zWcLysrK2LRpU6043dG88sorvPHGGzz11FMNin638tFHH/HUU0/xxhtvtCid12QykZFhKbEfEhJil43iwFKWRwiBp6cn3bt3b/oAGZmfIG0V/HYAr3NLkwkhxFVgOZZafj7AOCwlJgTwlhCisc61XQX3W76vvsO4W/e5375TCGEUQvxVCNFbCOEohAgTQrwhhLBOXL4dkJOTQ9aNOijWbnrw/xJg7Rl4Is6DU6kDUd/agUypJmvyK1T7DaYyaDTZk//QfIdS1N9kCK8md81ZrsUfIfMfZ4nfmsqP32di1LePU9jZEEJwfGsGlcU6xi0Nw8m1rtP8aoKGyTEVXFA1T+ir4dSpU3V+DggIqBWqkpOTmy1ivfzyy3VWQU+dOlX7f9cSTp06xblz55g6dapVxWlrMHz48GYJf7m5uXzxxRfs3r3bBlZ2DDqdjnXr1vHVV1/VSxeXkZGRkYFz586h1+txcHDA09N6WQklGliwDmKuXCGH03gQjHTbo0x52F3kjXmGnPG/pjx8WovO77k2hKClI1EVOuL/zBCU2Tejha4nlXBy+3UuH295988+ffsCoPCCQ1nt4+Yfzjag8Lpx/j592uWclSU6jsam4x3gTOTsuiKiCT0m9PTiLhR07vIkd8JkMrF+/XpMJhPLli2zWS3eO4l+NbRW7APYu3cvn3/+OXl5ee1hbqfk0qVL/O9//+P48TsmxsnI/ORpk+AnhCgXQrwuhPjotu2xQDiWhhV/wBLNNkAI0UhJfhmZO1PTTn7Tpk2YzWarzlWigfUXLXMYTUpOXa3fZ0aoHMmc8ipZE3+HUDbPWVAWOBC0aBSuW/3r7av4WTaaccUcj0unqlTH+KVhqJqZKtKZKCoq4tjRo2zcuJF169axceNGjh09SlFRUe2Yy8cLuJ5YypBpgfj3qquF+/VQctHPnx9Onm620NcQQ4YM4cKFC3WOb66IFR4ezujRo+tsu11MbAq9Xs+BAwfo06cPkydPbtU1dAaGDx/OwoULG/ydabVaYmJicHZ27tLXeCeEEGzdupXi4mLmzJljt+kwMjIyMq3lwoULxMbGcuxY/dq67UmVHh6Jgwv58PK2MI5eHF9P7KuhrPcsKkIntXiO8mXZ6HtZ1uvNribUWZbMjopiLcfjMvAJciFiassbkfj6+tK7T29cQuCrZD0Gc9sWjwxmwZfJelyCoXef3u3SoddkNHNk/RUQMGFZOErVzd+tQFBJLqFMwhmvNs9lSxITE8nKymLRokVW6WzcEu4k+rVF7EtKSiIhIYFRo0bh71//mcMeKCkpYfPmzQQEBDBixAhbmyMj06mxWmV1IUQx8KW1zm9DKm753qXRUXX3VTQ6qhX81KJMhBBs3ryZ8vJyHn30URSKtgam3hk3Zw1/XbaHP8ZOJsRbwwt3ncGhLBO9Z0hdu9TOzT6n0wlPghaORpXrhNNJL65OPIDZu+4q76Wj+WQmlzF8VhDde7q1y7V0BHq9noMHD7Jjxw7SUtMaHde7T2/unjGP8jO+BPbzZOCEuk6ICT3bs99jMPe12KFUqVR1ChlPmtS4o18jYn366aesWLGCqKgohg8fzqefflrbwXfEiBF1Hl6Sk5NZuHBhs+1xcHDg0UcfxdnZuUuLRKtWreL1118HLKm+33zzDQ888AATJkzg008/paysjIcffrhOsxN74vjx4yQmJjJ9+nR69epla3NkZKxGU35FV/4ck7EehYWFbN26leDg4HbraN8YpVoo0hoANUJIOKvMqCrz8Lq8k8JhD7Y4dbchhLuJ3M/P4PlZCPn/uYDZy4jRYOZIzFUkhcSEpWF1hLCWMHfuXNJS30Fyg0/O63h6mFOr7fz4vA6FOzh6WM7bHlw+UUBJjoZJ94fj5l23Dlo1BXjTm250/fq1Q4YMwcfHp9OUIKkR82q68K5cubJNYl9RURFxcXEEBQUxa1ZDfSO7Pkajsbbm9rJly+y2UZyMTHshv0NaTvYt3wdxs3HJ7dza9zy7kTEyzSA+Pp6UlBTmzJlj9Ru0ET2pfI+PRxH/iT6Kk8pA0OkP8Li6j6wpf6Q6oHV1Sww9NWC2PDCpcpxw3eFHxQM300QrirWc3Z1F8EAv+o/tOoWQky5eZPXq1WRn56Arh+rrYCqFinIwmECtBHcPUHrBxfI00lLfZmCvSH4+b1m9B8gKcghjWqtWj//4xz/y2muv1f58p1XbGhHr9ddf57XXXuOll16qFbGqqqoA6nVgbW6nXiEEly5don///jZfOW4PamrJ3HPPPbWRfZGRkbz00kskJycza9YsevbsaVsjrURWVha7du2if//+DXZ3lpGRkfkpU9OUSqVSER0dbfUupx4eObwa/T1/jVvEvIjrTA86S889f0BdlY9KU0Lu2OdbJPo5JLnhkOhO5dKcOts1U4rQTLmZlXDxUA6leRqmPNAbV6/WNwSYMmUKGzdsQB+Rw+ojOqYGqxnk2/LfWWKRibfP6AiYCIFBgUyZMqXVNt1KvzF+eHRzIrBv3ZRsAxoEEMokJLqu8F9YWIjZbMbPz6/TiH013Cr67dmzh40bN7ZK7KsRwhQKBdHR0XYrhH3//ffk5ORw//334+3tbWtzZGQ6PdYNlbJPkoCanNKIO4yr2Zd7I9pRphVkZ2ezf/9+IiIiGDVqlNXmEQLMmLjKPqrIwxU/vFz0BCV9gVfqdyhMeoIO/gnHkqutOr/JX0/uZ2cwBmi5vvNoHbEPwN3HiXFLwhi9MLTLRFLExcXx8ssvk345h4KjUHYc7nFS8M9hag7Od+DcUgcOznfgn8PU3OOkoOyEROExOJv4I6+8+nvi4uJqz1VJPt6Et3r12Mmp7kr5rSnEt7Nq1SqEEPz4449s2bKFBx54gMjIyDodfG/v9nv7+RsjPj6eb7/9ltTU1KYHdwHOnDnDli1biIqKQpIkzpw5w6lTp5gxYwbjx49n7NixtjbRavj6+jJixAgWLVrUZd6TMjIyMh3Frl27OqwpVRWFXGIrPVydeOe+IywYmoFn6v9n77zDo6rSP/65M+k9hDRCDSkk9ISOVAWkIyEBsSEoKKwiWFZ3XSni6ro2XLEhgj8VEQjSRJEmSIdAEAglISGEdNLbTKac3x/DACE9mSHF+3mePElm7jnnnXrf+z1v+Q3LogwAHK8dxDovsWaTCXD+qi3tQgfj/VhPrM6VK7Ndhk4DvRgwpQPefvWrTWhlZcX8+fOxdgCXLjD1l0JismpXq/l8lo5pvxTi0gWs7GH+/Pn1bsaQn6VCVaRBoZDKiX0CPUVk4Mv9WNF0I/mN4vQPP/yATtc462Mb03s3bdpUJ7EPQKlU0qtXLyZPnmzWWpoNTdeuXXnggQcIDAxsaFNkZJoEsuBXS4QQxcChm/8+WNExkuHqcNTNf3+7F3Y1V7y8vBgxYgTjxo0z20V3bDZM3iA4mn+CHBJwvKOpcn6H4WhsDZFahW36o3auWTSTMrX8LnDRmAzi4/ZS/ODtgs96vSD/hiF6rG1nV6xsmkbdvi1btrDqq1XkJ0P6IZjhreT3sVbM72JJb3cFTlYSCknCyUqit7uC+V0s2TfGkie8laQfgvxkWPXVKrZs2YKGEkDQniEo6viVdPdJ/9SpU2VSfO8kOjr6Vi26O0WsO+v93V2zr1On6oXIhISEW+K0qQpoNxSVPUdBQUEIIWjZsiUjRoxolkKYXq+/1XV4zJgx2NrWPHVfRkZG5q/Cfffdx4QJE8zalKpADSryuMw2rLDHCnsslYb086xu08n1G4VeYUHy4H+gdq1hB3WNhOvHHVCUKFGolHg92aPChmqFOWp0Wj1WNkradjZNFFFQcDAzZ83CsRXYBcFD2wtZcUaFtpqafhq9YMUZFZO3F2IXBI6tYNasWQQFBdXLHo1axx8/XGH/91fKpfX38Qrj0THPkXPeBlfa12udhkQIwfbt28nMzGT8+PFmj0StD6+//jpqtbpOYp9Go0GSJHr16tXkfdDK0GgMpZDatm0rZ17IyNQCWfCrG9/c/D1MkqS+FdwfjqFpCcD/3RuTmhc6nY7CwkIUCgX9+/fH2rruaRRVkVIAj/0kOJUqMXd9V7JulBV2NE6tSHrg32QHTiS13wvVpotIKgWec7rRoctQLBLLCwXCvuzO4rl9Kez84gIF2ep6P5Z7xYWYGL5etYqCFCiKgW+HWDKrkwUWiqrFH0uFxKxAC74dYklRDBSkwNdfr+LclaP13j3u1atXmf+PHj2KlZUVy5Ytu3VbTYQ+gPj4+HIdv6orCFxQUEBkZCRubm6MHz++SQthlT1Her2etWvXsn379oY20awcOHCAVatWoVY3nc+kjIyMzL2ioKAAIQQuLi707NnTbOt8cwbu/07P7qw/kFBgzV1RhJKC9N7Pcm3U+xS3qkXRfitByo9R6G11qIMLSPs6mrszVUtVWvZ9G8uhDXXL6qiKiRMnMuupWTj5gOdAWHlVTcjafN49WcKRFC15aoFOL8hTC46kaHn3ZAmha/NZedWQxuvkA089NYsJEyfWyw4hBMe3JVKYrabnKJ9yfkt+ugb0CsZ0nV1hg7OmwsmTJzl79izDhg3D17eGonADUpc03LS0ND766CMSEkz/fm0sqNVqvvjiCw4ePNjQpsjINDn+0oKfJEmukiS1NP5w+/mwu/N2SZLu7qDwDXAWg4sQKUnS/TfnU0iSFA6svHncL0KIPffisTQ39uzZw+eff36rppq5uJQFN0oMu5qqUiu0uvKCnsbRm8zQWTWqDeM9NRSXL9uhzLaiVUQokrryj1jK5TxiDqbTrmsLHFuYR9A0NaWlpSxfvhx1IeSeg68HWdLJpXZfI51cFHw9yJLcc6C0hRVLNmCrqn3Xuzvx8fEpJ8q1b9+eN954A6hcxKqId955p8xOd2hoKD4+PhUeCwanOTIyktLSUiIiIuqdXtOQWFtbV/oc7du3j6tXr9KmTZsqZmjaxMXFsX//fjw9PZv06ygjIyNjDkpKSli1ahU7duww6zo/x8Ki3wXphQr+vvEB0m60Q9KVlj9QUqB27VDr+UuDCrm+8yiJJ/6gtGvZvnpCCI5tTqQ4r7RcczFTMXHiRN75z39oH9CKln3AuTf8mFfK3CNFhKzNx3dVPiFr85l7pIgf80px7g0t+0A7/1a885//1FvsA4g9nknS+Vy63e+DR7uyac16DJvT+349wqlTp4DbflRTEv7S0tLYuXMnfn5+VTZza8qoVCrWr1+PUqnEw6Pp1ACvDUIItm7dSnZ2dqOrvygj0xSol+AnSVKcJEl/lySpqX7DnAYy7/gxXsm+fNftn9w5SAihBSYAVzE059gtSVIRUASsB5xuzv2IOYyWJKlJRxBVh7GdfFBQkNm7f3ZtH8trE7fgbKtm0dgT9LvxFRZFmdUPrITsv8chLAwlHjW+xaCt+HUqzFVz9KeruHjZEjK66Qgo+/fvJyUllbyz8EygstZin5FOLgrmdFKScQCOrL/O2rVr623b3Llzy/yfkJBw67a0tLRqhT6AX375hZUrV5a57e5570aSJAYNGsSkSZNwd3evo/WNA5VKVeFzdPnyZQ4ePEjPnj1vdTJubuTl5bFp0yY8PDwYO3Zss/6OlZGpCUZfQ/4s1Jzm/HwJIfjpp58oKCgw+3nAzkqHtaVBdGrtUkJry+u03zEf59hfazWPpFLgMa8LNifK1zMrGZSNsCtfz+3SkQySL+XR4wEf3Nvevd9vOoKCgvj444957vnnCA7piGswuA2ADg+C/zjDb7cB4BoMwSEdee755/j444/rncYLkHW9iNO/Xccn0JlOA8pfwhViaGTiiDc9evTg1KlTTVL4c3d3Z+DAgTz00ENm/1za2Njc8+dFCMGWLVvIy8sjPDzc7NdMDcWxY8eIiYlh+PDhtG/fvqHNkZFpcGrrn9W3fY8v8G9gqSRJW4AvhRC76zlnk0AIcVWSpG7AS8BkoAOgAc4DPwD/E0JUsB0pUxXZ2dls2bKFVq1aMWrUqOoH1INcrhHPb/Rv40XoE7tpG7OKFhd+wvnKLpLufwutfe3FG9WAHDI+PA8S5M69Wi5NBECn1XN4QwJCwMBwXywsm06g7Y4dO1DngyiEJwLqVwdlhr+Sry/q0JXCp59+ysyZM+s1X2Ji+YLda9asYd68eXz66ads3bq1WrEvPDy8zG0BAQFMnz690jEqlQobGxuz1jBqaHJycvjpp5/w8vJi9OjRDW2OWdDpdGzYsAGdTkdERASWlpYNbZKMjIxMo+LgwYPExsYyevToKqPe64sePW3b/c7isGzW/jGMxffvIeDAq1gVJON14lMk9OT6j6l2HotEW3zCemET5YLDdk8So/5A17JqtzwjsYAzu5NpHeRCQD/zxzJYWVkxYsQIRowYQVZWFnFxcVy/fh2NRoOlpSWtW7fGz88PNzc3k67r0MIa3x4t6T6iVbkLRhW52NKi3Bij8BcdHc3MmTMJCQmhR48efP31141uI1AIgVqtxsbGhmHDht26XavVmq1zrbEMyL18Xo4cOcLFixcZNWpUs82+SEpKYteuXQQGBsp1+2Rk6kh9lYa3gBTAEpgC7LwZ9fdKU4j6E0K0F0JINfiZUcn4AiHEIiFEVyGEgxDCSQjRSwjxvjnFPiFEueK6zQGNRsP69euRJMls7eSFAJ0eCkknlh3Y4Y4SK5xLruJ6cSsAVoVptLiwudq5FNmWWCSV796a+7er5M67WqHYBwZV3r2tA30ntWsyqbxg6Hx7Je4KxUkQ3kFRbc2+6rBQSEz1VWApGZpkJCcnVz+oEpYtW8abb77JSy+9VMZ5LSoqYsWKFQwYMIA33nijTE0/I/Hx8cyePZsxY8aUSSGXJInVq1dX2qE3Ozubjz/+mDNnztTZ7qZAXl4eNjY2hIeHN1shrLi4GI1Gw8SJE01+YSUj01Qx+hrN0d8wF831+YqPj7/VlKp3795mW0cguM4RsrhIT09r/ht2BCc7LXpLQ01kISnR2pYXoypC0kpYxhkiniyv2eG0pvpUQBsHS3wCnek7sd09j9R0c3Ojb9++hIWFMW3aNMLCwujbt69Jz0l6vUCn02NtZ0Hv8W2xsinrZ+vQUEohHbi/0jmMwt/3339PdHR0oxRhDh48yBdffFHGp1u2bBnW1tYV+oGm4l5HQubm5hIcHEzfvhWVk28e5Obm4ubmxsSJE5tt9LSMTG2prX8m1dcxkSRJAYwB5mDoWqvE0O9KC2wGVv5Vov7MgSRJ5V6g5uhMgiFaasuWLYSEhODv72+WNT46CqfSNcwZsxYnSyusuJ2uYZ98glZ/vENRq1BS7nsFFJULjlbnHfCZ0Ae9k5ZrBw+Va8ZRGXq9QFFPoayhOHb0KG+99W9uHIL3uxu68daX4xl6nj+koVBr6Pw7YcKEWs+xbNky3njjDT777DPmzJnDhx9+yMKFCys9vk+fPowcOZLs7GyioqI4fvx4hZ+pDz/8kBdeeKHCOTQaDatWrSIvL485c+bg4uJSa7ubEjqdrlF3tjMFf4XHKCNTVyq60BJCNM2TmYn4K/lniYmJ/P777zz88MNmqW+arwYrJeRYnOYah3CmDdIdMQmK0iJ8DrxFTuB4Ctv0r/G89ts8aTUllMz3Y6rciDW+bs1dUDj7ewppVwoY9pgfFlblz3d5XKMNA/GmB5IkVfh+Nkb4RUdH07NnT1avXl1l9sS9Jj4+nu+++47OnTszefJkJEm65SeGhYURGRnJ0qVL69QJtyrufr7ufJ7MGfH3V/Bd/gqPUUamrtTEP6v3FbsQQi+E2C6EGA+0AxYB1zBE/YXTxKL+ZBoGIQQ2NjZMnTrVbGLfj+fhw2Ow/6oliyLHolK5lrm/yKc310a8Q+rAl6sU+xT5FrQdPBCreHtsop3xmtW9RuvnZZTw62cx5KQV1+txNBTXb0bgFeRDoLNpnOJOLhKqm1rpxYsXaz3+brEPYMGCBXzwwQeVjjl+/DjLli3j008/5dixY+UcWkmSqhT7wJD+m56ezuTJk5ut2Pfnn39y6NAhhBDN1tG6ceMGW7ZsobS0tNk+RhkZGZm6Yjw/tmvXjieeeMIsYp9aC09vh6k/lRCjOokTPmXEPgC9lT1J979VK7EPoGh8OglX9pL7t6uVin0Af+5N4cimq+j1jV+w1elqtsF8N6lx+Zzfn4ajmzXKCkrJFJOFIz540rXC8dHR0bVqgGZEq9XWyd66kJ+fz6ZNm3Bzc2P8+PFlxL7PPvuMDRs28Nlnn1Wa8WFKevTowYQJE0we8afX69myZQtpaWkAzdZ3OXjwIGfPngWa72OUkblXmLR4mBAiRQjxJobafqOBnzBE+vkCbwNJkiT9KEnSA6ZcV6Zpk5aWxjfffENeXp5Z17mWf9tJcrQW2Fpoyh2jdvNHKKtOW9Q7acl854Lhb3stBVNTql1bo9ZxcH08pSU6bOybZlqkRmN4vjQ6cDDRQ7C3BO1N/1qlUtVqrFarZdGiRYSFhd0S+wAWL158K8KvRYuapf4YCQgI4ODBg1WKfadPn+b06dMMGjTIbOJ0Q5ORkcH27duJjY1tthErpaWlrF+/nsuXL9f6vScjIyPzV2D37t3s27fPbOcBIWDhb3D0OkSn2LJ4w1R0KoFVXlL5g6uIvlOmWNMqPBRlRnlBUtu66u/35Eu5XDiYjoWVotFnYKxZsY7+rg+xZsW6Wo0ryivlyKYEnD1s6DW2bbmIEB2laFHTgWEoKCuu1FXog3uTRmtEp9OxceNGSktLiYiIwMrKqsJN4Tlz5twT0W/x4sUsWbKEzZs3mzQFeu/evURHR5Oenm4iSxsfcXFx7Nmzh/j4+IY2RUamWWCWbgHCwE4hRBiGZhYHMOyt3Vnr75IkSbMlSZJl+78wxnby2dnZZiukC6BHx6T+v/H0sD8I8Mjl3a4f0+7I20i68qJfTch7+hqZb14k8chBCh9Kq/JYIQTHtyVSmK1mwJQO2Do2TcHPWL/NUgmFdXvaylGkAYubfmdltfIqw8LCgiVLlhAZGckXX3xx6/bFixffqmuQnJyMhYUFtra2Vc4VGhrKqlWrOHPmDAMGDKjy2NLSUvz8/Bg6dGit7G0qqNVq1q9fj5WVFWFhYSgUTaepTE0RQrB9+3YyMzMJCwvDycmpoU2SkZGRaVRcuHCBw4cPU1JSYrZUV0mCzl6366yNCLxG+6Nv0/a3V7C5UbOof+uTzrTrPQjHja1oFdYLSmtua2GOmqObE3H1siV0dONuerBmxTo+XriWmW0VfLxwbY1FP51Oz+EN8eh1goERFTeKKySN9gzGhrLdjOsq9MHtDIzJkyffk4g6Y6T++PHjcXd3r1DsM3IvRL/FixezaNEiJk2aREhICI888gg9e/bkyJEjdZ7z0qVLHDp0iJCQELp3r1l2UVMjLy+PTZs24enpyZgx1TfnkZGRqR6zKSySJLUFZgEzgVY3bxZANNAV8Ac+A56WJGmMECLTXLbINE6M7eRzc3OZMWOG2drJCwTXOEQOCYR3a8OjLh/Q7tDbSEKHYv8ykgf/A2FRefMMZYo1+hYahI2+zO3Zr8fWaP3YE5kknc+l+/2t8GjvWK/H0pC0vtmVz9EJLuUJervX/wLgYq7ARgmFWujUqVOtxxtrsDz77LMA5Zw6GxsbtFotXbt25fTp0wD07duXMWPGYGNjQ6dOnQgNDa1Vx8G+ffvSp0+fZlnrRwjBtm3byM7O5vHHH8fRsem+X6siKiqKs2fPMnToUHx9fRvaHBkZGZlGRXZ2Nlu2bMHHx4eRI0eabR01BfQP2cTL9h2JT/fmOd0CHFJOAtBm7yISxn6C1t69yjks0q2xSDVsGNoeccXuDzeK779R7do6rZ5DG+JBwMAIX5QWjXdzyyj2Le+toJe7gs4uMH/hWgBmzJtW5VhVoZZSlY6+E9vh5FZ+Y7WQDFzoQEvK+mDW1ta3hL7a1ui7W2z74osvbvlppq6dZ8TW1pbHH3+8XBrv3X6hEePt5rIrOjqarVu3snTpUnr27Fmn5/FOcnJy2Lx5M97e3owePdqEljYedDodGzZsQK/XN+tGcTIy9xqTCn43o/XGA7OBERgiCCUgC1gDfC6EuCJJkifwLLAQCMGQ7vuUKW2RafwY28mPHDmStm3bmnx+tRasLSCFU6TzJ84Ydm8dcy4hCUN6r0XJDRRaNbpKBD/r0054j+lFSpcr/DD7QzS6UiwtLWnt44Ofv3+13dOEEKTF5dMqwJlOAz1N+wDvMX4301eVLnA4XWeSph1H0nWob2Zah4aG1mmO6kQ/423PPvssnp6eHD9+nNLS0loVUBZCsHXrVjp16kRgYGCzFPsAUlNTiYmJYfjw4bRv376hzTELGo2G/fv34+fnx+DBgxvaHBkZGZlGhUajYf369SgUCqZMmWK27AsNKmLZAcCIwBwIzCEvZxyOKcexUOeTEzi+WrEPoGhsBpn/uYDbv/1I2RBVI7EPIP+GiqLcUvo91A4H18o3fRuau8U+gF7uCpb3rpnoZ+9sxYPPBqFUlvfZtKgAQTsGI91V5LCupS4qS6MF84hrWVlZ7Nq1i3HjxuHg4FAjsc+IOey6u6lJfYU+I4cPHwYgPDzcrBlRDcmlS5dITk4mIiLCpN2pZWT+6tS7Sy+AJEntgaeBJwFPbpfGPYwhim+DEKK0gnG9gONAqhCi5iE2fyGaaxc4nU7HypUradGiBeHh4SYXUEo08PAm6N46i9EDfsBZan27LokQuJ37EaeEfVwb8TY62/J13kpLSzm17iwRT72MrcYQefip/5ssD3yjzHEd/ToyZswYhgwZUmkxa71eoNPqsaygI1pTY8GCBcScukLecdg31grLetS70egFg7eWUqAxiH0nT56sl22VOXmSJCFJ0q2ubHXpnHb48GF27drFyJEj6d+/dkXD64uNjQ3BwcFm6/B2N2lpaXh6ejZbURMMKSOWlpbY2dk1tCkyMk0CuUtveZqrfxYfH8/atWvN1kTtWh60ctIQJ/1KEWk44FXmfqu8JByvHSKry9Qq6/aVQYAyzRqdt7pWtmjUOiytG69vVpHYdycnM/XMP6Hn+Q+mlxP98m+ouHwsgx4jW1eYxisQ5HENPx7EDT+T2Fud2GaM9DNVl1yNRsOqVavIz89n9uzZODg4YG1tzeTJk9mwYUON5wkPD2fTpk2o1eo6i2mSJN0S+MzRvVin03Hjxg08PZt28EB1pKam4u3t3dBmyMg0GWrin9Vri0CSpCkYovmGYxD5JCAf+B74TAhxrqrxQoiTkiSlwV1ne5kqMb6wTdmxVCqVzJw5EyGEyYUFrR6e+xVOp8HpNDeuF43j5RFnb8vQkkRW12lkd5qAsCx/wX8hJobly5eTkpxKastSUtNzOaTcw9n4WEpjDTXsHJ0MkW4x+Ve4Evc/IjduZP78+QQFBwMGke/s3hQC+rpj62iFohmIfQBjxozhStz/kBzg/y7rmNWp7l8hay7p0N7Mkp47d269baso0s9Y2+9O57JHjx6cOnXqlvAXEhJSpfCXmJjI7t27CQoKol+/fvW2s7ao1YYLmOrsrA/FxcWkpqbSsWNHvLya59exEILz58/TuXNnnJ2dqx8gI/MXpzmL/uaiOfhnvr6+zJ8/3ywlHWIyIWKjYHBABo8PS8FV0arcMaXObcjqWnHEmiLHkhb/7ciNJZfA8o7nWKLGYl9uRgmpsXl0GuDZpMU+qDzST1uq49D6eFRFWoIHeWFhWX5Duoh0WtKJFnQ0ib0NkUa7Y8cO0tPTmT59Oi4uLgAsWbKEN954gy+++KLaCD8wiJCRkZEsXbq0XpFz9UmBroorV67g7e2NnZ1dsxX7bty4gUajwdvbWxb7ZGRqQG39s/rGBK+/4+/TwOfAWiFEUSXHV0S5yD+Z5oter+fw4cP06dOn0oi4+qLVg0aoAUOKRie3GxVuElck9m3ZsoWvV61CXQj55+A/hW8zPdiKF7ygk6s1DpaGhhUXc/QcTNPx4wkdCgco7ZLKq6++ysxZs5g4cSIxf6Rx4VA6jm42+PZsPmHpQ4YMIXLjRkq7pvLFIT0DvfR0cql9au/FXD2fXzCk8wYEBDB9+nST2Hen6Ld7924iIyPL3G5k6NChDB06lFOnTvHDDz/wyCOPMHDgQIqKyn51FRYWsnHjRlxdXZk4cWKDXQDXRqCsLXq9nk2bNpGYmMj8+fNxcHCov8GNkIMHD7J3714sLS0JDAxsaHNkZGRkGhVpaWlkZ2cTHBxsFrEvrRBmbBEUlEr8fM4HPaNY3P59Clr3R29d/XqWCbb4jOmL9UVHlBlWpK/8E2p5StaoDUKYRqXDt2dLrO0aZ2pkTcQ+I3eLfk/MncqJ7dfIy1Qx9DE/7JzK+9oailFgQVsGlkvlrQsNkUZr9IsGDx5cJhK1JmVejJgy4rCuKdBVkZ6ezrp16+jUqRNhYWEmn78xUFpayvr161Gr1Tz//PMolY1XhJeRaarUtwiXCvgG6CeECBVCrKyl2IcQor0QQv501wJjB9KmyL59+9izZw9xcXHmW8Qin7+N+4FRXeJ4uFs0C66NosX59VDNc7Zt43ZWfbWK/GRIPwRPtrbg0CQb5ndX0sdTiZOVhEKScLKS6OOpZGF3Kw5OsuHJ1hakH4L8ZFj11So2ffsr535PpX33FnToUT5duCljZWXF/PnzcXF1ZMTYsTx9UHAxV1/9wDu4mKvnyd81qHWGHYrVq1fXukNvVbz++ussXbqUTZs2sXTp0gqPGTp0aI06p505cwaVSkVERATW1g1b48cYmXjq1Cngdve86Ojoes174MABrly5woMPPthsxb6EhAT27dtHly5dCAgIaGhzZGSaBEZfo6n6Gw1BU32+VCoV69evZ+fOnZSWmmcf3tUGerTOA8DOSsOjzt/gdewT2u5+DYvirGrHO25ohfVFgzDosqodNkdca7W+EILjWxMpzFYzYEqHRiv26XQ6Pn1tLbP9qxf7jPRyVzDbX8Gnr60l9kQGiWdz6DrMGy/f8h3oBXqKyKQD92OJbb3t1Wq1LFq0iLCwsBpF1IFBhAsLC2PRokVotdpar6nX6zly5Ai+vr4MGTKk3P1GP/DZZ5+9lelxN6ZOLzY1arWa9evXY2Njw6hRoxraHLMghGD79u1kZmYyceJEWeyTkakhtfXP6iv4tRJCPCmEOF7PeWT+Aly+fJmDBw/Ss2dPgm+mvpoaDSXE8jOWComX+x9mSf5oLEqycT/zHW5/fl/puCuHEnjg6SfpdXocRTGw7gFrZgdbYlFNjTpLhcTsYEvWPWBNUQyUZthQcNkBG2eJXmPbNsuUqKDgYMLun03XLt1w7W7LY/s1fHVRi1Zf9ZeORi9YeUHLI3s1FGgMt33wwQcMGDDA5Da+/vrrqNXqCp04Y+e0kJCQW+kXUVFRFaZgDBgwgGeeeaZRpVH06NGDCRMmmET4i4uLY//+/XTv3p2QkBATW9o4yM/PJzIyEjc3N8aPH98sP5MyMjIydUUIwZYtW8jLy2PKlClmy74osohn5qjvmN7nAm8O+5WBsYYNOeu8a7id/aHa8dkvXyHviST01jpS1kWhGpBTq/Vjj2eSFJNLt+Gt8GjfeDvQK5VK5r49nS9j9ZzMrNmG6slMPV/G6nlm2XTO70/H28+J4EEVl+coJB1PuuGCaZrlWVhYsGTJEiIjIysV1+7GmEa7ZMmSOqXRKhQKZs6cSVhYGApFxZeyVYl+FYl9dREezYWxUVxOTg5hYWHNdjP25MmTnD17lmHDhuHr69vQ5sjINFvqJfgJIXJNZIdMMycnJ4effvoJLy8vs7STL9GADg1x7ERDMba0QFhao3UwCDV6hSXFXj0qHKu/qqDL2DE45Xrwa9pevh1uTSfX2n00Orkq+Ha4NZlnNOTnFrA/dh16YRrnQafTmWQeUxI2ZzC2gVlYuhfgORD+L03HkJ9LWX5Ow/EMPfmlAp0Q5JcKjmfoWX5Ww+CtpXx5M41XkiQ+/PBDXnjhBbPZeLcTGR0dfUscq07oS0hIIDMzE0mSGl2nsMWLF7NkyRJ69uzJhAkT+P7774mOjmbgwIG1mqeoqIhNmzbh4eHB2LFjm6UQJoTgp59+orS0lIiICLNdyMrIyMg0VY4cOcLFixcZMWIEbdq0McsaBaRxhd9wlLyY0T+Orp0gtf8ChKSkpGUnMkKfqn4SCdK+PMO1IwcpmJpSq/VVhRrO7E7GJ9CZTgMbzwZeZcyYN43nP5jO/BPVi353Nu6Y+fw0HpgZQL+H2ld4Ti+lEEtsaU1fk9pbk4g6I/WJrBNCcOrUKXQ6Hba2ttU23qrIrorWX7ZsGdbW1ixbtqxW9piLqKgoYmJiuP/++2nfvn1Dm2MWMjIy2LlzJ35+fgwaNKihzZGRadY0znh2mWbH9u3bEUIQHh6OpaWlSee+nAXTNwmeHXqBbv7pOGEoAi0s7Uge+gZeRz4kv/0QSjy7VDj+9/N7CFU68A/lP3iqq77WYp+RTq4K5gRJfL/xa5x7qdm/fz8jRoyo8+MCQx2XFa+tZd7b5TuwNQQZiQU4tbRh3ZpIVry2loiFI7mSdo4U+xTU+bA5Sc9PMXryskGjAwsJbJSg1oHmZgBgQEAAq1evNktkX2UYI+CMHdSqKqick5PD+vXr8fDwYMaMGY1OCDMKfqdPn77VbdjYEa422NnZ3dpVNfVnsrEgSRJDhgyhuLgYd3f3hjZHRkZGplGRlZXF7t27CQ4Opm9f04pAYOjI6+6cw2W2Y4MzFtwujVHQfgg6GxdULToiLO4q6yHAdr8bJUPvSvW1Eqh75tfaDhsHS4Y+5o+zu02jO6dXhtHnm79wLct7U2WX3ufen84D9z+IEAJHt4pLpOjRUUwWQUwu8zqYiprUzqtvGu2RI0fYtWsXFhYWNW6MUVFt57vFvjfeeIOwsDDeeOONMmMaiuDgYIqLi++pn3yvadmyJUOGDCE0NLTJfCZlZJoqtRL8JEkyRahRCZABRGNo8LHRBHPKNHLGjRtHTk4OLVqYtqZdZhE8uVWQWSyxdEc3/jYUJnRPvHW/UFqSet8rVc6xbfdW/tdpJdkntXwcVD97ZgVZsOqiCpt8Q/ew+gh+xqLNM30lPr6rA1tDUJCt4o8frpCYFst3nxns+vrt35j336m0DfNgx44dJHpewcIWctcDOtAKKLwZ6BgaGsrcuXOZPn26SWv2VUdtOqdptVo2bNiAEKJBm3RURXR0NF5eXoSEhNRIwKyI4uJi7Ozs6N27t5msbHiMj7G57o7LyMjI1Bc3NzfCwsLw8/MzyfkuOTmZkydPcunSJc7p/DhgO4kxfrsJH1BMqxblI+uKvbqXn0QHHvO74LqiA+n/O0vu367W2R69XpB1vQj3tg64t216aZFViX53Rvb17jaUgz/GM3h6R1r5V9yFvpB0vAm9tSluDqoS/eor9iUmJrJ7926CgoLo2rVrnexatGhRhWKfsdmI0cY7x9xLVCoVlpaW2NnZMXjw4Hu+/r1ACEFJSQl2dnZyZJ+MzD2ithF+prj6tQPaA+2AiZIkbQXChBC1q/wv0yTIzMykZcuWuLq64upauwLLNUGlA6WyFLDGxlJLd8cLGN5iNSMrK4srcVfISYWwACUWivql/FkoJKb5KdmUpOOK0xWysrLqlBJqFPveC5EIdZMIdoGXGlD002r0HFqfQGxsHOu/+5b/9jTYFeQML7/8I89/MJ0PPnyfxNyz5B/3IqFzNiqVChsbGzp16kRoaCg+Pj733G6oXee0X3/9ldTUVKZOnWpycbq+GLv0GiP6du7cWWuhD+DcuXNs27aNGTNm4O3tbQZLG56srCxWrlzJiBEjCA0NbWhzZGRkZBoVer2e7OxsWrZsSefOnes1l0qlYu3atXz66adERUUBYN1hIB7z9iBJCn6+Es7J32bxavs3SO3yKIOHDquyvILrBx1xXdEBAI/nu1AaVEjx/TfqZNv5A6mc35/GyKcDadHKvk5zNDQViX53in0Pjh7D/u/iaNvFFW+/8k06ANTkY40jrTD/+bAi0a++Yl9hYSEbN27E1dW1zpuxr7/+Oq+++uqtci8VdRY2VQfhuqDX69mwYQMAjz76aKPccDYFf/zxBydPnuTpp582SzdwGRmZ8tRW8FtigjWtAE9gEOAPTACeBVaYYG6ZRkRGRgZfffUVAwcOrLCLlilwdLrGoojfWP7zBGY5fsoDJ94mxfrvFPlUHrnk8lk7Sn2LKR6VSVxsLAC6XBjY0TTdoQZ6KdkQZQiGjYuLq7Xgd7fYBxDqJvFeSMOJflE7kjh9NIaNP9wW+4x2/bcnvLxwLRrLAv42+yXajxwMI++peSbh0qVLREVFMWDAADp16tTQ5pShNinJVXHjxg22bduGp6cnHh4eJraycaDRaNiwYQMKhYKOHTs2tDkyMjIyjY59+/Zx9OhR5s6dW6/N2EOHDvHkk08Se9OXslKCjaVEybXDJL1kg6WVNc6erQn2v45/KzWOp1fw4qZI5j7/AkGVNG/LnXsVx01e2B5tQUFECsWDqu/gWxGpcXmc359G++4tcPWu+UZwY+RO0W+2P3wZaxD7Ih6bzM4vLuLoZkPv8RU3itOjQ0UuwUzBgntTx7a6NNrasnXrVlQqFY8++ijW1nVPR65K7DPSUKLf/v37iY+Pb9bNxeLj4/n999/p0qVLs21EIiPTGKmV4CeEMIXgdwtJkj4FngEeRRb8mhXGdvJWVlZm6/5ZxA3i+BVPGxdWBr2KZ7ShhpnPgX9zbcTbqFreJdoIcHvTn5aLOqG315K07zDXk5MBKMinzrX77ibIVUFBPrQErl+/Xqu6OBWJfUYaSvS7+mc2e386ycZ13/JuTyq067894eXnt+GUGcIb/2yaaQgdO3Zk5MiRZqljVB9qk5JcFaWlpaxfvx4LCwumTJmCUmkagbuxsWPHDtLT05k+fTouLi4NbY6MjIxMo+Ly5cscPHiQkJCQeol9H374IS+++CJCCOytJKwsJOYMdGZEJzu6+VjjZKMgX6Xnz2QV+2LtGP0fDUE+AvzTePXVV5k5axYTJ04sN6+w13F9+3FcvmhH9qtxdWovWJRXypFNV3H2sKHX2IqFsKaG0ef79LW1PP/BdJ6YO5W9a2LRafQMjOiApVXF5/RCUmlFbxy4t81KKkujrQsPPPAAWVlZeHrW/zFUJfYZudeiX1xcHAcOHKBHjx707NnTrGs1FPn5+URGRtKyZUvGjRvXLD6TMjJNhYZu2vFPDIJf4wqnkakXQgi2bdtGdnY2jz/+uMlDtlVakCwKuMzPWGGPJbYUtelHaewOrIrSKWgzAFUL/3LjFNmWOH/ZzvB3kQVuSwPQPKIBDA0mHEzUt8DewjAfGKKNakpVYp+RhhD99uz9jY3r1vFuD1GlXf/tAS8uWoJCWDR4wePaoFar0ev12Nra0r9//4Y2pxy1SUmuDCEE27dvJzMzk8ceewwnp4rTfpo6p0+fJjo6mkGDBuHvX/47QEZGRuavTE5ODj/99BNeXl6MHj26zvN8+OGHLFy4EABbS4l/jGrBwuGuWCjL+ggudkoG+9sx2N+Of4xy46N9OSz7NRvnYMGqr1YBMHHsJLAQZcbp3TRk/yOuTrbpdYLDG+LR6wQDI3yxsDTNZm5jYMa8aTz2TPitDbvgQV5oS3U4u9tWeLyKPGxpgTcNIyLdnUZbW/Ly8nBycsLDw8MkWQk1EfuM3CvRLy8vj02bNuHp6cmYMWOapRCm0+nYuHEjGo2G8PDwKlP6ZWRkTE+DngWFEDlANtA8rz7NhCRJjfqEcPz4cc6fP8/w4cNNXjB/TzwM+UbwS8ZRQGB9862jcfTm2oh3yAkYS2r/F0BRfqdT76bh+u6jaFuqKRqZQcq6U7e6k1oqobDm2lyVFGkN8wE17n5aE7HPiEH0MzTyWLNiXX3NrRRNqY7V/1vHir+vrVLsu9Ou93tJvLX4XyxbtsxsdpkSozj91VdfodVqG9ocsyGEwMLC4lZX3uaKEAJ/f3+GDh3a0KbIyDR5jL5GY/Y3GhuN+fm6sylVREREnUWYQ4cO8eKLLwLgbKvgj4VteGVEi3Ji391YKiVefqAFB+a3QXVZQUEK7F1+gFYB/bE9YLqauZIC2nd3o+/EdjhV0rG2KaNUKiktMfgr3n5OtAmuOEpTjxY1BXRgOEpMtKNdB+r6PsvJyeHzzz/n4MGDJrFDq9WyaNEiwsLCqhX7jMyZM4ewsDAWLVpkNh9RrVbj4uJCeHh4ja8ZmhparRZra2smTJiAu7t7Q5sjI9Pkqa1/1hi2vcYDwxvaCBnT4e7uTo8ePRg4cKBJ5z2bDvN+EaQVSvx941DirgeUuV9n50ZGrzmgrPyEWdqpkGuHDpG89QTCXkfrm40kHJ3gYo5p+sZcyNHjeFPCbt26dbXH63Q6Vrxm6HpbnahmJNRNYqavxIrX1qLTmaJ5dlmEEBzddJWvF22ptV1P+Uv8e8kbTUJAM4rTPXv2rLNT2hRQKBRMmDCh2XdECwkJ4eGHH0ahaAynNhkZGZnGgyRJtGvXjoceeqjOqbwqlYonn3wSIQS2lhJ7nm9Nd5/a1VTr7mPNrnmtKTivZNmh73BMcMNnXB9sjrvUyaY70Wn1SJKEf2/3SoWwpk5BlortH58n4UzVtQ0LSKM1fbGn6QksRnEaoEuXLiaZ08LCgiVLlhAZGckXX3xRozFffPEFkZGRLFmyxGw+ooeHB08//XSdGvw1FaytrZk+fbrJXksZGZnaUeOrIkmSXpIkqeKY8ToiSVJvwEUIsd+U8zZ3hBAIIao/8B6j1xsEM19f3zp30aqKAo1AqTCIW67WxbSzuVbl8ZJKgUVy+d1dTUARwtpgq9/NtD+lCxxMM41wdihNh9LF8Lefn1+1xyuVSua9PZ2v4wVRWTV7XaOyBF/HC+a9Pd0stdguHckg+VIeU+c9VGu7vooV/GPR0kYvoCUlJfHbb78REBBgcnG6sVBSUsJ3331Heno6QKONPKkPQgh++uknzp8/DzTPxygj0xAYfY3G6G80Vhrr86XX61EqlYwaNYrAwMA6z7N27VpiY2Oxt5J4/cEWtRb7jHT3sea1kS68rHjOYF+pHkV+/XyGvMwSti0/T9qV/HrN05jRavQc2pAAEni0r7xcTgk52NEST+pe97ch+fXXX0lNTWXSpEn1qjN5N6+//jpLly7l2WefrVb0q29n4eo4d+4c27ZtQ6vVNlu/JSsri++//578/Pxm+xhlZBqC2vpntQmDeBeIlyRpgSRJLnUxzogkSfdJkrQdOApU3k5Vpsmg1+v54Ycf+OOPP8y2hm/rsyyN+BG/FpmssX+AngefxyovqcJjpQIlPmP60mbIAJSplTukbm5udPTriF0b+PGKDo2+fo66Ri9YF6fDrg109OtY4x27GfOm0T+sGwtPVC+uRWUJFp4Q9A/rZpYafpnXCjmzO5nWQS7MWxrO8x9M5+XTNbPrxZOCfy5+s9HX8CsqKmLjxo04OTkxadKkZumIGIWwhISEJhFtWVeOHDnCn3/+SX5+873Ik5GRkakrGRkZfPbZZ6SlpdV7rk8//RQAKwuJhcPrJ8QsHO7KWYsofrPZwWsTHqf4gRt1nktbquPQhgSEXuDk3vzSeI1E7UgiN72E/pPbY+9ccR00HRo0FOHLcJQNXqq99pw5c4aoqCgGDhxYL3G6Mmoi+plb7MvMzGTr1q1kZmY2S/8TDDXMN2zYQHJy8q2AEBkZmYahNoLfvzHU2nsPSJUkaaMkSWGSJFVbRVWSJEtJknpLkvSmJElXgP3AGOAEsLkOdss0Mg4cOEBcXBx2dnZmmT+HqyRygCBXS3526Ukn/UksizPxOfAW6O+KzBPQenwf7Pe1xOqKPW1G9EMqrjwKbsyYMVg7gcIBVl+snzDy9QUtSkewdjLMW1PWrFjHkcg/me0P/zhVubgWlSX4xynBbH84EvmnyWv4qQo1HNqQgIOrNX0ntkOSJGbMm1at6NeUxD4wiGHu7u5ERERga2vSwOVGw8GDB4mNjWXUqFH43Exdb24kJiaye/dugoKC6NevX0ObIyMjI9OoUKvVrF+/HpVKhYODQ73mSk5OJioqCislzBnoXG3NvuqwUEo8PcCJx1uNZ1vJerKyqk5RrQwhBCe2XyM/U0X/sPbYOTXPhgBXTt0gITqLzoO98PZzrvS4QtJoTX/saLgU0fpsMtrY2BAYGMjw4ear9lSV6Gdusa+0tJT169djaWnJlClTzJKl09AIIdixYwfp6elMnjwZFxeXhjZJRuYvTY0FPyHE60AA8B2G7r6TgfUYxL+rkiRtkSTpK0mS3r0p7H0iSdJaSZKOAvkYovn+AXQA4oHpQoh+Qog/Tf2gZO4tcXFx7N+/n+7duxMSEmKyeYUAtRYKySCOX3DAE6XClszQp9Bb2KBXWpHa74XyDTokyF4Yj1AadpTyH01G2FWerjtkyBBatfLGqQt8el5b51p+F7L1fBajxbkrtPJpxZAhQ2o0zljD78kOEtM6KHizh1Sh6GcU+97sYTjuyQ6mr+GnLtFiY2/BwAhfLK1vP69ViX5NUexzcHDg0Ucfxdvbu6HNMQsJCQns27ePLl260Lt38wyiLiwsZOPGjbi6upqlhICMjIxMU0YIwdatW8nOzmbKlCn1FvxOnjwJgI2lxIhOptncfSDQDl2+waeIi6tbV94rUTdIPJtDl6HeePk23x6AOo0ebz8nOg+p3G8pIRsHPPGk6z20rCzLli3D2tq61s3bjKlpgYGBTJs2zey1eCsS/cwt9gkh2L59Ozdu3CAsLAwnp+b5fj19+jTR0dEMHjy4RqWNZGRkzEutYr2FEMnAE5IkvQbMBmYCrYG2N38qCv8xXoVpgZ+BL4CdojEWOZGpNcZ28h4eHowdO9akF92fnoRfr+hYMH4PLe2dscCQplHcKpSk+99CqcpD5d6pwrFFE9JJ/fY0yhxLcucmVrmOlZUV8+fP59VXX8WlCzy2V823w63p5FpzZ+NCtp7H96lx6QJW9jB//vwat5031vD7eOFagpwNjS/e7GGI9Pt3iOH/O8W+UDeJU1mC1QmC5z+ofQ0/nU5X6Rhnd1tGzelU4etoTB9++cW1/LfHbbuaktgXFxfH0aNHmTx5stmiURsDx48fx83NjfHjxzdbIez8+fOoVCoeffRRrK3rVkdKRkZGprly7NgxYmJieOCBB2jXrl2957t06RIAJRroVsfafXfT3cea/FxBC+D69ev07du31nPkZ6oMQthgL5PY1FgJ6OuBfx/3Ss/phlTeYgIYj4KGiRpbtmwZb7zxBmFhYbzxxhsANfINjSVIfHx86vQeqCtG25599ll2795NZGSk2cQ+MHQevnTpEsOGDcPX19csazQ0er2e48eP4+vrW+PABxkZGfNSp+IOQogUYDGwWJKkLsBgoC/QCnAHbIAsIBOIAQ4Ah4QQBSawWaYRcf36dQAiIiJM2k7+51h49zCAkr+vH8cHYcfwcCq5db/Kzb/aOQoeTqnxekHBwcycNYtVX60CYNpuNc8GWzAryAILReWCiUYv+PqCls9itLh0AcdWMGvWLIKCgmq8NtwW015ZuJZ3e5QV/R71he/iy4p9r0QbxL7a1vBbs2IdK15dy7x3yo5NuZxH8qU8Qka3RmlRudA5bd5odAoNLz63gaf84avYpiP2GcVpR0dHk75XGyNTpkyhqKioxqJzU6Rv374EBASYtKC3jIyMTHNACEF8fDyBgYEMGDDAJHOqVCqQFGh0epxsTBN95WijQHMz+1Oj0dRpjpDRbdDp9M1yc0sIwfGtibQOcsUnwLnKx1hIGm25Dzta3EMLb2MU+z777DPmzJlzK1oOqhf9jh8/ztmzZ/H09LwXppbBaNuiRYvMKvYBtGjRgmeffRZn58pTsps6CoWCJ598Ep1OZ/YoTRkZmZpR72quQohzwDng0/qbI9PU6Ny5M35+fiaPsMks1qGQFOiFhI9lOi1s8oGKRRplqjUt/uNH5rsxYFX3wNGJEycC8PWqVVg7w5pzWr6+pGean4IBngqCXBXYW0CRFi7k6DmUpmNdnA6lI3jdZ4jsmzVrFhNuzlNbKhP93j9vOrFv+cK1PNpOYvnCtbfWLMxVc/Snq9i7VC0O6dGhJo9Fz67AKasb/17yRpMR+3Q6HRs2bECn05lcnG5MnD59msDAQOzs7JptqsiVK1ewt7fHy8urTmKfXq+XnVAZGZlmjSRJTJs2zaQdQG1sbHCZ8C5Fv/yTfJUeF7v6R5EVqPRY3rwSqc15WQhB1I4kOoa2xNXLDqWyeX6nXzycQUJ0Ni6eVWckFJOFI9540PkeWVaWu8U+4Nbv6kS/pKQkfvvtN5OK07Xl9ddf59VXX8XCwjxNToqLi7l06RI9evRotvXshBCcOHGCnj171vmaUPbPZGTMQ9Nr3yTTKLhw4QKSJNGpUyeTi30CwdDuh1A5FfDT711YQx+sDrQiefA/0VuVrUFjkWxDm2H9sYp1wPKaLSk/RoFl/US/gIAAli9fTn4LFSFukzgRdZQNUTHk54NGB5ZKcHQCpQu49DE06Gjl04r58+fXOrLvbioS/dYONjjrphD73uyqoEcLiUAnwb8WrkXooZV1D4SAgRG+VUb3FZKKD32xx93szpGp+e2330hOTiY8PLzGnZObGhcuXGDr1q0MGjTIrMWuG5KcnBw2btyIu7s7Tz75ZI0vZDdv3oyzszPDhg1DoVDITqWMjEyzRK/Xs3fvXvr27Yujo6NJo7wDAwPRb92Ak7cvfybnM9i//mUxziSrcXKRAEHr1q1rPC7mYDpxJ2/g7GGLq1fzLM+RkVjAn3uSaRPsQkBf90qP06FBi4r2TGyQVN6KxD4j1Yl+RUVFbNy4EWdnZyZNmtSgUZrm8meN6crx8fG0bdu22fqghw8fZvfu3VhZWdGjR48aj5P9MxkZ89M0rtZlGhU3btxg8+bNeHp6EhgYaPITdBrRpPMno5w1zLYaj0ISkJGD27kfyQyZVeZYxx9aYRVrEAEdtnpie8yVkvuy67V+UFAQH77/Eds//RN1oQ5du2TcvKmw31lHv46MGTOGIUOGmMyxvlv0CzFRZJ9R7APo0ULiza4KFr38I1OmWfL4a/fj4Fq5cKsiDxtc8aLHrduaitinUqm4dOkSffv2JTg4uKHNMQtZWVls2bIFHx8fBg8e3NDmmAWtVsuGDRsAeOihh2r8vXPs2DEmT55MaGgozzzzDI888gg2NoZ6oEKIZpkGJiMj89fkwIEDHDp0iJYtW9bqorsm9OzVFR/vSWQXerHrstYkgt/uS8UonA2btDUt7p8Wn8+5fSm06+qKX6+W9bahMVJSqOHwxgQcXK3pM6FdNam8qbRlMLbc+/IWVYl9RqoS/eLj4ykpKeHJJ5+8dV5ubvzxxx/ExcUxZsyYZiv2Xb16lT179hAcHEz37t1rPE72z2Rk7g1N44pdptFgbCdvYWHBlClTTPZlrBeG7i65UgLXOIQTPpS2sOBGyAw8Tq+m2D2IG90eLTcu58V4LNJscF3egZQfo+ot9hn5c3c6umILhj8ayOgWHxEXF8f169fRaDRYWlrSunVr/Pz86nXyrqp5xp2i35MduNWgwxRin5EeLSSWdBEsWvct3r01zAiseG49WtTk05lwlE3wK8PGxobZs2c328YOGo2GDRs2oFAomDJlSpMRYmvLr7/+SmpqKtOmTatVKu/ChQsBiImJYcGCBURHRzN37lyCgoKQJEneTZaRkWkWxMXFsX//frp3716ri+6aoEeH2ucynXq05VTGNb48rOCNB12wVNbdB9ToBF8ezsMxxLB5WhN/qji/lCObruLoZkOvcW0bpSBQlW9XU66eyUKj0jH0UX8srSufy5DK26rqVN6sLPjpJ/j5Zzh7FpKTwcoKunaFJ580/FR0Djx8GJYtg6NHQaUCPz+YOROeew6UyrJiX2oqSBIsWgSLF5ebak5KCoFCEPavf2Fz4wYvffQRAF27dqVDhw717iDdWImPj+f333+na9eu9OrVq6HNMQsFBQVERkbSokULJkyYUKvPpOyfycjcG+RPkUyNEULw888/k5mZyeTJk01aI+ztg/DCLhUXdLtwwBPFTWEpJ+ghkge9RvLg1xEWFQg2EmT+N4bEqAMUTk4ziS256SVcPZNF8CAvWvk74+bmRt++fQkLC2PatGmEhYXRt2/feol9a1aso5/LQ6xZsa7SY2bMm8bzH0zn/1JML/YZMYh+sHzh2kptKSQNH/pgT+UpJY2R0tJSDh48iE6nw87Ort4OeGNl7969pKen89BDDzXb2jCXL18mKiqKgQMHEhgYWONxkZGRHDt2jPHjx/Pdd9/RoUMHVqxYwTPPPHMrWlChUCCEoKLG8XIzeRkZmaaAsSmVh4cHY8eONZkQlq8GnR6uc5wc4hneZyLWTiDZCT7cl1OvuT/Yl43CQWDtBGPGjKnRmIuH09GV6hkY0QFLq8Z3Tq+Jb1cTOg3wZNQzQbh42lZ6zO1U3qEoqrqc27ABnn4ajh2Dvn3hhRcgLAzOnYOnnoKICLj7XLdlCwweDAcOwEMPwbx5UFoKCxbAzdqQixYtIiwsrMLIvsWLF7N48WLQ6WDOHFi6lKHduzNq7Fj+/r//ERsbS3x8PECzFftKS0vZtGkTbm5ujBs3rlGK06Zg+/btqFQqwsPDa7WxLvtnMjL3Dkn+wDRuJEmq9AW6169dQkIC//d//8fQoUNN2mr9h3Pw6h7D35190lk2/hT21toKj5UKlQgHncnWrozslCJcvOxQVNGht64YhbhH2kp8f00wvxoxry67xTUR++4kOlvwr7P6craoyEOBBcFMaVLRfcaaKWfPnmXmzJm0adOmoU0yG0VFRcTFxZk8oqMxodPpOHXqFKGhoTXe7S0oKOCll15i5cqVREVF0bNnT/7880+WL1/O6tWr8fT05KmnnmL27Nm33h/G3eSUlBRatWplzockI9Poqe4CVQjRPK9ga0hj8s82btxIbGwss2fPNlnaoFoL0zeBrU0BTz/4Ax4Wbmi18Pxzz3E1NpWMIxIH5rehu0/to+ejr6sZ8nESngME7fxb8fHHH9eoLIpeJ8jNKKGFd+Or22f0u6a3kVibVL1vVxFp8fnYOlri7F650Gckj2u0ZTBedK36wL17oagIxo4tG8mXlgZ9+kBSEmzcaBABAfLzDdF8eXlw6BAYI9NUKhg+HI4cgR9+YFlcXNkIvyVLykb4qVTw8MOweTMMHcrKiROZs3Ah//rXv7C3t8fZ2ZnZs2c3WyEMIDY2FhcXF9zdm9aGeW3Iysrixo0btdqMlf0zGZn6UVv/TI7wk6kxHTp0YPr06SavERadflvAa6lNxdZSU+FxFkk2tO82BNf3fE26vpFSlY7L0dc5dvQo+478yvr1Pxp2oI4eJSsryyRrGB3CJV0UhLdTsKSLosroOqDWYp9Op2PFq4ZuvDUR+8AQ6fdoO4kVr65FpzO8HoauvPn4cn+TEvsAoqKiOHv2LEOHDq1S7LOxsSEkJITo6Oh7Z5yJyMvLQ6/XY29v32zFPrVaTVFREUqlkt69e9cqtcPKygorKysee+yxW89Pt27deO+99/jiiy+wsrLirbfeYt68eezatQsw7CafOXOG6dOns2DBArM8JhkZGRlTM27cOKZPn24ysU8I+PseOJkKfyQ4suyHMfj88hp2mjzmz5+PtQM4BwtGrLjOmWR1reaOvq5m5KfXcQ4WWNnD/PnzqxX7MhILUBdrUSilRi32Le5s8O0Wd67et7ubwhw1hzYkcPLnpGoF4xql8hoZPhzGjy+ftuvlBc88Y/j7999v375xI2RmwrRpt8U+ABsbQ4ovwGef8frrr7N06VKeffZZNp48WXbu3FwYOdIg9k2ZwhdhYcxZuJDFixfTpk0bdDqdScsCNTZycgzRr/7+/s1W7MvJyUEIgZubW63EPpD9MxmZe03TuoqXAe79znFJSQkFBQV4eHjg7+9v0rn16Hl6+D4snWw5dcqFz3UDKT05mPRec0BxW+hSplrTZtgArBLs8Xi5M5JOIvvvV0xiQ2lpKb//vp+4/UU4W7Ri69lPKNHklzuuvg067hT7ursanJzurhJLuihYtHAtQK13gytCqVQy753pLF+4lkAnUeMIv+8SDTvSRoHR0JW36aXypqSk8Ouvv+Ln51etOK1WGy5UQkJC6NGjB19//bXJC52bA5VKxTfffIOPjw9hxl35ZoYQgm3btpGcnMzcuXOxtLSs1Xhra2v+97//kZKSUkYodHV1ZcaMGXTv3p23336bLVu2EBMTw3PPPcfkyZP55ptvOHDgAFOmTDH1Q5KRaVLc6Ws01wtzU3Ov/bPk5GQ8PT2xsbGhXbt2JptXAG72KsBQQD9M9wlOebHY/fYyimFLmDlrFqu+WgXoGbw8iX+MdOXFYS2wqKKmn0Yn+GBfNv/+LQfnYIFjK5g1axZBQUFV2lKQpeKPH67g2cGR+6Z2NNljNBV3in13+naLOytYXEPfTqfVc2iDIcW178Sqm3QYUnlLbnblrX3cho2NDcHBwQZ/x3hevbP27969ht8PPlh+8ODBYGdnqO+nVt9qwDHjX/+iJTAUICXFMPbsWZg7ly+6dOHZefNYunQpoaGhHD9+nIiIiGbbwOLChQts2LCBRx55hI4dG9/71RTk5OTw5Zdf0qdPH4YNG1br8bJ/JiNTP2rrn8kpvY2cilJG7uVrJoTghx9+ICkpifnz55u8i1YyJ0nmGO3PH8Mleh1WkiG6L2n4mxR73Y5akgqVtB7XB7v9LRGWepI3n6BoTEa9178QE8Py5ctx0rXHx6oHu/Zv4kZyOoWFoNWBhRIcHMCiBdi3AWsnaNXKm/nz5xNUi46vFYl9d3ImR7DoXPmU2vpQ07TeitJ5m3Iq72effYZarWbOnDnY2VUdCSBJEkIIoqOjmTlzJtHR0Y1e+BNCsH79ei5fvswTTzxB27ZtG9oks3Ds2DF+/fVX7r//fu67775aj69JKnxqaipr1qzhvffeo7CwkN69e3P48GHGjBnD9u3bAblTnIwMVOxQyim9DeufZWZmsnLlSrp168a4ceNMOreGEi6ymV/PtSMlHt4vGoJCaCl18OLayP+is3Fmy5Yt7Fm+n8vEUXhBQl8oMXuAMw8E2tHdxxpHGwUFKj1nktXsvlTMl4fzUDgIHG9G9s2aNYsJEydWaYdWo2f3qksU55cyanYn7F0aV/OtisS+OzmTI1h8vnrf7sT2a1yJusGgab74BLpUuWYeSbTlPrzoViebJUmiZ8+eREdHM8vamqUqFd6//gqjRhkO6N0bTp40/ISGlp+gSxc4fx5iYuCmWPvNsGG89PvvfNW7NxMzMiAxEZYu5QsPD5599lmWLl3KY489xpo1a+jXrx+jjGs1M7Kysli5ciUtW7ZkxowZzbKJmlar5euvvyYnJ4fZs2fXqomaEdk/k5ExHTXxz2TBr5HT0A7lH3/8wd69exk9ejR9+vQxyZxCGJp53SCWK+zEidYodXq8jn6MU+J+Mrs/Tnbn8rs3UrGSVlNCyX0mkaIJ6fW2Y8uWLXy9ahUOohV5ZxXcyEhltJeOEFcFvg5gZwHFWogvhKgcPTtSQOkIzl3B2gFmzprFxGqcVahe7DPSEKJfRWKfHh0FpNCZ8CYX3QeQnp6OTqerUY0Po+BnJDo6mtGjR5Oent5ohb/Dhw+za9cuRo4cSf/+/RvaHLOQlJTEmjVr8Pf3Z+rUqWZ16IqLizlz5gzPP/88UVFRuLq6Eh8fj7Ozs0m6LcrINAdkwa88DemflZaWsnLlSoqLi5kzZ45Jm6jp0BLHrxSSigNeANimn8Xr2CdcH7oIjZPh3OqwwRvvh0P4vPcylrdchDofSpJBnyeRnyvQaMHSApxcJBTOAlufm5umPq0Mm6bVRPYBHNuSSEJ0FkMe6Yi3n7PJHqMpqE7sM1Kd6Hf9Yi4Hf4wnaKAn3R/wqXLNErKxwpFOTERB3c5NRr8n7rHHWPHdd3wF+PfsedvfCQiA2FjDj59f+QkGDjRE+B0+DEYfZPFi9i1ZQgSwARg6axZf9O59S+x7/fXXEUJw9uxZOnfu3CzPqxqNhlWrVpGfn8/s2bObbRO1bdu2cerUKaZNm1brVN7aIvtnMjLVUxP/rPltPciYjISEBPbt20eXLl3o3bu3SeYUwtCgo22LAnr33I2D5IUCJUKpJHXAQgraDqSwdd+Kx9rpSP75OJjgEmPLli2s+moVxWkWXD+bwbS2esL6gVJR9uThYAndXKGbq5LH2gsikwRrDwpcu3IznYUqRb+ain1QfXqvRXIWlpeTURSr0bZuibp7hzL32x6Kwf7nk0haHcX3BVM0oe+tOf5Vgeh3t9jnsPEQDjtOcuWDMfi4DGpyYl9GRgYeHh54enrWeY4ePXqQlpbG6dOnmTlzZqNL9U1MTGT37t0EBQXRr1+/hjbHLBQVFbFx40acnJyYOHGiWcU+vV6PnZ0dHTt2xMfHh6ioKL755hucnZ3RarXNcndeRkamaSOEYPv27dy4cYPHHnvMZGJfiQZsLAXXOUIeSTjT+vZ9nl1JGPfprVIrtvvcaDU9BEmnYO7RNwiaH8B/pde54nQFELQoazFQ+7IoV//MIiE6i86DvZqs2Ae303uXvVDet1PkFtL9ve9QOHjR9edTZD3wVJmxysw83P++BoCS7m3Jn9+bAMbXWey7xccf4/fdd3zYqRMzPv+cJxcsuOXvbFGrqbLNmVHUvuvcPAxY2b494Vev8vLXX7Po669ZunQpr7zyCjk5Obi6utKtW92iEhs7Qgh27NhBeno6jzzySLMV+86cOcOpU6cYOHCg2cU+2T+TkTEdZv20SJL0A/AtsFMIYf7WqjImo6CggMjISNzc3Bg/frzJLro/j4J15wEceTBnBPOHXbjdOkaSKGxjEDEUOZZYXbJH1S+37AS1NKOiHaALMTF8vWoVBSlQcF7Lf7sr6OhY/cQWComp7SR6tRC8ckYPwNerVhEQEFDhTrWxecYjbaVqHUIj3V0lHmkr8c1La3nsmfAytjuuP4jHQoPImDvnQdI/n1tmrM2JWNze3mj4p1RL0QSDcBr+6GQAlrywlkXdDaJfRZF9NifjcF69B9u3JuPl0qNG9jYWEhIS+Pbbbxk3bhwhISF1mmPx4sUsWbIEgM2bN3Pq1Cl++OEHHnnkEQYOHEhRUZEpTa4TVlZW+Pr6ml0Ia0gkScLb25shQ4Zga1t9p8L6YKwds2rVKrZu3cpTTz11KzVOdiZlZGQaI8amVMOGDcPX1zRNzArUELYB+vtm8mC/07jSunxbvzs2RFW9cikZkIPdATfUnQpo85orH3p+SFZWFnFxcVy/fh2NRoOlpSWtW7fGz8+v1jXbvDo6ETzIi85DvE3wCOuIVofTugNYXMvEIi2XjI9n3/LtprepnW8XcbMxmtG306h1KPJUtFz1G8MArbszWR+WFfwUBSU4r94DgH5cF1rPfx67u+TUOjF/PgQHw549dPfyYsKECXz99dfMnDmTLteuMROYdfw4XSqK8Mu/WePaubwIO+mJJ0hKTGTFmjX8LEkM8/Tkp+3biYuL4/nnnzd5WaDGhJubG0OHDsWvouesmWBvb09QUBDDhw83+1qyfyYjYzrM3aV3ArANSJUk6WNJkkyTEypjduzs7OjWrRsRERF1alBREVo97IrX3/pfUZCPogJfSZFnQetRfWkzfAB2e1rWeb01K9bRz/WhMl3SSktLWb58OepCyDkL79ZQ7LuTjo4S73ZXkHMWSotg+fLllJaWljvO2Dzj+2uCMzk1S/M5kyOIjBe8H9C6nFCpc7+9iy8VqcqNFXccL2kN+npqXD4/f3yekSNH896D3fj3aT0/XtWz9Ez59BKB4bVpy30oqV2DhIbkTnG6S5cudZ5n8eLFCCFYtGgRkyZNIiQkhEceeYSePXty5MgRE1pce4xpYt7e3jz66KNYWzeuOkamQgiBnZ0d06ZNw9v73lzkXblyhV27duHt7c2XX34JGHaWZWRkZBoj7dq1o0+fPgwaNMgk82n18Ldf4FIWrDnhwTc/dsfnj/8gacv7GUaEo47rvxwj96lEkvYcQedp8IHc3Nzo27cvYWFhTJs2jbCwMPr27VsrsU+j1qHXCWzsLek2vBWKihxFU1KqwToqDpfPdoBGW/Y+pQLPp1fg/s/vcP3fdhR5Rbd8u7VJtfPtNiUI5r1jaIwmhOD41kR+3ZyKtobihQXWeNK1to+uLB99ZPjdpQvs2wdeXixevJjff/+dHj16cOrUKbYMGMA3wLiZM8uP12ohIcHQ5KMSsfm51as5t28fwx0dYc4cbL/6in79+jVbsc9YR+6+++5jyJAhDW2OWTD6oH5+fkRERJRptGFOZP9MRsY0mPsT6wE8CZwGngWOSJJ0WZKkNyRJap6ti5oBWq0WpVLJyJEjTdpOXqHQ8+bk3QzpeJ7e1of4qHgALnG/lDvOa2YPbE+4oihR4jOhN8rU2osba1as4+OFa3m8lcTHC9feEv32799PSkoqxTE2PNJeWWuxz0hHR4mH20nk/gkpySns37+/7AE3T44z5k1j/gfTWXROX61jeCZH8Ha0nkg9THQun6JT6utF8eDOFI4OLZfOC1DSP5DMtx4l850nKJzUj6K8Uo5sSsCxpTUe7R0Z+eZMFk/ry9YkwasLRpVLGc4ICyB71T+wd246u5M6nY6NGzdSWlpqEnE6OjqarVu3EhISgiRJREdHExUV1eBpKHv37uXnn39u1o5OXFwca9asueeRlK1ateKpp55izx5DFIVWq71nzqyMjIxMTdFqtQghcHd3Z/To0SaL8lZrQcftTcsRJatwTD5Om93/RFFaWOk4YacjfeWf6FqpTWIHGISFoz9d5ffvYu9NPUQh6NjuKdr3Wojn3M+xjE8re78koW172w+2uJYJ3PbtFp+vmW+37Kyet8f3uOV3XT6WSVJMLr49WnDj0zmkrfwbmR+UF9h0LZ1IWTWPhFWPYvn8a/VL5f3Pf2DBAsPf+/aBhwfALcEvOjqakJAQHjx8mBnAvpEjy89x4AAUF8OAAVDFxqPF0KFkrF2LysaG0b/8wqAG3jQ1FyqViq+++oorV640tClmQwhBZGQkBw8evOdry/6ZjIxpMGtMrBCiCPg/4P8kSfIEHgYeARYDiyRJOg58K4T41Jx2yNScCxcu8Ntvv/HYY4/RooUJ0gbu4DrHKLKI5ROH11E6xmCNGvfo/6OwTX90Ni63jst85wI2x12wvG5Lxofn0XnXzpk0in3v9pAIcZMIcoZXbtbFOxN3DEWJI5r8EsKCBfUpCBjeRmJjkkCdDzt27GBUnwE4r96N3e4zKIrUJO17C7hdr2XxgrUs7lpFJ7ezej4Y253Ahx8gI7B1uWNUA4JI2v92hbbodDrUvfxR9/K/+b+ew6svo9cJBkb4YmGpQN3Dl5Hf/5P7K0hzVlMAvbvi3DsCmlB03549e7h27RqTJ0+ulzh9Z5deY/e6hhb5jFy6dImDBw8SEhLSbB2dvLw8Nm3ahKOjo8kiimuKra0t06dPv/W/nCoiIyPT2DB2Z3dwcGDChAkmndvSqpiFE36ixcEQ3LJiCCv5FgCtrSt6C0NZBZtjLkilCkoGZZt07bu5dCSD5Et59BzV2mSCpqQqxW7fWex2R5P77Gg0fnc09JIk1F3bYZGWA4B1TBKau/yvvMeGoswrRtPWHZ377TTWW75dTbr0fjSdoTePv5FUSPSu6/gEOtNpcCvyhlTeqEPvZMf1mZ1pQz9s6Fnn54A334Q33jB03Y2Kgpa3s2fu9n9OHDpE14kTYedOQ6feXr0MB6pU8Prrhr+ffbbK5UpKSlgbG0vLefN4ZM0apFdfNYxftKjuj6GRIYRg8+bNpKWl3XO/5V5y7Ngxzp8/f8+yLu5E9s9kZEzDPfvkCCHSgY+AjyRJCgAeBeYDHwOy4NcIyM7OZsuWLbi5uZm04xtAJhdJJQonWpPR92+03v8mIvcqyYNfKyP2AWj8i0jafxjb/W7kP5lUq3XuFvsAQtwk3u1hEP3cQhW0VHditNdFlPVME1EqJMa2gt1JcMXpCtnZ2fi9uBpJr0dIEoqsfPRuhufR6Bi+NX8t/+xe1jG81Z33Q4NDWFBLO9asWMcnr67lb+/cTtGN/i2ZrORiuj3Ykgux0Vz/Pfl2PR0fH/z8/W+l2OjRoSKHIMKaVCovQOvWrRk4cCBdu9Y9zSUkJKRRCn0AOTk5bN68GS8vL0aPHt3Q5pgFnU7Hhg0b0Ol0REREYGlp+vegXq+vVCw1puPIyMjINFYOHjxIbGysyc8DOjTEswsUKuYNjkMIK9Jjn8EpYR+pA18ChRLrU860HtUPSSORvPUExfffMKkNRjISCzizO5k2wS4E9DVddkmrKe/g8PNJADS+XuTeKfgBqj4BWMalouoTgNbLtdz47NenVjp3VaJfRd15VUUaDm1MwM7Jir6T2lV77lGRix0t8ahPKu833xjEPqUSBg0yCH6LFxObmsorW7fyW1oaQ9q1K+v/rFwJU6bA0KEwbRq0aAFbt8KlS4bbp1b+nIBBmPH19SU0PBxp5ky4/35YvBhKSuCdd+r+WBoRhw8f5tKlS4waNYo2bapsc9JkSUpKYteuXQQGBjJgwACzrCH7ZzIy5ueeS+WSJPkCU4EIwBHQ3GsbZMqj0WhYv349kiQRHh5ukl0UIeAfe2GIXxYt2u3FEW8UKNHZunLtgX9je+MSJZ4Viysa32I0vsW1Wq8isc+IUfT7+ymJUrvrTC+fEVsnQlwV/HqzLuGljBS69fHH9uglJCGwPXThVuMMuO0YLrqja+8tse+ueno1Zc2KdSxfsJaINhLLFxiiGB9+6iGS06+SorrK2mUbKh1r7JgXOiQAH6ueOOJV6/UbCqODEBwcTHBwcJ3nsba2vpW625iEPjCkLmzYsAEhBBEREc12Z3Pnzp0kJycTHh5e66LulWF8f6SkpNCqVasqIyNlZ1JGRqYxEx8fz759++jSpQu9e/c2yZx6AZIkuMYh8km51ZFXkiA3YAy5fqMMTTp04P1oT5R5ho0Yryd7kBC7F2Ft2vISJYUaDm9MwKGFNX0mVC+EVYRUrEaZXYC2ddnaz0WjQm4JfnZ7zpA7b2yZ+28seZgbyx6ts+0ViX4ViX1g8Iud3W3odr8PVjZVn9P1aFFTQGdGo6zP5VpCguG3Tnerht+CJUv4P+AJ4Arg1b493OkDTZoE+/fDW29BZKQhOs/PDz74AJ5/vlyH3jJ26/VYWlrejkT18TGkAt9/vyGtuKTEYEcTPvcmJiayZ88egoOD6du3b/UDmiBFRUVs2LABZ2dnJk2aZDJfSfbPZGTuPdK9qJEhSZI7BpHvEaAPhjzKk8B3wA9CiEyzG9FEkSSp3Atkjtds69atnD59munTp+Pv72+SOZcfgw+OgkLS8/SQ04R1Tyl/kB7clvmT+9S1etWBqUrsu5NTWYKXogSvdpbo717/9MhCjWDqIT2+o+GJGU8wQ+eJIqeQ4hE90PhWLKCtWbGO5QsN3Xu/vybqLfb9I1hBVxeJs7mCf8foaTfMAb1VIep8KEwCbTYUFYJWBxZKsHcAixbg0AYcvMG7tSdvTF7HoAFD6/ls3Bs0Gg1r1qwhNDS0zh15mwLXr1/n22+/ZfLkyQQGBja0OWZBrVbz5ZdfEhAQwKhRo0wyp1arxcLCgvPnzzNjxgzmzJnDrFmzZMdRRqYeVPT5EUL8pT9U98I/y8/P58svv8TW1pann37aJKmDBWp45CeICE0gsOM2HBXtkaoob2J5yZ42I/qjKFSStO8I6u759bbhbvIySzgSeZV+D7XHxbN23dktY1Nwe2s9jpFHKBrZg5TI18rcb3EtkzYP/IvCsb0oGtuL4gd6mNDy2xh9u+ltJNYmlfftahutlM91WtEbH3qZ1E4bGxs6d+7M6tWrTb7RGR8fz86dO5k2bRquruWjJZsLv/76K3FxcTz99NPNtolaTEwMW7ZsYcaMGSZL55X9MxkZ01MT/8ysISOSJD2CQeR74OZa8cBbGOr2xZpzbZmao9VqycnJYdCgQSYT+wrUsPacoUaeXihIT7OC7ncdJMD9xc60+MgXp2/acH33ETQdSmq9Vk3FPjBE+r0XCv88LbBVCnq0qN9JxtbCIKSBQYgqmHZftWOMDuCKV9eaTOwD6Ooi8Y9gBf/eV4TCFhRqGOEJ3dsqaO8Atkoo0cHVQjiTp2fXMSh0g6vadIZ8MJz333+fBcaCzo2YHTt2kJKSwtChQxvaFLPSunVr5s+fj52dXUObYjasra15+umnTZbGq9frb0VCTp06lZiYGPR6vexMysjINElycnJQKpUmaUoFoNPD/J1wJh3O7OjA8x7wRPD3ZHV7pNKIK01gEdcOHkJ5w8osYh+As7sto+Z0qltkn06P8zd7AbDffgJFTiF6V4db92vbupNw+XOT2VoZVfl2qXF5XDqaQf/JHbC2q/7SS00+NrjgVc5xrj8qVeXdl+tDfn4+kZGR2NnZYW9vb5Y1GgujRo1i8ODBzVbsAwgODqZ9+/Ym80Fl/0xGpuEwdwX4b4HewFfAfUIIPyHEG7LY17iwsLDgscceM6mAYm+t48OpewhscY2Blnv4T94gbDPOlTnG6rwjrp+0N/wdb4/Lp+1rvY5Op2PFa2t5skP1Yp+REDeJR30lVlyuf0pKidYQNQfUSrSYMW8aR3N/MpnYZ8Qg+kmIInjBX2J6OyWdXSTsLSQUkuF3ZxfD7St7KXjQSkJzw7DzvHDhQqZNm2Y2Z9AUnD59mujoaAYPHmwycbqxkZGRQVRUFEKIZiv2lZaW8vvvv6PVarGxsSnXRKauGB3Hl19+mZiYGMaPH8/s2bMB80RGy8jIyJiTdu3a8fzzz9erKdWdZJXAlRztrf87lJyg5fn1eB35yJBvWgnatiWoQ/JMYsOdJF/K5cT2a+i0Nbvwt46Oh7u61Zd2ak1JLz/AUKPP8mq6ye2sKRX5dkV5pRzZdBVVoRalZfWXXYa6yrl0YHiTqaus0+nYuHEjGo3GZOJ0Y+T48eNkZWUhSVKz9c+uXLnC5cuXAUz6GGX/TEam4TC34DcJ8BZCzBVCHDbzWn8ZJEkyyY6ISqVi8+bNFBYWolAoTNYBVCBI4giWtjFE2vXnM6cwbLR5uJ9aXcahLO1SQPJPJ9Bb6yiYkkLm2xdrvZZSqWTe29NZnSA4lVWzE8apLMH/XRHMC6j/471SCA6Ohr9bty7fWbcq6iJyVCX2GenqIvFaFwXLLwnO5Vb+nFgoJB5qo+Df3RXY3TTlxx9/xN/fn0OHDtXaNnOTlpbGjh078PX1ZciQIQ1tjllQq9WsX7+effv2NWrhtT4IIdi+fTv79+8nJaWCNP86otVqkSSJvXv38v777+Pj48O7774LGC5G5F1kGZnaYfQ15M9OzTHV83XhwgUOHTqEEMJkGyIAzvaFvDV1Iz3bJPOU+2om23wHQKlzG5AkFPkWeD3WE4tkG5OtWRmFOWqObk4kO7mo2mPt9pyh9fB/0r7nC9jvPF3u/sz3ZnL1xPtcjVmBumdHc5hbY+58vXQ6PYc3xKPXCQaGd8CiBoJfIel4EYIDnuY006Ts3r2bpKQkJkyYYDJxurFx6dIlfvnlF44fP97QppiNvLw8IiMj2bt3L3q96ep0yv6ZjIxpqa1/ZlbBTwixVQihrf5ImXuNEIItW7Zw9uxZcnJyTDp3BudJIxpHZTuyhr6Ivb0SjW0LUga/Vi5lpGhcBtcOHSLl+1NgUbcdnhnzpvH8B9N5Jbp60e9UluClU4JeLal3Om90tuDtc3r0N/1iPz+/es1XHTUR+4x0dZF4OVjBBxf1VYp+AO0dJJZ2U2B189vg+vXr3HfffXz44YemMt0kXLt2DTs7OyZPnmwycboxIYRg69atZGdnM2XKFGxta1fHqKlw8uRJzp49y9ChQ2nbtq1J5tTpdFhYWKBSqXj88ccBWLZsGYGBgej1epNeMMvIyMiYk6ysLLZs2cKFCxdMetGtQ8MVdmJnU8y/J50mLMKVXL8Hye04kuzgMKQSBT4TeuP8XWvaDBqAZbz5Iph0Wj2HNsQDMDDCF6VF1ed0x42HsN93FgCXT3eUu79kSBfUvfwbXSOI6N+SyUoupu+kdji6VS+illKIFfa0IvQeWGcatFotSUlJ9O7dmy5dujS0OWYhJyeHzZs34+3tzYgRIxraHLNgbBSn0+kIDw83mZ8t+2cyMg2P2ds+SpLkBDwM+AEtoFxlYCGEmGVuO5oTpgh9PnLkCBcvXmTkyJEmaScvhKFBx4hOqZS47seRVkgoULv5kzjyvyhLC9HataxwrDq0/mkixvSJVxau5d0eVJjeeypL8HK0wDkYoi6BVi+wUNTNOYzOFrx1Ts+k1hLrrwtshKvJOoxWhE6n45NXDd14qxP7jHR1kXiojcRXcXo+6lX1CbW9g8SUNhKRSQL1zeuLhQsXAjSaun59+vShe/fuzbZmyvHjx4mJieH++++nffv2DW2OWUhOTmbnzp34+fkxePBgk81rdBiffvppUlJSmDlzJk888QQgd3mTkakrd/oa8ueoZtTXP9NoNGzYsAGFQsGUKVNMdjGsR89V9lPMDRxpBQoBCiXpvZ8FoQdJwuaoK7aHWgBglWCP7cEWaHyLTbL+3Zz65To5qSUMmuaLg2v15/Tslyfj/OVvIIHO1cGQ1tvIN/5KS7QkX8wlsJ8HbYKqb2Ah0FNMNkE8hAVNJyXWwsKCGTNmNNvvCKMQBhAeHn6rDl1z47fffiM5OZnw8HCTXs/I/pmMjOmprX9m1rOlJEmDgKvAZ8CLwJPAjAp+ZO4hiYmJ7N69m6CgIPr162eSOb84BR8fh4d/dCUuKbhM3RGtvTtq1w7Yb/PEOyIUSW2et11VkX6nsgSvRAvGzutLJ3fooIDN1+rmmBvFvpeCFExqo+AfQQpif8thzYp1pngYFaJUKvnbO9NZnyQ4W03EnpGzuYKfkgRP+dXs+Z7YRsLiru+MF198kcOH656Nb2NjQ0hICNHR0XWe4+TJkyQkJAA0W7EvPz+fXbt2ERAQwMCBAxvaHLNgjGB0cHDgoYceMpmjp9MZuuZ8//33fP/993Tu3Jm33nrr1n2yQykjI9MUEEKwY8cO0tPTeeihh3Bxcan3nEWl8OQW+D3jIlniAg7c1W1TkkBhuCAvGZZlKLNioyPj3RjyH79e7/UrtCmvlMRz2QQN9MQn0OX2HUJgv+043lPfhZvf60Y0vl6krXqO+LgvSPu/BY1e7AOwsrVg1Jwguj/gU6PjC0jDk2440crMlpkGjUbDzp07KSkpwcLCotlGah0+fJjU1FQmTZrUbDsPJyUlceLECfr160dwcLDJ5pX9MxmZxoFkzkKZkiSdBNoDs4D9Qohcsy3WTJEkqdwLVJ/XTAjB6tWrKSoqYvbs2SYRUDKLYNAaQYnW8MU9NjiO+SMulDnG9o8WtB7ZD4VKSdGITJJ/OoGw11U0Xb25u2uvUex7/oPpTH96Mt9Oms0zv2TTSwFv9VLQ0bHmJ5w7xb4ud0TancsVvH1Bz/wP69Z1t6bUNK33bK7gvzF6FnYqa2d1fJ+gY1syaO94iwUEBHDmzBlsbGpf00eSJHr27El0dDQ9evTg66+/pkePHjUen5iYyDfffENwcDBTpkyp9fpNidjYWFq3bt1sU3kBbty4gUajwdvbu/qDa4BOp0OpVJKamoqfnx8lJSVs27aNsWPHotfrm2Xqt4xMQ1DRhZkQ4i99tWZq/yw9PZ0vvviCQYMGMWzYsHrZBqAX8MzPsPMKWFuU8q77C/Tu50xh2wFVjrNMsEXToaTe61dFYY4aO2crFMYsCyFoPWoR9ruiAUj9dgH5j9b/OWgINKU6Yo9n0qm/JwplzT4iGorRUEIXpmGJ+esn1hfjBl50dDSPPvooHTs2bN1Ec6LVaomNjSUoKKihTTEbQgguXLhAYGCgyYRb2T+Tkbk31MQ/M/enrTPwXyHEFlnsaxxIksTDDz/M9OnTTRYt5Wav479hh3CzzqWP5QH+oxqFZWFamWPsf/FAoTKcRCyv2KEoMF9I/LDBI5n3H0Ok3/fxt8W+GfOmYWVlxYD/vkymG3yuh3+d0nOloGYOemViH0AXF4nXghQsX7C2xpF+Ol3tBc8Z86Yx/8PpvH2h8ki/uop9AN1dFdxdU/ry5cusXbu21rYaOXXqFKdOnQIgJCSkxhF/hYWFbNy4EVdXV8aPH1/n9Rszer2etDTDZ8Xf37/Zin2pqakIIWjZsqXJxL47i9k//vjjlJSU8Pe//52xY8cCyM6kjIxMk8LT05OnnnrKZE2pEnLhcJKhRodaa4W6QIXPwXdwvfDT7YMqKBFoLrFPo9aREJ2FEAIHV+vbYh+AJFHSL/DWvy3e3VRl1+DGihCCk9uvcXZvCtkp1TcjAUOjuyIy6cCwJiH2AZw+fZro6GgGDx7cbMW+7OxsVCoVFhYWzVbsKy0t5caNG0iSRHBwsMnEPtk/k5FpXJj7E5cONM9Wk02Qy5cvo9VqsbW1NWl9huscp7XTfrY79uBzpzAcC+Jpeea7MsfceOsimcsuovVScX3XUXReapOtfyepcfkc2XSVkOD7eP796ay/Jvj738eViboL6tyZC/+cxLZ+YNUNFp7Wsy5Rj05fuXNZldhnpDai35oV6+jr8lCd0oAjHptMxGOP8c5FRTnRrz5iH0AHByit4ALg008/rfVcd9KjR49bwl9qamq1wp9erycyMhKVSkVERESzTeU9cOAAX375Jenp6Q1titmIj49n5cqVnDx50qTzGne03nvvPfbs2cOgQYN44403AExa6F5GRkbGnKhUKuLjDQ0sWrVqZbKL4Tauxfxn6jZaOeUy0/kLptquBrhVT9n1vx1pFdbLbGVW7kQIwfGtiRzfmkj+DVWFYl7Oi5PQercge/54knYtbXQNOGpC3MkbJJ7NoctQb1q2cajRmCIyaEknXGhnZutMQ2pqKjt27MDX19dk4nRjQ61W8/3337Nu3TqT1E1vjAgh2LZtG1999RXFxaat1Sn7ZzIyjQtzn+W/BB6WJEmW8huYy5cv88MPP3DkyBGTznuDy6QShY1dZxg4BVeLXNTObQ2FoO9Egux/xpIQ87vZikAX5ZVyZFMCzh42hLSG17ecJ6MEFkallTu2/4KZdH11Fk4+4HUfbM4VTD2sZ3W8jjM5gkKNQCcMvyOv6VnyZ9Vin5GaiH5rVqzjowVrmdhS4qNaRAQC6HWCT/+xhR2btuA3sBVvxehviX71FfsAbJSgq8C3iYqKIjk5uU5z3kmPHj1IS0urNuLv7NmzXL16lbFjx+Lp6VnvdRsjcXFx7N+/n27duuHh4dHQ5piF/Px8IiMjcXNzo3v37mZZQ6fT0aZNG95++21sbW3R6XTy7rGMjEyTQAjBli1bWLt2Lfn5+SabV4eWeHbj3eIGn0w/wtSpjhR7dCaz2yMUtBuE05rWeLwSjONmb3zG9UEqNG/9tcvHMkmKyaXbMG/abvmDtn1eRCouu/Grd7Yn/soXZH70NDrPplcrLSu5iNM7r+Pt70TwIK8ajdGiAiTaUHWadWNBCMEvv/yCnZ0dkydPbpbnWmO6ck5ODsOGDWu2deZOnjzJuXPnGDBgAHZ25unILftnMjKNA3PX8BsOvH3z38+ARKBcHqMQ4oDZjGjimKJGTE5ODl9++SUuLi7MnDkTS0vL6gdVgRDw7Z8wslMGSdaR2OOB8mZHMZvMC2htW6C18QKLe7crptPp2bsmlryMEkbO7oR7YjLtei1EuvlcXd/+L4rG9i437sKFCyxfvpyU5BTU+VCUBNocKCwArQ4slGApQXgbiUltan6S2pykZ1Om4FjuT2VC5I1i3yuBCjq7SJzPFbx7Sc8LNaz998m/1rPmvz8y0VtLZLLAwQ8KLsG09hI/JYl6iX0ARVrBzKN6dALatGlDUlLSrfu2bNnChAkTajVfTR0lOzs7iopup78IIbhy5Qp+fn61Wq+pkJeXxxdffIGjoyNPPfVUvT+TjRGdTsc333xDWloaTz/9NO7u7mZbKy0tDS+vml1gycjI1B65hl95TOGfHT58mF27djFq1CiTNVETCK5xkAzO4UTr23fotSApQZJwfzGYFh8YUjGLh9zg+q/HEDbmiby5kVTInjWXaeXvzLQ1/4fDztOG25dMJ+sN89U8vpcIIfjl0wtoNXpGzemEtW31ZWsEgnyS6Mgo3Gg6vk5BQQGFhYUmK8/R2Dh69Cg7d+7kgQceaLZN1JKTk/n666/p2LEjDz/8sFlFTdk/k5ExL42hht9uoPfNn69v/r/vjp/fb/6WMRPGdvJCCMLDw00iLKw5A//6HcLWW5GT2/qW2Aegcg9CZ+FNmxH9aPG2H9wjze/8/jSyrhfRd2I7nNxsUId0JG/WCIRCQc7cMWVqw9xJUFAQH3/8Mc89/xzBIR1p0Rk87gPf0RAwzvDbrResvy44V8PuuOdyBRuuC/72zvQqxT6Azi4SrwQqahTpt2bFOr76z3cs9NcxobWCVwIVFMaBZAW/pNRf7ANIKASrm98KXbp0KXPfxYsX6zSnEKLMDxjqv/Ts2RNJkggJCbkVeZqbm0tOTg6SJDVbsU+n07FhwwZ0Oh0RERHNUuwD2LNnD0lJSUyYMMFsYp8xNUR2JmVkZJoaiYmJ7N69m+DgYPr27Vvv+Uo08I89cLHoMmkiGse7u70qLG6lyWa+F0Pm2xdQ9cgjecsJs4l9Oq2ewxsTsHO2ou+kdhRNvP04HdfuN+ysNgMkSWLAlPbcF+FbI7EPoJgbuNCBFjSNGniJiYno9XocHR2brdiXlJTErl276NSpEwMGNI2oy9pSUlLChg0bcHR05KGHHjKb2Cf7ZzIyjQfzdU4w8KSZ55ephl27dpGamsrUqVNp0aJFvedLzIU3DwhA4nq2C1tOdeb54edvH6CV8H44BLvfW2L3e0uUN6zIfC8GzBgHoEzPoXMLLfbj2tIm+HYayI1/P0buc2NRd+tQ5XgrKytGjBjBiBEjyMrKIi4ujuvXr6PRaLC0tKR169acPBDD2//8ideqSeutrFtvRWKfEaPo9+4CQ2OMiiL9Vn2wjk9erVgs/M8FPYFu1FvsAziTo0dz0+//5ZdfytynUtW/HGd0dDReXl6EhITc6t7brVs3wCBOr1+/npKSEv72t7+ZrHhwY0OhUBAYGMiAAQNMWkuzsdGhQweUSmU54diUyKkhMjIyTZGSkhI2btxIixYtmDBhQr0vuvUCXtwFP8fCzgQvVrbchc2QB1C7VuL/SJD9ahw5C+IR1uarqaW0UNBrbFtsHS2xsrEgd86DOP54kOJBwWS/Fm5Io2ji5GaU4OJhi4tnzdMidZSiR0tb7kMyp4NsIhITE/nmm28YOnQogwcPbmhzzIazszOdO3dmzJgxzTaV19LSkoCAAHr06GHWRnGyfyYj03gwq+AnhPjGnPPLVE9oaCiurq506tTJJPO1dRH8fWQM7+3yJ1hxmqW8SJbmOYSlwdGRVAoUebcjlnSeavOJfUJgsWofbf++Cl2blihPvF/mbp27Mzp351pN6ebmhpubW7nd9r59+2JvZ8vbC9ZWKvrVRewzUpXo9/X/1vHpP9bzciVi4d+DFPwnRs8Zdz3dW9T9BKvVC35LBa0wvG/69u1bplmHjU3du8dFR0czc+ZMoqOj6dmzJzt37rwl9Bn59ddfSU1NZdq0ac1W7NPpdCiVSgYNGtTQppgN42P09/fH39+/oc2RkZGRaXTY2Nhw33330b59e5M0pTqdBr/EGTZjbxQ5c1HyYtquv5My8BWKfHohlSgQtuWFPXOJfYqcQmxeX4d6cTitAu7wwxQKkvYug2YiBqTF57P/uzh6j2+Lb8+WNR5XSBrtGYoNTma0zjQUFhbeEqdNEYnaGNHr9UiShJOTE5MnT25oc8yGTqfDwsKCMWPGNLQpMjIy95B7csaVJGm8JElfSZK0R5Kk3ZIkfSlJ0th7sfZflZKSEoQQeHh4mKwuDEAaZ7jPbRUbnO7jS6dJuKUdosWFzbfuFw46knccoyAsheyX4sh+5YrJ1i5HbCo7o0vZfP+D2JxJwPWjreZbC4MIN//D6bx9QV8uvbc+Yp+RitJ716xYxycv/ciL/voqxcK/Byt4/2LN044rYut1gfbm8Llz5xIVFVXm/rqKxsbGHJIkER0dTVRUVDmx78yZM0RFRTFw4EACAytOv27q3Lhxg08++aRMXcTmhkajYdWqVRw/fryhTZGRkZFplJSUlCBJEn379jVZU6ru3moWTTiAnaWKx+0/Y7rtSiS9Fr2FDcobVrQLHUyLf9+bMit2v51G/+B/WePWncJ/bS5/QDMR+4rzSzmy6SqOLW1o07nmTUZKyMaRVrQkyIzWmQa9Xs/GjRtRqVSEh4ebRJxujOzfv5/vv/8erVbb0KaYjfj4eD777DOys7Mb2hQZGZl7jFnPupIkWUqStAXYDMwEQoBQ4ClgqyRJWyRJap4FrBoQtVrNqlWr2LVrl0nnzSWRaxxE0XIgbbq3xVOZRrFHF7I6h5c5TtjoSfkxisz/XDDp+mXWEIIj50vJdHcnNCqK0g6eqHtUnbprCioS/SoT+3Q6HZ+8upYwH6lasc9IZxeJMB+JT15dy9f/+4GPF67jpQBRI7HwpSAF71UgRtaEhELBxiSBWg8BAQH079+/nGgTGhpa63mtra2rFPoAMjMz2b59O+3atWP48OG1XqMpUFpayvr16yktLcXZuXZRp02JHTt2kJqaiqtr0+uwKCMjI2NuLl26ZGgUlpJisjn16LnKfrq0v8Sn0w/x+GRBqb0HaX3moXLojs+4PlhfcMT9n0G4vxxssnUrozhXzZahI2h54wadv96K1blEs695r9HrBIc3JqAr1TMwvAOWVjXLStCjRUMx7RiC4t7EXNSLffv2kZiYyLhx40wmTjc2YmNjOXDgAI6Ojs02uyQ/P5/IyEgUCgUODg4NbY6MjMw9xtw1/P4JjAc+Ad4WQqQCSJLkBbwGPHfz91Iz2/GXwdhOPjs7m4CAAJPMuTcB+rTPJk7aiT0eKCQrbvR4ArVLB4q8e6LIt0Pvqik7yBznTCFuFZy+EnWDxD+z6TLEGwenYVydPQphX/eU09pgFPXeXrCW8NYSG66LcmIfgFKp5G/vTOejBWvp6FC9aAdwPlcQmSx4/v2H+fyf63molaCzS82cws4uEhNbS3weq+eT3jV/ARIKBYv+1FOqNxSeXr16NR9++GGZboOhoaH4+PjUeE4jNan75+zsTM+ePRk8eHCzrPkhhGD79u1kZmby2GOP4eTU+FN46sKpU6eIjo5m0KBBZknl1ev1zfL9ISMj89cgJyeHzZs306JFCzw8PEw2byqnyCYWJ9rg6FKMnjZcHbsCYWGNVAB6e0PUkpAEqj45Jlu3InQ6PXvyXdDZ5DP5px1kbHiZ0i7tzLpmQ3BmTzI3koroH9YeZ/ea10ErJA0f+mJH/Wtq3ws6deqEQqGge/fuDW2KWcjNzeWnn37C09Oz2dbt0+l0bNy4EY1GQ3h4OFZWVtUPqiWyfyYj07gx96fzEWCjEOJ5o9gHIIRIE0LMBzYCj5nZhr8Ux48fJyYmhuHDh9O+fft6z7cxBp7cCk9uK0ajdsKS245NQfvB2Oz3xbf9/dj/bDrntSLsdp2mzaBXkQqKyU4p4tSv1/H2c6LzEG9yFky8Z2KfEWOk36bMisW+O4974cPpvHtJz/lqIu/O5wrevaTnhQ+nM/O5h5mzZCqbUxXVjrtzfOR1QZYWNl3ToxNVj9PqBZuu6fnnGT3FNxvlffDBB+Tl5bFy5coyx86dO7dGNtQGIQQajQYrKyvGjBnTbHcdo6KiOHv2LMOGDcPX17ehzTELaWlp7Nixgw4dOjB06NB6z2cUmwsLC4mOjkYIITuTMjIyTRatVsuGDRsACA8Px8KifvvtGh2sPAVpuitc5yiO+JRp/iAsDKmXwlFH8o7j5IenkPG/cxREpFY2Zd0o1aDILrj1b/TOZLKTi+kzrg0Fh9+icKLpSso0Jlq2tidooCftutRcuFOTjw0ueFI+06GxodEYNvF9fHwYNmxYA1tjHrRaLRs3bkSn0xEeHo6lZfNMONu9ezdJSUlMmDABd3f3es8n+2cyMk0Pc39C2wB7q7h/381jZExAUlISv/32GwEBAQwcOLDe8126Aa/tNXyxH09ozY9H+5S53/qUMz5hvVDmW+IzsTcOm83Tet1t6Tpaj1qM3aELeLy0Gkkh0bKNPf0eat+gu3Ez5k3jWO5PlYp9dx5Xneh3p9j3xNypCCGYtWAaz70/tVZiYeuR4N4DIpMEM4/o+T5Bx7lcQZFWoBOG3+dyBd8n6Jh1VE9kkrgV2ffhhx8SGBhIeHjZFO2AgACmT59eq+emJhw/fpyVK1dSVFRk8rkbE0lJSfj5+TXrRh0pKSk4ODgQFhZmEsfP+LnetGkTjz/+ONu2bStzv15vvq6SMjIyMqbml19+ITU1lUmTJpmk5MGbf8CyP+DJ9ZZ47NqKpaqw0mOFtZ7UH6PInXe13uveiWVsCu0G/J1WD78Hej1CCOycLOnU34PWvb3RtWx+0ex6vcEXaxPsSvcHap71oEeHijzaMwyl2ZOr6odWq2X16tXs3VvV5VvTJy8vj4KCAiZNmoSbm1tDm2MWdDodKSkp9O7dmy5duphkTtk/k5Fpepj7rJMNVFXpP/DmMTImQKVS4eHhwaRJk0wihPm1gLAeKfwQ5UOg8iwL7f9DiQgHyXBBr7fXonMrRVFogbaVGlXv3HqvWRGatu5IQiAAhy3HcPv3Ywx/wjTpyvWlpvU+jKLguxU08LhT7JsxbxoXD6eTFl/AfREdqhx39/jnP4qg14iOvDLm/1Drk1ED25Lh11RDuq5OgFICKwVo9Nxq0BEQEMCyZcvYtWsXCxYsKDO3McW3Ph16K8IoTvv7+2NnZ2fSuRsbkyZNQqvVNstUESMhISF07drVpDvkx44d491336W4uJgJEyYAhsYnLVu2lHeTZWRkmgz6m2KYqZpSHUqCb84Y/o7JaMueos48XvwiyUPeoNSlLcoMK3QepWUHmfj0o8zMo13oApQFJQC4fLCF3JceIug+82z8Nga0Gj1711ymY2hLOobUvCMvQBEZeNINRxr/82MUp4cMGdLQppgVNzc3/va3vzXbyD4wXKM8/vjjJp9X9s9kZJoW5v5U7gCelSSpXAiUJEkRwDPAz2a24S+Dv78/s2fPxta25vVEqiJbcZGZ7RbxsePDfOU8kbaXv8cp/vaOnyawiMQjBykansn1X46i9am+XltdyH9iOPmPDGHvkxGs/9+/0Lo6mmUdc1NRpN/dYl9GYiFndidjYaVAaamodJwR4/j5H05n8txB3O//FBfOxjF16lTAIOqV6AxiHxh+l+gMt3t7ezNs2DCcnZ2ZOnVquTReMKT4DhgwwKTPQ1FRERs3bsTJyYmJEyc2SyFMCMHOnTvJzs5GkqRm61CeOHGC2NhYAJM8RmOqSGpqKp9//jkxMTFERkYCcOHCBd58803ef//9MvUlZWRkZBozCoWCCRMmcP/995tkvr6ttTx133kk9Iy1Xs8s24+wUOUh6TU4/tAKX9/7sd9u3jIrOndn8p55EAC1nS1b1F6kXsk365oNTdSOJLJTirFzqt25TkMxSqxoRS8zWWY6zpw5w6lTp0wmTjdGMjMz2bNnDzqdrtn6ZhqNhp9//pmioiKUSqVJmpHI/pmMTNPF3ILfP4EU4HtJkuIlSfr55s8V4Ieb971uZhuaHZIklRFJDhw4wJEjRxBCmEw8KSCNBPai9xrC/b5xtFUmUNiqF/kdytby0Hmrub7nKKWdK08nqQqdTlfmf6lEjSL3rrkkiejXZ3CofTBqhQVNWR+6U7zbel1fRuwrKdRweGMCDq7W9J3YrsxrWZ1YGDHvflzxxZUO2NjYsG7dOj744IMqbUlNTWXfvn2cOHGi3AnamOL7wgsvmPTx6/V6Nm3aRFFRERERESYTpxsbBw8e5OjRo8THxze0KWYjMTGRX375hejoaJPMZ/z+MtbV+eabb1i6dCk9e/YkLy+PdevW8b///Y/27Rs2lV9G5q+C0deQP281587nS61W88MPP5CRkXHrvvoiEFyXDvNg6AH+M/koC0ZfQm9lR+qAhSj+7IP3Ez1RFFngM7EP9lvN21U1c9mj5E0fwo/LXydVa92kfbPquHLqBgnRWXQe7IW3n3ONxwkERWTSgWFYcm9rTdeW9PR0tm/fTrt27Rg+fHhDm2MWSktLWb9+PadPn6a4uLihzTELQgh+/vlnTp48SVpamsnmlP0zGZnGQ239M7MKfkKIdKAn8B6gAobf/FED7wIhN4+RqSNxcXHs27eP9HTTPI1Xc0FNAbH8gi2uSJYuJA/+Jxk9ZpDa7yWUWaYTaNasWEdfl4dYs2IdAJbxabTt/wpeM5YbOvLepDi/lMPbk3F0s6H3+LZN/mRiFO+23BC3xD69XnAkMgGNSsvAiA5YWpffjatMLHxs3mR0aGjLfWWKdi9YsIBDhw7VultzQEAABw8eNLnYB4a085KSEkaPHo23t7fJ528MxMfHs2/fPrp27UpoaGhDm2MWCgsL2bhxI66urrfSOeqL8XP9+++/895779G/f39ef92wH7Rz507+97//ERERQVhYmEnWk5GRkTEXQgi2bt1KbGwsJSUlJps3g/NkcBZHWtGjTRb6dj2In/AlhW36o/VWobmZaVHaqZCSQaarmGP3axTctUGLlSV/vPA4Cckaug7zxsu3+dXsA8hJKyZqRxKevo50HlI7v6WIDNwIwJm2ZrLOdOTk5ODo6MiUKVOaZVqmEIJt27aRlZXF5MmTcXRsmtlC1XH69GnOnDnDkCFD6Nixo0nmlP0zGZmmjdkrxwohcoG/3/yRMQHGaKy8vDw2bdqEh4cHY8eOrbcQdvAaPL5ZEBaazNT+CqwUN7umKpTkBE3G429dcPjZk+u/HqO0U90i+oysWbGO5QvXMq21xPKFa7HKK+GN//6GMrcImzMJuKz4mdy/jUOvExyOTEBXqmfgEx2wtKp/WHpjYMa8aTz2TPitMPvivFIKstX0GtsWF8/Ka9oZa/p98uraW2JhHkm0YzA2lHe2BwwYwJkzZ1i7di2ffvopUVFRlc4dGhrK3LlzmT59uslr9hmxs7Nj1qxZzdKZBMjPz2fTpk24ubkxbty4Ji9OV4RerycyMhKVSsWjjz6KtbV1vec07h5fuXKFTz75hIyMDA4fPgwYuhwvX74cGxsbvvvuO8AQGWyKFBUZGZnKuTPyuzl+l5kD43N27NgxYmJieOCBB2jXrl0954T9idCzXTKJ0n4c8Ea6Y79eb20492sCi7h25CBes7uR/sk59K6aeq0LIKk1eLywEpfPfyXrH+HceOuxW/dlJRdxeud1vP2cCB7U+GvT1ZXMa4XY2FvQf3J7FIqafw60qAFBGwaU2YxtrHTq1Al/f/9me249efIk586dY9iwYfj6+ja0OWYhNTWVHTt20LFjRwYPHmySOWX/TEam8VFb/6xxt4qSqRSdTseGDRvQ6XRERETUuw5FYi7M3SHQCYn1JzshoWTWwIu37m/xHz9cP+0AQNuBA0k88Qca37qFwxvFvn8FKejqKuHvKHhzyU/49g3giT8uo7eyQNhYAZCbUUJuagm9x7fF2b1h0z+zsrKIi43lenIyGo0GS0tLWvv44OfvX6cOX3eeEB1crRkzN7jCyL67uVMsLCEHBzxxJ6jS421sbJg5cyYzZ84kOTmZqKgoLl68iEqlwsbGhk6dOhEaGoqPT807ztWWvLw8fv/9d0aNGmU2MbExsH//fkpLS3niiSewsrJqaHPMQkxMDFevXmXSpEl4etY/ZczoTBYXF7N27Vq2bt3KV199hY+PD+np6Xz77bccOXKEXbt2YWFhgVarxcJCPnXJyMg0ToxNqQIDA01SA/fzKHjnEIzyT2dxy50UhM6ASlwFnZea5K0n6r2mEac1e3D5/FcA3P69geIhXSge2ROAa+dysHGwpN9DzTuNL6CPBx26u9XIP7uTIjLowDCscTCTZabhxIkTWFhY0LNnz2Yr1KhUKvbs2YO/vz+DBg1qaHPMxm+//Ya9vT0PPfSQSTbWZf9MRqZ5IJmzuKYkSfcDDwghXqvk/n8Du4UQzbv3ez2QJKncCySEIC4ujrVr1zJlyhSCg4PrvU6eGp75NY/DV53xVCTz1YivsO4Ucut++589aBURiqLYgvyHr5P63ek6JYTfLfYZOZsjeDNGz6oubRnw+fOo+txOQ1UVarBxaJjCuqWlpezfv58dO3ZwJe5Kpcd19OvImDFjGDJkSK2EnsJcNfGnsugyxBuFsmYOcx+vMPy7tuFfy+fhHWxDZyKwp3Yd4+4lOp2O1atXk5mZyezZs+skjjYVNBoNaWlptGnTpqFNMRtCCK5evUqHDh1MOu/mzZv5f/bOOzyqauvD75n0HpIQEtJpoTfpofcmPShNmoigXsT7eUVFEort3uvFBorSVURCr1IFEQLSgvSaRkgjvWdmzvn+GCYQ0pOZTDKe93nmgZnZZ+81LWed315l5syZ9OrVi+3btwOwZs0a5syZw2uvvcby5csRRdFoo0NlZGoyxQk6kiQZr8pTDkryz0JCQoiNjeWVV16p8gZX6AOYsE1Cehwh9p7N/zHF9yAPuy9ArXDAJMUMdb38MmapAqKI59DF2By8RPr47sStfh3JTpOFIEkSeVkqg/ln+ubu+UTsXCyp51vx1M9skrCkDv48j0Lv5dIrT3R0NOvXr6dx48a88MILRi3cxsXF4eDgYLS1owGys7PJyMjQyWbs08j+mYxMzaU8/pm+Bb+jQKIkSUW69D5+/iegriRJA/VmRC2nJIcSNBFnuhJPUokk/n4Qu442ZqD5LtqanSO6dzDZ9Z+IfpbnHKjzWUPiNoQhWYgVXqMksU/LlRSJpTdE5v1vImNfHEVCZCYN2jkbzAG5cf06X3zxBQ8fxpKXDplRoEqBrExQqcHUBGxswbQO2HqDhT3Ur+/OvHnzaFYOEVatEjmy9jaZKXkMfrUZNg7lEwqbCiN4rn8DLp+8T+vOTVjzxS+0bdu2iq9Wfxw4cIA///yTwMBAnYjTNZHo6GhcXV11kt5aU0lNTUWtVutFsL1y5Qqvv/46N2/eJCoqCgsLC06cOMHcuXMRBIGrV68CyA6ljIyBkAW/opTkn6nVajIyMnB0dKzyGtkqkTeOxnHkZn06mf3OTw79MTVVEDXg3zj9YwxWfzjx4MBZ8ptVrcxKaZg8Ssd2+2nSZg0CQeDexUfU9bHF3tl4o/UTIjP4bcMdvFrUodvYim1uiajIJJ4WjMcapyrboq+oqaysLFatWoWpqalOxOmaiCRJhIeHG20Kr5bw8HC8vb31EqEp+2cyMjWb8vhn+v5ltgbOlvL8n0AbPdtgdNy7p4k009WFdzbJ3OUgQt3nmOe+irZm58is35Fst8IfTW7HNGI3X9SL2AfQqo7AB80UfPHWJr5duIfLR2LIy1ZV6jVVlV27drFgwQIi7sQSHwpJZ6BrvsCr7iZ83saE1R01/77qbkKXfIGkMxAfChF3YlmwYAG7du0qc41Lvz4gJTabLqN8yi32aVl3eBm/hC1FyrSmffv2uLu766xbqi65evUqf/75J126dDFasS8pKYmffvqJffv2GdoUvaFSqdiyZQsbN24s0lm7quTk5PDjjz9y8uRJ1q9fj4WFBREREaxZs4YbN26wefPmAhtkZ1JGRqYmk52djYmJiU7EPoBk0/O8MnAHr/e+zLKuWzBTqInt9hZ2nw3B/idPzCKt8Q4IwDSq6lFLQm4+tttOF3lc7WJP2iuDQRCIu5/O+b1R3DxlvP32cjKVnN4ajq2TBR2HV7zZRiZx1KejTsS+ZcuWYWFhwbJly6o819OIosj27dvJzs5m/PjxRin2AZw8eZIffviBiIgIQ5uiNyIjI/nhhx84efKkzueW/TMZGeNA379OW6C0XAM1UP7+9jIA7Nixg/z8qqdwZCtBSQ532I8Z1kh2vkQN/DcpTYaT4Pc+glI3aRpliX1/pUjM+VPNXylSgej3y7rNJChvYmlT/akiu3btYs3qNaTHQOwfMMBaYHkbE8Z4muBvL2BtKqAQNP/62wuM9TThf61NGGAtEPsHpMfAmtVrShX9Iv5K4u6FRzQLqIeHv2OFbcwhmX5Np3HxwiUuXrxIXFwc7du3p3379jVG+FOr1Rw7dgwvLy/69+9vaHP0glKpJCQkBIVCQd++fQ1tjt749ddfiY2NZejQoTrfQbaysqJ3794sWbKEIUOGkJuby44dO/jxxx/597//TcuWLVGr1XJdGBkZmRrPH3/8obO5krhLDH9iL3gwok0UtBtE+PCVZHp1Jad7MqKNZkM0Y/xDVF5V6wRs8jAJr17v4THuE+x+KV44yE7PJ3RbBHbOlrQb7Fml9Woqoihxems4ylw1AYENKly3L59MLLDHjdZVtmXZsmUsWrSIMWPGsGjRIp2Kfvfv3+f+/fsMHToUNzfjbLhy//59fvvtN1q1alXlxjk1lYyMDLZu3YqTkxNdu3bV+fyyfyYjYxzoO6X3OnBVkqTxJTy/BWgjSZK/3oyo5RSXMnL37t0qt1q/+Qgmbpd4pddFOvmHYYNrwXOKZDN8unZHVT+XmB3nEB0rH2WnVqvp7DiaQFeBMd5F9eW/UiQ+vSYywlNg9wOJd1ooaF1HYHuUSEiCxNnUHdVaRPjG9essWLCA9BhIvwpvNzHB27r8WUtR2RL/ua3GviXYe8Ann35Ks2aFG2oo89Xs+fwqDq5W9HmpcYW6voEmpfeudJiGPBHRBEHg0qVLzJgxg7CwMNq2bcvatWsNnuqbkZGBJEnY2xftIGwM7Nq1i7CwMCZOnEjjxo0NbY5euHz5Mjt37qRbt24MGDBA7+sdOHCAGTNm0KxZM44d05R31RaOlpGRMQxySm9RivPP8vPzq9xELSoNnB0Suc5WrKmLKcWXirC44ECdFb7EffcXmFbNl3eb/gUO648CIFqZE359BSrfJ3XARLXEsQ23SY3LYcAsf4M3UdMX4WFJnN0VSedRPvi1qVgWjYRIOg9oymjsqV8lO7Ri3zfffMPs2bNZtWoVc+bMYcmSJSxcuLBKc2t5+PAh9etXzc6aSnp6OqtWrcLa2ppZs2YZZRM1URTZuHEjMTExvPzyyzqv21ccsn8mI1PzqAkpvVuAsYIgzBOeskbQ8A9g7OMxMhWgqmJfcg7M3ANJOQIf//ocv17s8uRJpYDHqI6Y37bF+rgLngO6QsUzeAswMTHh9U8msvmBxJWUwg6pVux7q6mCkZ4K3mqq4NNrIjujRTY/kHj9k4nVKvbl5+fzxRdfkJcJyVcqLvYBeFsLvN3EhOQrkJ8FX3zxRZFoTDNzE/pMaUy3sX6lin1fBW+iqTCiyA2gkTAAQRAKbgDt2rXj0qVLSJLEpUuXaNeuXaExwcHBFXtDKokkSVy/fh1RFLGzszNasS8sLIywsDB69uxptGJfYmIie/fuxcfHh379+uls3tI2mszNzbGzsytIFVGr1bIzKSMjUyuoqti34yb02Sjx9ZlLuN3+E1OpZKEi77k04tZerrLYB5CwfCZ5/h5IJgoSP52Gyse10PO3zybwKDqLjiO8jVbsA/Bt40SvSQ0rLPYBZBJPXVroXOwDmD17Nt98802VI/3S0tJ48OABgNGKfZIksXXrVpRKJePHjzdKsQ/gt99+IzIykuHDh+tU7JP9MxkZ40PfEX5WwDGgE/AQuPr4qRaAJ3AO6C1JUtVyEYyY0pp2VJaoNJi8K4/IFAtshAxWDtuGe8PHzo0ETp80ou57mqi0mJDzZI6LrfRaJgmpqF0di6T1Pi32tXB8crK4lirx8XWR7i+0ZsUm3dYsKYvDhw/z1ZdfER+qSeMd6l55sXFfrJoj2RL1usIb/3iDAQMGIEkSiZGZuFai45uWNKLpLLxW5DvwbIRfu3btWLduHa1bVz2tpKKcP3+effv2MWrUKNq0Md4SnWlpaZw5c4YBAwYYbe0SlUrFsWPH6Nq1K3Z2lf/eqtVqTExMuHnzJk2bNi1zfGZmJra2tnorVi4jI1Mx5Ai/oujaP/srHsaFSOSpNW/rUtu5jGgVTnyHVzCNsUXtml+pGsrlxezWA8yiH5Hdv22R59QqkQc3U/FpWfW6dDWRzNQ8AGwdK9d4S0UuuaTTigmYY11pO4oT+56mKpF+arWadevWkZKSwrx584xWCANN/WhBEGjRooWhTdEbcXFx3Lp1i169elVpHtk/k5Gp3Rg8wu+xkNcbWAQkA70e31KAhUBPWeyrfuo4xPF15zfoZ76Hz+0m0/P8bCxS7mueFCD53bs83HSBhP9dq5LYZ7vtNA38ZmGz50+mvfYi8/43kaU3NBF8xYl9AC0cBd5truDU1r9Yv2JzVV5mhdm/fz956aDOgEFuVftpDHZToMqAvHTNvAB3/kzk2IY7xN5Nr9ScOSRjh3uRx7U1+9q3b48gCISFhXHhwgWDiH0PHz7k119/pVGjRgZZvzpQKpVIkoSDgwODBg0ySrFPkiTy8/MxNTVl4MCBVRL7QBPpe+vWLYYNG0ZsbMl/UyRJQpIkbG1tAWRnUkZG5m+Dq41EA5cMABqZXGe0xY/YRxzHMioJrz7d8BzUGUVK1esaC3lKLM7fKfK40t+ziNiXlZpHfq4aE1OF0Yp9apXIqS33+W3jHUSxcoJtFgn40FOvYh9ULdLv4MGDxMTEMHz4cKMV+7QZNS1btjRasU/7Gt3c3Kos9oHsn8nI/B3Q+5WqJEl5kiR9KElSG0mSrB/f2kiS9JEkSXn6Xl+mMHlkcIf92DrU5TvnCQy02E2WW1vyHAoXtM2Y8JCU+fcrvY7dphPUD/wURXYe9Sd+hvmVCKa99iLdxrbmx3CpWLFPSwtHgQX+Cj6fv0mvot/T3UaTkpK4d/cemVHQ20XApIoh6iaCQG8XgcwouHf3HveuPuTSoQd4+Dvg1rDi4omICiXZ+PDk5B4WFlbQqMPNzc2gQh9ounlt2bIFW1tbRo8ebZRh/pIksW3bNn755ZcqR9rWZM6ePcuqVavIzMzU2ZxKpZLw8HA+++yzEsc8naIuIyMj83dCsL3G++N+4vmWd/m82TJsFZnEdnwL14ljML9ng/UJFzwHdqlSmRVFcgaeAxfh3es9LC7cLXWsSilycvN9Tvx016jPdxcPPCAlNof2gzwrXFMZIJsk7PHCicqX2ylN7Hu2HEtlRL+rV69y7tw5unTpUqSutLGQlJTEF198wY0bNwxtit5QqVSsW7eOQ4cO6XRe2T+TkTFujC80RaZYJAnUKLnHIQQUKN26EDX4v2R4dSPR830QdFsrL7tva1TedQFQuddBsjRn/YrNnNr6F+82L1ns06Jv0W/9is10chxdMPfdO5rdblUKtLDXzc+ihb2AKgUsTK25uC8Wa3tzOo/yqdQJM5N46tMRazQ77FqhTxvRFxsba/CIut27d5ORkUFgYCDW1pXf5a7JnD59mlu3buHr62u0jk90dDSHDx+mbt262NjY6Gzeli1b8vbbb/Pbb78RFxens3llZGRkajsZxBLJCZxN6/FGvxuY932R6AEfk+nbhcwR8QBIgkTywttV8tzdJ/8P69+vocjOw3P4UhRJxWccSJLEhf1RpMbn0LKXm9Ge78IvJ3Hv4iOaBdTDw9+xwseLqFCRgw89UFTyg1GpVAQFBTF27NhiI/uOHz9erOg3duxYgoKCUKlKb6yXkpLC7t278fLyon///qWOra0olUq2bNmCJElGW5sQNE0z4uLi8PX11em8sn8mI2PcyPG4fwNiM+CVvRKv9b2Mc71E7PEAQGnvwSPHD/FpF0D6Sw9I+PyaToo/A6jd6vDgQBB1/7WeuHXzyK9jw9cLNjHOQyhT7NPSwlFgnIfA1ws2MeXVQJ018Fi/YjOfz9/EcDeNoAhg56ZJk8nKBC8daVXe1gJZmdDNbwzqPInuLzXA3LLiP7l8MjHHFjc09fAsLCwKhD5Di3xPExAQQNOmTfHw8DC0KXohMjKSo0eP0rx5czp37mxoc/RCVlYWW7duxcHBgVGjRlXpIk9b3+XKlSusWLGCrKws1Go1ly5d4qOPPmL58uUoFAqjvZCUkZGRKYtcFQimGdzhAFY4YcLjlF1BIKducwCSF9xF2SALk3gLMkfGV2m9xM9mYBV6E5PULJLfGonoVHzGwf1LSYSHJdOipxvujRyqtGZNJS0hh/N7o3D1taVV38qJRJnE4UFnrKhTaTtMTU1ZvHgxixYtYtWqVUVEv+PHjxc5ZtWqVWzbto0lS5aUmVrp4OBAz549ad26dbU2wqsuJEli3759JCQkMGnSJBwcjPP7GhYWxsWLF+nevTtNmjSp0lyyfyYj8/dCFvyMnFwVvLIX/koQeD2kLf8aJNGrsWb3xiTOAs9hnTHJMKPOCj8EpYL4VX9VbiFJgmdODPnNvIjZ84FmLeD1Tyby+fxNNLKVyiX6XUuV2Boj8eZy3XXr1Yp9rzdU0NRega8NfD5/E31naIQzlRosdeQPWZpo5rv36BLu/rbUce9Q4TkkJHJIxp+RBRcCubm5ujFQR2RnZ2NtbY2npyeenp6GNkcvZGZmsnXrVpycnBgxYoRROkGiKLJ9+3aysrKYOXMmlpaWVZrL1NSU/Px8AgMDuX37NmZmZgX1Dg8fPkxcXBweHh6IomiUdRBlZGRkSuPMA3j9gMS/ehylXZ3biPUCShybMb7y9ZSfJr+ZFzE73sMkMY3MwO7FjkmJy+bC/mjqNbCjRa+idYONBWtHcxq0c6F5T7dKpfLmkYEF9tSjVZVt0TbgmDNnDkCJNfyg/I07JEkiJycHa2truncv/rM2Bi5dusTly5fp2bMnjRo1MrQ5eiE+Pp59+/bh6+tLnz59qjSX7J/JyPz9kH/FRs7dZAhP1RR8EdXgpEgqeE50VJLTLRkAtZ2S1NfCK7WG2d2HeHd5G/ObD0odN+21F3lz+UQ+uSVyLbX0SMJrqRKf3BJ5c/lEpr32YqXsepZnxT6ApvYKXm+o4Njav8h+BKYmkKsuY6JykqvWzBeVcg0zl8r1pskiAWf8caBmCmnp6emsXLmS0NBQQ5uiVzIyMjA3NycwMBALi8p18avp5OXloVQqGTp0KO7uVbvI0zqIb7/9NsnJyXz11Vekp6ezZMkSPD09uXXrFv/3f/9HcnJywdjs7OwqvwYZGRmZ2kBMOszdL5GYLfDOwee5tj8axzuaBl+mkVago5J5QkbRv6s5vVuVKPYBWFib4uHvQNcxvpUSwmo6kiShUoqYmZvw3FAvrGwr3ghFQiSHFHzp/SQqs4osXLiQJUuWMGfOHFatWlXsmIp06T1//jwrV64kJSVFJ/bVVDIyMmjYsKFOGljUVNLT03FwcGDs2LFVFuBk/0xG5u+HLPgZOY1dM1jRaykNTW4QZDuPkX9NxixTE+EnWYrEbrpI0rt3eLj1AnmtMyo8v+Wft/Hu+i+s/ryNx5BgTOJKdyy03XpLE/2qS+zTohX9Hl0AC0uI1tF5LSpbwtFBIw5VJvJNTT4g4UkX3RikY9RqNVu3biU/P99od1W1uLu789prr1GvXj1Dm6I3rKysmDZtGu3atdPJfCkpKVy5coXu3bszc+ZMLCwsePvtt9mxYwf9+vXjl19+Yfr06Zw9e5a4uDh27NjBw4cPdbK2jIyMTE0mOQcQNLXXnIRHdDY9Qd2La7G+mIVv6164vtYKVFUQ2yQJ5+BN+LZ7E5P48gk+2i6c1vbmBAQ2wNJGN0JWTeP22UQOf3+TvOzSa9+VRhaJ1KVZQYkcXVGa6FcRsS8mJoaDBw9Sv359HB0ddWpjTaNXr15MnDjRqCPRGjduzNy5cws65FYV2T+Tkfl7YdC/joIgHBME4UdBEJob0g5jRduko4HpPfY6deQly5XkO3iitK77ZJACHn10k+yBiZVcRESRrWm2bBqXisXVyFKHZ6bk4Uor5i6ZVKzoV91inxat6KfKheOJugnxu5EhYPa4rEtlBLFM4vAiAAt0c4LXNUePHiU6Oprnn3+eunXrln1ALeTWrVscOXLEqNMa0tLS2LZtG9nZ2Tqt2VKnTh3u3r2LjY0NlpaW5OTkIEkSzz33HD///DPNmjVj3759jBo1io4dOzJlyhSuX7+uk7VlZGRkajK+9WL5aMKPtHKL5QvPN3E3iSGh6XzcRo/AJN2MOt/4Uu/VyqeK1n1rDS6LN2N+Lw7PIYtRpJe9k3nzdAInfrqHSlmFNsA1nEfRmYQdfoCtkwXmVpWr36JC4/N6op9avsWJfhUR+7KzswkJCcHW1pbRo0cbZQkSSZLYs2cPkZGaaw5j9c/+/PNP/vzzTyRJ0ulrlP0zGZm/F4b+C9kbmAj8JQjCDwa2xaiQkIjiFFkkkt0kkKQ+/yLXuREJPotAobuivbldmxKzbQEqdyeif1tGdv+2JY5Vq0ROhdwnN1PFxNmjiqT3Gkrs09LUXsEbjRVcSoGrqVVzeFWixPFHIuYeeTRo2ABnZ+cKHZ9LKra44ULTKtkBYGlpSfv27QkLC6vyXFpu3LhBaGgoHTt2pFWrqtevqYmkpKSwc+dO7t27hyga5wWQWq0mJCSE27dvk5NTubTzkubNzc3F1taWe/fukZ+fj5WVFYIgoFKpcHFxoUePHoiiiL29PV5eXrzyyitG20FQRkZGRksemiYdHrZW/Hf8eVxHjOVhwL9I9+9BTjdNNJ5oqyL1jYhKr5HdpxXSY4FA7eqAVEZqbkJkBn8djcHMQoGJqfEJRAC5WUpOhYRj7WBO51E+lRbCskjAmx6Yo7su9s/ytOgXGBhYbrFPkiR27NhBZmYm48ePx8rKSm82GpLTp09z8eJFYmN1U9uyJhIVFcXBgwe5f/++TueV/TMZmb8fBhX8JElSAPbAaCDZkLYYCzlKePcoXM+6RQJXsUNTiyvbvR3JGZvwbTYKh++8dbpm9uDnuH93FbldShenLv76gJTYHLqM9sG2jkWhmn67Hog6F/vUajVfLdB04y1L7NPS1F7BCA8Fa8PLFngeZEv8HKlm2TUVc86rmPGn5t9l11T895YayVLCwh6Sk5K5UYGdMRE1eaTjQ08UOviJ5uVpdqPbt2+vM+FPqVTi4+PDwIEDqzxXTUSlUhESEoIkSYwfP77MLni1lUOHDhETE8PIkSMrLEqXhomJCZaWlrRu3ZozZ86wevVqQPOb1L6Xs2bNwt3dnVdffZUjR46wYsWKgjEyMjIyxog280JAgTk2CAJIphZk+HTXlFn56SKPFt7m4ZYL5LVJr/Q6WSM6E//dXNIn9eLB7oVItiULPzmZSk5vDcfWyYJOIyovhNVkRFEidHsEedkqugc2wNyycuf0HFKwwx1nGuvYwqJoRb/t27eXS+yDJ91XBw0aRP36les8XNOJiIjg6NGjNG/enM6d9RNlaWiysrLYunUrDg4OjBo1Sqe/Sdk/k5H5+2HoCD8kScqUJGmPJEnzDG1LbUeS4F9HYNNVmPyzJw/jWiA8/ogtzzri/lJ7BKUCt9ltcPi+EqKfJOHw/UEUaVlFn7IuvZFB+OUk7l14RNNu9fDwdyx4XCv67Xwk6VTsA81J7Y1PJrI3TuRmevkitG6mi+yJFckSNTX4iiMhV+K/N9X875YacwWM8jTh49YmrHxO8+8oTxMa2AhIORAfCgkxqSxYsIBdu3aVy4Ys4nGjPTboLk324sWLXLx4EdAIf+7u7lUS/lq3bs3UqVONVgj79ddfiY2NZfTo0dSpU8fQ5uiFq1ev8ueff9KlSxeaN9dPVYX/+7//w9XVlW+//ZbIyEhMTEwKHEYbGxuSkjRNhKytrQscWl115JaRkZGpKTxIhwnbJM7FH0WZeRNrSthgUUDS0ltkDUmo8pppMwcS+8NbYF5yLT5RlAjdFo4yV01AYAPMLIzz768yV01+jornhnpRx926UnOIqMknE2966GQztjwsXLiQvLy8col9AGZmZowfP54OHTro2TLDkJmZybZt23BycmLEiBFlCmEqVeXrNBoKURTZvn072dnZBAYGYmlpqZd1ZP9MRubvg8EFPxnd8Vc87LmtEamSs2yJTLAveE7plUN+s0wA8htnkjGmgmHwokjd+atxe2UFHiM/RMjNr9DhCREZ1PWxpXW/ojuO0157kbOpO3Qq9j0995vLJ/L1vbJFv5vpIt/cERElsGsA/7mtLiL6/Zkksuy6mqb2Ah+2NuF5DxOa2AlYmwooBM2/TewERnma8O+WJvSxEog9CekxsGb1mjJFPyXZmGBBfdpX+bU/S9u2bQuEv7i4uEpF/O3fv5/Lly8DGGUUAEBycjJhYWEEBATg7+9vaHP0giiKnDhxAi8vL72laUiSRMuWLZk+fTpXr16lf//+nDhxosBh/OOPP5AkCXNzc8B4a/DIyMj8vclRwit74fQDgVlbupC66wxW8VcAMI2p+sW8WXgcrnO/AWUx4kYZ5+nstHwykvLoMNwbx3rGmf4Jms7DA2Y2pUG7ykeyZxGPO+2xwUWHlpVNeTZW09PT+emnn0hJSUEQBKP1z86dO0dubi6BgYFYWJQeaLBs2TIsLCxYtmxZNVmnGyIjI7l//z5Dhw7F3d1dL2vI/pmMzN8LQZKKj2LS2QKCoAAGAg0BJ+DZs5AkSdJSvRpRixEEocgHVNJnpkbJtrBfWPr7MIZbbGGR7/+I6fUBaksHzVyZJtSb24qkRbdRNqpYK1qr3/7Cu++THcbEpZNIXvhCuY+XJAmVUsTM3DC7Q69NXMjJX/7iH02KT++9mS7y7V2RVxponlsZLmLtC1kRMNxNYLCbggvJEj9HibzR2ARP6/I7Uw+yJf53V41DS7D3gE8+/ZRmzZoVOzaNKBozlDr4VeZlFosgCEW+M4IgcOnSJWbMmEFYWBht27Zl7dq1tG3btsR5Ll26xO7du+nRowd9+/bVmX01kYSEBFxcXIzaycnKykIURezs7PS6TnZ2Nq+99hobNmzA2tqayZMnI0kSv/zyC3Xr1uXOnTuA5m+EsV6kyMjUdor7bUqS9Lf+wZbXPwt9AFN2SijVAmbk87NjH56zOEeczQ7cxg0m4aurpL0SVSkbzG8+wLP/B5jFJJH+Qg9if3oLKhiFo8xTG21kX1ZaPlePP6TdIC/MLSv/GpVkoyKXlryIKaULTdWNWq1mw4YNxMXFMWvWLKNtogaa31dCQgL16tUrddyyZctYtGgRY8eOZdu2beVOia4pxMXFUa9ePb37RLJ/JiNT+ymPf6bXq1lBENoCd4B9wFfAYiC4mJtMBShu907bpKOnuJ79ddoRbPsPBElENH2yeyzZqonbGFZhsQ8gp09rEj+ZCkDGuG6kvD2mzGMkSeKvozFkJOciCILBxL71KzZzautfdHYS+PJ20Ui/p8U+f3vNba6fguwIcGwBR7Il/hGmZn14+cW+W+kiwVdV3EoX8bQWeKuRCcl/QX4WfPHFF+TnF42QzOYRDvjgiG+VXm9wcHDBd0T7PXn6vvaxdu3acenSJSRJ4tKlS7Rr167g+eDg4EJzxsXFsX//fho0aEDv3r2rZF9NJS8vjxs3bgDg6upqlGKfJElcuXIFtVqNjY2N3sU+SZKwtrZm3bp1fPrpp2RnZ/Pdd9/x/fff4+LiQkhICKBJu5GdSRmZmsWz5wyZsinu/WrvmcGycXtwsUpnUZ0FdDQ7TUrd2bhNGIQi3wS32W1w/ManUuvZbj+NWYwm9c525xks/ooo13GZKXn8dewholoyWrFP2ygu+noqeVnKKs2VxSN86FXjxD6AI0eOEB0dzYgRI4xW7IuIiCAtLQ1BEMot9n3zzTeEhITwzTffsGjRohof6ZeamkpERAQAbm5uev+7K/tnMjK1l4r6Z3qN8BME4U+gKbAAOAWkFjdOkqRIvRlRyyluB1nL059dPFeJ4DgOkidOt/ZS58ZOHnT4nHwvB90ZI0nYbg8lc1Tncu0g3z6bwMVfH9B2gAdNu5V+gtYX2i69c/w0Qt6RODW7H0oFkX7Pin1PcytdZGW4iMtzkHYT+tkIDHYv+3XfShf5/r7IQDcFh+JEZj2OGlwbLqKyAo+e8MY/3mDAgAEFx4ioyCSOlkzACkedvgflifBr164d69ato3Xr1kWOz83N5bvvvkOlUjF79mxsbPTXmc5QSJLE1q1buXHjBq+//jpOTk6GNkkvnDt3jv379zNixAjatWtXLWs+vTMcHh7Oli1baNy4MX5+frRr1w5RFI1SXJWRqe2U5UjKEX5l+2dqlNxiN3lkIOXVw14Vh0PEb6TVmYTniM5YXnAk3zebqDMnUderWKmUxwvhOu97HNYeIWb3+2T3bVPmIWqVyJG1t8hMyWfwq82wcTCv+Lq1gAv7o7lzLpGA8X54Nat8Ld4sErHFjcYMQSiSpGRYrl+/TkhICB07dmTo0KGGNkcvpKSksGrVKjw9PZk8eXKpY58W+2bPnl3w+KpVq8rd6dgQqFQq1q1bR3JyMm+++WaZ6cq6QvbPZGRqJxX1z/Rdcb8VsFSSpJV6XudvhdaRlCT45RoMaBpLpOkJ7KiPIJiQ0nQk0qFX8JrVloc7z5HTveINkIXsPCQr88L1XwSBzLHdynX8o+hMLh16gIe/A/5dXSu8vi54VuwD6O9mAqj58rbICA/4NbZ4sQ/A317B0Hpw4LKIQg0DGpZ90tOKfbMez+ljDd/cFVEIMMhNwb5YkbQoTS28pwW/TOKpTyedi33Foa3Z1759e9q1a0dYWFixQp+WmzdvkpaWxrRp04xS7AM4e/Ys169fp3///kYr9sXExHDw4EEaN25cauq2rtGelERRxM/Pj3feeafQ87IzKSNTM3l6o0iO8CgfT79n2syLLB5hT32wUKG2cCG5RSCQT9SJ09Sb04rkBXcrJ/YBCAIJn79MyuvDUDbxKNchFw88ICU2hx4vNjBasS/yajJ3ziXi38W1SmKfiAo1eXgTUOPEPkmSCA0NxcPDg0GDBhnaHL2gUqnYsmULgiAwbNiwUscWJ/YFBwcTHBxccH/OnDkANU70O3ToEA8fPmT8+PHVJvaB7J/JyNRWKuqf6VvwewBUPH9Uplx8dxE++gPWXlfw3lAPHGw10Wc2+1xxnd8RQRTw7NeFB4fOktMrqdzzKpIz8BwcTE5AMxL/N7PMos/Pkpul5NTWcKztzek80scgFwrFiX1atKLfnhiR5+sLxYp9oBHv9seLmDtBgELApIzX8azYp0UhwCsNFTSxU+BjAyuviVyxvkdSUhLOzs7kk4k5trhRsuimC8LCwgoi+rT3SxP6tLRt2xZvb2+jFcKio6M5fPgw/v7+dOtWPkG7tpGdnU1ISAi2traMHj3aIL9JhUIh14GRkZExenKUsPwsTGj7J48sLmBn1qjYcZKNpsxKRTC7HVNU2FMoyi32hV9O4t7FRzQLqIeHv2OF1q4tiGqJv449xMXLhjb9y/e+lEQmcXjQGUt0mC2jIwRBYMqUKeTl5Rlt99QDBw4QFxfHhAkTqFOnZOG2pMi+xYsXF5Soqami35UrVzh37hxdu3Ytsb63vpH9MxkZ40bf0v2XwHRBEIxzC9GA3EiET05p1N1bsfXYF9ai4Dm1kxK1i2a3OK99GrmdUso9ryIlE6++C7E6dwenz3fj8sFPFbbt2ok48rJUBIxvgLmVvjXlopQm9mnp72bC3EYKfo2TOBynJuhxvT0tT6fzkgvNSpjn6fHPin3ax7RiH0ATOwVzGypIvAAr/7seCYlskvGlFyaY6eYNKAZtR15BEAgLCyMoKKhMsS86OpqYmBgAoxX78vPzCQkJwcHBgVGjRhmts7N3714yMzMJDAzEyspwnRiN9f2VkZGRAU3mxb+OwKoLMONHZ+z27cY8MwEARXLVzvF2v5zEr8Xr1Pnvjkodr8xXc+ngA1x9bWnVt36VbKnJKEwE+k9vQkCgHwqTyp9zNJux9tSjlQ6tqzqSJHHhwgXy8/MxNzfXey1eQ3Ht2jUuXrxI9+7dadKkSYnjShL7imP27Nk1qqZfamoqe/bswdvbm379+hnUFtk/k5ExXqqjS++/gFeAjUA0oH52jCRJG/VqRC2mpC5woiTxv9NnWXG+I+1Mz/Bd2yUkd3kFyUSjrZpGWFHv9VbErQkrNVVErVYX3hlUqak/4T/YbT0NQNw3c0h7dUiFbFYpRZJjsnD1rX4npDxi39Noa/oNc1dwOL5wl97+L7fldnQY9w/Av1uZYG1a/MmwNLHv5QZPxL6nuZ0h8m24yOtfj2T2K3NpxMAqvOrSsbS0pEWLFiXW6CuOzMxMVq1ahbW1Na+++qpROwJXrlzBxcUFd3d3Q5uiN+Li4khMTKRVq5p14SIjI1M7kLv0FqU4/+yPKImJ25/c/9R2JuMct5KUugvnd7rxcPs5cnpWvMyKzYELeAxfiiBqNiZjN84nfUqfCs+TEpuNpZ0ZVrb622A0FJIk8eBGKh5NHVEoqvbVlJBIJxp/RuKAp44s1A0XL15kz549DB48mM6dOxvaHL2Rl5fH2bNn6d69e4mppSqVCgsLC8aMGVPQZEJLcHAwixcvBiAoKKhQM7rAwEC2b99OXl4epqbVH5igRZIkzp49S/PmzbG3tzeYHTIyMrWX8vhn+m7a4QXsANqXMkySJMk4Y9F1QEmCXzxXMf1jKrfu2tPQ5CZ1HAQiB3+GaG5b7rnXr9jM1ws28fonE5n22otPnshXUn/8v8kc3YX0qeXfcUp+mI2ds4XBOr6p1Wo6OY5mkKOCgW7lr7enFeVuZ4h8d09ECfzzi4lYOsOmnzZxey+sfM4ERTE/qMqIfVpuZ4h8GyGyIPh9gt41/E6jFlEU+eGHH3jw4AEvv/xymR3RSsLS0pLmzZuzdu3aaq0ZV16ysrKMtiahlr/Da5SRkdE/suBXlOL8M5WUz8obYXx5pC2BFmv5yPZV0mxfwn7sOgSVAslM5MG+s2QPeFSxtbJy8RwSjPXJ6+Q19yL68BLU9Z3LdawkSSRGZhpkE7Y6uXMukQv7o+ky2gff1uV7b0oikwQc8KYRA8oeXI3ExsayZs0afHx8mDRpklHWWMvLy0OhUGBmVj5RurQIv+Ka1tWEBh6SJJGdnS37ZzIyMlWmPP6Zvs8U3wOtgf8Co4E+xdz66tkGoyODWCI5QULXf9GiqQkuFmk87LSowmLfF/M3MdZV4Iv5m1i/YvOTJ83NeLjjvQqJfVlp+Rz/8Q5ndxmu4bKJiQlvfDKR/fFiofTc4ihOlGtip+CVhgq0G8NaZ8PUBHKLxKVq+DlK0423omKfdr1XfRV8tPDDGpFaoOW3334jIiKC4cOHV1rsA43TBk/SibW1A2sCd+/e5fPPPyciIsLQppSJSqWq1HHp6emsXLmSkydP6tgiGRkZGZniiOIUXZpd5KsJp5gxIpPUhgNIdZ2B2kkJQF7zDHK6lr/MihbJxpIH+4NInTWQ6OMflVvsA7h9NpFjG+4Qey+9wuvWFpJisrh08AHuje3xaVW1EiRqlEio8aKLjqzTDTk5OWzZsgUbGxvGjBljlGKfJEns3r2bdevWoVaX4Hg/w8KFC1myZAlz5sxh1apVpY6tCWIfwPnz5/n6669JSip/fXUZGRmZyqLvs0V34L+SJP1LkqRdkiSdKO6mZxuMjjscwApnFCbWxHX+B2m39uA+cCKmkeWrzaUV+95vrmCMl4L3myuKin4VSOFUq0VOh9xHVEu07mfYujDTXnuRN5dP5JvwkkW/0kS5JnYK5jRQ8Pn8TVw7Hw6AtS08yCl+vQneCg7FPVnr5yiRAfXKFvueXm+Yu4JlwYsqLezokqioKP744w/at29PmzZtqjzfxYsXuXjxIlBzhL+0tDS2b9+Ok5MTHh5VK+itb5YtW4aFhUWFBWG1Ws3WrVtRKpU0bdpUT9bJyMjIyDxNAlexww0/lwzUbk2I7/wGuV3SifzzJFkDE4jZ8yeSbfmEjGeRbK2I/+511HXL30DiUXQmYYcf4OHvgFsD44zwy8tWcSokHEtbM7qM9q1yCZIs4vGkCxbUrPfr119/JT09nXHjxhltZNjZs2e5fv06LVq0qFAjkpJEv6CgoIL/1xSxLyYmhl9//RUvLy+jrY8tIyNTs9C34JcKPNTzGn87lCozzNGc7O1/8sRpUT8srtjj07k7ZnetSz32abGvlaPGKWrlKBQv+pWTsEMxJMVk03mkD/bOlhV/QTqmNNGvPBF4TewUvOqnYPtnv5P9CMzqwI2M4lPf/e0VzGqg4Pv7mrUmeGtqAd7OKD3CUMvtDJF9sSILg5cYtI6IFk9PT4YMGcKQIRWr21gabdu2rTHCn1qtJiQkBLVazfjx48udMmIItGkqY8aMqXCB6SNHjhAdHc2IESOoW7euHq2UkZGRkdFiR32EYlxrlU8ODw6eReWVW655HL4/iNXxK1WyJTdLyamQcKwdzOk8ysdoa/H+uTuS3AwlAYF+WFSxUVweGVjiSF2a68g63dGnTx9Gjx6Nl5eXoU3RC9HR0Rw+fJimTZvSrVu3Ch9fnOinrdtXU8S+7OxsQkJCsLOzY/To0Ub7m5SRkalZ6Fvw2wC8IMh/0XTKDye7P7kjCkhmGnEpt106St8SQtEoXuzTUlnRL+paCnf+TMS/iytezetU7IXokeJEvwqn2/ppuuma2sPJRyJqUeJWukjwMx19nxb9AGY1ULD6ftmi3+0MkZV3RT5YvNSgDgho0kYzMzNRKBR06tRJL+JjTRD+Dh06RExMDCNHjsTZuWo1fvTJ0zVpQkJCKtRV7saNG5w5c4aOHTvSsmXLarBWRkZGRgbAVKkECYScyrvXjiv24fbKCjyHLcHq96uVmkOSJEK3R5CXraJ7YAPMLQ2/oagvmgXUo+MIb5w9qhb1JiGRQwo+9MKEmvN+paWlIUkSjo6ORntOz8rKIiQkBAcHB0aOHFlpIaw40a+miH2SJLFjxw4yMzMJDAzEyqp8WVkyMjIyVUXfgt9vgDVwUhCEqYIg9BEEoeezNz3bYHTMrfMFPC5Cm/7SA6KPhJLd6xGxmy+AafGRaKWJfVoqI/o5e9rQuGNd2vSveamRz4p+lUm3HeqqIPMemNjBpig1398X6ez8JKJPS0VFv5ok9oEmVWTVqlXk5pYv+qCyBAcHFwh/P/30E2FhYQQEBOh1TS2SJGFqakqXLl1o3rzm7d5rKa4A9ezZs8st+kmShJ+fHwMH6q/zs4yMjIxMUXwO/QunL53x6dQD04iKX9ALGdk4fbwVAEV2Hs6LNxf4exWaRxBo0M6ZjsO9qeNeeuZHbSUvW1MGxcXLFr82Vd/AyyIBF/yxx7ClaZ4mIyOD1atXc/DgQUOboleUSiUODg6MHz8eS8uqZQo9LfoFBgbWCLEPNBkmVlZWDBo0qMaXk5GRkTEu9N2l91m149nFBOQuvaVSXBc45TYHIoZ+jdryqTouEpp3sxjKI/Y9zZVUiQ+vi8xb/kz33qdQq0QUJkKtCEdfv2Izy9/cRCdHgbPJEnMblU/0u50h8l2EwNBxwzl1YzdJlyVebaigsZ2COxkia8MLd+eFwl17AVbdE3mlYeH1aprYd/nyZXbu3ElAQAD9+/fX2bzFdUcLDg5m1KhRzJgxg7CwMNq1a8e6deto3bq1ztYtC0mSauz3trRuc1D+neqa/BplZGRqH3KX3qIU559lhgzH+oVdCKIClWse0b+dJr95ZoXmNbsdg3fv91F6u/Dg4GJEh4pFrqmUIqZmxtfQ4Wmy0/M5+N1NmgfUw79r5ZuLaVGjJJtHtGIiFpS/AZ4+EUWRjRs3EhMTw8svv1ylJmq1AV37LcuWLSMoKIjFixfXCF8bKPCJZf9MRkZGV9SELr3Tn7nNeOamfUymAjzstqCw2Aclin1qtZqvF2xivJdQLrEPNJF+470Evl6wqdguWZIk8efuSE5uvl9E0KmpiBJcT5cYVl8od7rtt+ESgRMmY1vXhOSrT8Q+gMZ2Cmb4lR7pF5mtWXfVvSfr1TSxLyEhgb179+Lj40PfvvptmB0WFsbu3btp3749giAQFhbGhQsX9C725efn88MPPxAdHQ3UXEerLLEPSo70kySJvXv3cv78eaDmvkYZGRkZYyYt7z14vIWtbJiFskF2hedQNvEg6vePeHBoSYXFvqzUPPZ+eY2oaxXvBFxbENUSp7eGo84XcW9c/gYmpfGkUUfNEPsAjh07RmRkJMOHDzdase/u3buEhISQl5enc79l4cKF5OXlGdzXTk9PZ8OGDSQlJSEItSNQQkZGxrjQq+AnSdKG8tz0aYMxUmfOVISs8gVFmpiY8PonEwmJlriSWj5x7kqqxJZoidc/mVhsl6x7Fx4ReSUFZw/rGn/iUqvVfLVgE8PcFCxuZUq/eibMKEe67ap7IhYW1pjbiWxeuZ3Zvk/EPi1liX6nH4k85wQqCb65L3I4TuSbezVH7MvLy2PLli1YWloybtw4FIrS/xxYWlpWquZeWFhYQb2+6hT64IkQdv/+fZRKpd7XqyyliX3aotNaihP9Ll26xIULF8jIyKguk2VkZGRkniFj0iOij4WS0yGVmJ3nkCzLbuAl5BU9Nykb1Ue0r1gqrlolcmprOGqlmjpuxlsf7PKRGB5FZ9FphDf2LlVvFFcTG3XcunWLU6dO0b59e9q0aWNoc/RCamoq27dvJykpqUz/s7IYuhmeWq1m69atxMTE1JoACRkZGePDuGP+jRS7ne549whAkVq+E9msob0JsbXmsytimaJfWem8yQ+zuPjrA9wb2dO8h1ul7K9OTExMeOOTifya8ETga2KnKFH0u50h8t09EVFQ0Ll7F35Y9QOvFCP2adGKft/dF7mRLpKt0jT2uJkhkSHCVQk8e4PnADiYIrIwuGaIfaARw+rWrcvYsWOxtS17VzsvLw+oWLMNQwl9Ws6fP8+VK1fo06cPDRo0qLZ1K4JKpSIoKIixY8cWG9m3ePHiYkW/sWPHEhQUxIMHD9i/fz8NGjSgV69e1WS1jIyMjExx5HRPJurPk6hd88sc67D6ED5t52Eak1TldcMOxZAck02nkT7YOVddCKuJRF9P4daZBBp3qot3S6cqz/ekUUfPGtWow8LCgsaNGzNkyBBDm6IXVCoVW7duRRRFxo8fj5mZmaFN0gtHjhwhOjqaESNG4OLiYmhzZGRk/qbo/ewmCIICGAg0BJwomnwqSZK0VN92GBv5/pmIDqpyjTWNfsTgfJFtIoy9IvLPVsXX8itL7MvLUfHHlnAsbc3oMtq3xkf3adG+ls/nb+IVP43gpxH9YPV9kZcbaB7Tin1KoPeAnvx+5FipYp+WxnYKZvrByrsiasDWDszqgEsXsLAHDx93Zr85meG+72JjWjM6GUuShKWlJS+88EKFjrt48SJhYWHMmDGD9u3b07ZtW9auXUvbtm2LjLWwsCgQ+qpT5NMSExPDwYMHadSoET169Kj29cuLqakpixcvZtGiRaxataqI6BcUFFRE8Fu1ahXbtm0jKCiI7du3Y21tzZgxY/S2Sy4jIyMjUwHK4R7ZbzxGvVdWIEgSXr3eJfq3D1F51a3UcpFXk7lzLhH/Lq54NasZfoY+UKtEXH1taTtQN00PnjTqqBlNFLR17Hx9ffH19TW0OXrj0KFDxMTEMH78eJycqi7c1kSuX7/OmTNn6NSpk9F2V5aRkakd6FXwEwShLbAN8KVk90cCZMGvAmQHJBO3NqxcDiVATs+WPDgYTI+xn/DuuHYEffdbkQYe5WnUkZ2WjyBAt3F+WFjXnJ3Q8lCW6DegHhyM04h985dPYMV7PzPItWyxT0tjOwVD3eFwqojbY22pYaOGDB06lPa9G9HArDc2GN4JV6lUxMbGcvjwYcaNG4e9vX2F59B22S1L+NN3x9+yuHjxIra2towePbrGi9PaqM85c+YAFBL9ihP7tI07Ro4cyc6dO5k2bRo2NhWr9SQjIyMjYzhEG0swUYBKjehoi2hX+TTcjKQ86nrb0qZ/zRCu9IVva2d8Wjnp5JyuRomEiCeddWCZbti3bx82Njb07t27xvstlSUrK4tr167RtWtXmjVrZmhz9IIkSZw7dw4PDw8GDhxoaHNkZGT+5ui7S++fQFNgAXAKSC1unCRJkXozopZTXBe4m+rdlUrGFrLzkKwtinTtLY/Yp0VUSyhMaq8Tsn7F5sei35POubczRH6KEElXw4x/TOH1j8fw0+oQzbhyRPgB3MkQWRUhMuDltgROHUajRo1wdnYmD01NtRaMN3i6yLJlywgODmbatGm0bt2aV155BUvL8qf9FNd1FygQ/sLCwkqN+KtuJEkiPT0dBwfdFPWuDirTpTc1NRVHR8dqtlRGRubvhNyltyjF+mfS7grNYbP7LM4fhvDgQBCik12V7Knt/llJSJLEhf3ROHva4NfGWWfzpvEAbwJwo/ozEIojLCyMXbt2ERAQQP/+/Q1tjl7JyMjA2tq62DrhxoJKpSI3N7dcJXNkZGRkKkt5/DN9KxCtgKWSJK3U8zp/L8rQnxSpmUhmpkg2hcUcydoCeBLt9uF8TffeLdFSqWJffHgGcffSadW3fq13JouL9APIkmDytJdo4tes6DhfShX97mSIfBchMv+Z91BTGyaZZoyuEWLfokWLGDx4MD///DNubm4VEvtKonfv3vTu3ZuLFy/y888/M2nSJAICAsjKytKB1ZXj8uXL+Pn5YW9vX6vEPig90u9pse+ll14iMjISHx8fWeyTkZGRqaVkjehM1vCOUIlyDJIkcelgDJ7NHHH1sa31/llJ3L+UxN3zj7Cw0Z0fpWnU4VBjGnXEx8ezb98+fH196du3r6HN0Qv5+fmEhYXRsWNH7OyqJm7XVCRJ4vz587Rq1QpLS0tZ7JORkakR6FuFeABk63kNmacQMrLxHByMZGZKzL5FJXZ50wpTXy/YVHoab3o+p7eFY2FlSvOebijMa/dunFqtLiTmDXaFXxNEpsyegrdbQwLGN8DMQvMayyP6acW+N595D9VqNbkmyTjXgNowWrHvvffew8zMjC5duhAcHIylpWWVG4j07t2bUaNGFTTxaNeuHevWrdOR5RXn/v377Nq1i/bt2zN8+HCD2VEVihP9nhb73nzzTVatWoWVlRWvvvqqXLdPRkZGphZgcf4OeW38wOwZ17uSf8Pvnn/E7bMJWFib4OpjnMJCSmw2F/ZH49bQjhY93XUyp4RELin4M9Lgm7GgaYi2ZcsWLC0tGTt2rFGe0yVJYs+ePVy7dg1PT0/q169fpflUKpXBO/AWx6VLl9i/fz8qlYquXbsa2hwZGRkZQP9der8EpguCYK7ndWQAVGo8hy/F6uxtrP+4juegIFCpSxw+7bUXOZu6o0SxT1RLnN4WjjpfJGC8H2a1XOxbv2IznRxHs37FZqa99iJvLp/I4TSRGf+cgodLQzoM98axXuEaOtpx30WI3Hmmo29JYp92nZ+/32nw2jBase/rr7+mfv36tG3blg8++IBvvvmGRYsWsWzZskrPHRYWxu7duw3ahfdp0tPT2b59O87OzrW+ZsrChQtZsmQJc+bMITAwsEDse++999i2bRu5ublGe2EgIyMjY2xYH72Md/cF1A/8FCFPWeX5kmKyuPTrA9wb29O8h5sOLKx55Oeq+CPkPhY2pnQZ7YtCoZsIxmwe4UQjHPDUyXxVJTo6mvT0dMaNG2e0EWHnz5/n6tWr9O7du8pi37Jly7CwsKiS/6oPYmNj2b9/Pw0bNqRz55pTF1JGRkZGr9sjkiR9JQiCFXBdEISNQDRQRIGSJGmjPu3422BqQubIzlj/fg2A9Cl9wLR0ka60+hmXj8bwKCqLrmN9cahb+WLSNYH1KzazfP4mBtVVsHz+JkAj5r0wdTS/fnMLj6YOJdaGKS7SrzSxT7vOV3P34BD/ZZWj6CrLs/Xg8vPzEQQBQRAKUkW1UWQVsfHpmn3t2rUzWBfep1Gr1WzdupX8/HymTp2KuXnt32PQfiZBQUEFNfuOHDlCREQEo0aNol69ega2UEZGRkamLMzuPMRjxDIUeUrsdp1F/Y/viF/1WqXny8tWcSokHEs7M7qM9jXa5g4PbqaRk6ak77TGWNqY6WROERVq8vCki07m0wWNGjXizTffNNrGWzExMfz66680btyYHj16VGkurV87duxYFi1aBFTMf9UXubm5hISEYGNjw+jRo+XNWBkZmRqFvrv0egHjgQZAcAnDJEAW/HREylujkKzMEXLySZ07tNLzZKXlc+fPRBp3rItPSycdWlj9aEW4l300DTi8rCkk+g2a3bTMrsNPi36DXOFgQsli39PrLA36AKh+h0TrFK1YsYKmTZuiVCqLiGCVEf2eTt2tCUKfltOnTxMdHc3YsWOpW7euoc3RGQsXLmTBggWYmpoSHR3NqVOnaN++PW3atDG0aTIyMjIy5UDZyJ3U14bi9J8dKD1dSF4wtkrz3T2fSG6mkn7Tm2BhVfPSGnVFg7bO1PW2xc7JQmdzZhJPfTphieHr+0ZHR5ORkUHz5s2NVuxTq9Vs27YNOzs7Ro8eXSVx+tlNbG2pEzC86Hfw4EHS0tKYNm2a0X6WMjIytRd9ewrfA62B/1JKl14Z3ZI6p/JCnxYbB3MGzvLHzrnqjR0MyfoVm/ls3ibsngpkbGyn4GUf+OKtzUgSTH+99M7EWrTi3lcLNpUp9mnXmdWg+kW/p50iLy8vjh8/Tv369WncuHGRsRUR/SwsLApSd2uK0KelU6dO2NnZ0bJlS0ObonO0dWo8PT0ZPny4LPbJyMjI1CYEgcRPp6FydyJzWAeUflVLwW3eww33Rg441S++RnNtJzEqE4WJgLOHjU7FPiXZmGFFPVrpbM7KkpWVRUhICKampjRp0qRG1qPTBSYmJowaNQpTU1OsrCqfKfSs2AeV27TWF3369KFx48Z4eXkZzAYZGRmZkhAkSdLf5IKQCXwpSdJ7elvEyBEEocgHdFParfmPKGK7PZTMsd1ARykdKqVI/P10PPwddTKfIdGKfWZA33oKfksQmeb7RJC7kyGyJlLizeUTSqxjWBxqtbpQKnRxYt/T3MkQ+f6+yAeLl+rdIVGpVFhYWDBmzBiCgoLYtm0bXbp0YdCgQQQHB3P8+HGOHz9e5LjAwEC2b99OXl5erXI809PTsbKywsxMN+k+NRGVSkVWVlat6zgsIyNjPBQXmSNJknHmkpaTUv0zPfAoOhMre3NsHGp/yYqSyMlUcnDVDSysTRn8ajOdpiunEkVjhuBEA53NWRlEUeSnn34iMjKSmTNn4u6um2YkNY3k5GScnKqeIVSc2Pc0Tzc1q27RLyUlBQcHBzmFV0ZGxmCUxz/T91+oVOChntf4eyJJuM77Ho/AT3F9YxWIYtnHlIML+6M5ufk+aYk5OpnPUDwt9k3zU9C3noKpvgrWP9V8o7Gdgpk+Asvnb2L9is3lnrsiYp92nVkNFCwN+kDvRYZNTU1ZvHgxO3bsYPny5Xh5edG/f38AgoOD6d27d5FjVq1axbZt21i8eHGtEvuUSiWbNm1i8+bN6HPjwtAcOHCA7777juxsueG5jIyMTE3HJDYZ+3VHdDpndno+Jzff58yOCJ3OW5MQRYnTW8NR5qrpOtZPp2JfDsk44Ekd/HQ2Z2U5ceIE9+/fZ+jQoUYr9t2/f5+vv/6aa9euVWmessQ+0ET66aIRXUXJyMhgzZo1HDhwoNrWlJGRkakM+r663wC8IAjCCsmYr8gNgP2Px6nz9T4A6qzYT+5zjUif3r9Kc96/9IjwsCRa9HSr1U06nhX7Gj0W4hrZKZjqC+sjRKb5aoQ4bXrv0zX9KrJOWWKflupM733//fd58OABGzdupG3btoUEyuDg4EJjDbkzWhUkSWL//v3Ex8czadIkoy1afvnyZS5evEhAQADW1saZviUjIyNjLCiSM/AaGITF1UjMHjwiaeELVc7AENUaIUytFOkwzHhTBq8ce0hiZCadR/ng6Ko7H1RETT6ZNGE4Aob1FRISEvj9999p27Yt7dq1M6gt+iI9PZ1t27bh4uJSbCmZ8lIesU9Ldaf3iqLItm3byM/Pp2PHjnpdS0ZGRqaq6Dultz/wKZCDpp5fFMV36f1db0bUckpMGclX4v7S59j/cpL0F3oQ+9NbUErH3bJIicvmyJpbuHjb0mtSIxSK2imgqNVqnrMdDUqY8ZTY9zR3M0Q2RBRO7z0WL3I0XeTP1B2ldi5+ep1OjqPpZ6+JHiwvx+JFDsZLZObm6zWaLiUlhf/+9798/PHHNTINoqpcvHiRPXv20LNnT/r06WNoc/RCfHw8q1evxtPTkylTpsgpIzIyMgZDTuktSnH+WfLcodRZuR8AyURBxOUvyW/hXaV1Lh18wK0zCXQd61vrm6iVREJkJsfW36bhcy50HF619+tZMojFlRZ4E6DTeSvL9evXady4sVGWIlGr1axfv56EhARmzZqFi4tLpeZ5ujxNSEhIkeeDg4OLbGBD9ZWnOXLkCKdOnWL06NE1rqa1jIzM34vy+Gf6jvA79NT/u6HpyPs0wuPHKq9U/V0xNyP2p7fI6dGc1FkDqyT2qVUip7aEY25lStcxvrVW7AP44dsQJBXMLEHsg6KRfgAHE0XmL59YLrEPNGm9b3wykeXzN+FlTZkRfqCp5fdrnKaWn74ckbi4OOrVq0edOnX48MMPsbKyKtjxfFr0q81iX2xsLPv376dBgwb06tXL0Obohby8PLZs2YKlpSVjx46VxT4ZGRmZWkDiv6dhfuch1kcuE7vhzSqLfQ9vp3HrTAKNO9Y1WrEPwMXLhvZDPGnYvnICUUmoyENAgTvtdTpvhe1QqUhJSaFu3bo0b97coLbok8OHD/PgwQPGjh1babEPnpSnWbRoEatWrSozwg+elKdZsmSJXsW+W7ducerUKZ577jlZ7JORkakV6Fvwm67n+f/emJiQ+tqwqk9jqqBlH3dsHc2xtKm9O47aFNuZviWLfVq0ot+6cBEl8M8vJlYonReepP9+Pn8TM31KF/2qo3FHTEwM69ato3fv3nTv3h14ktbwtOhXm8U+0HQLbtCgASNHjjRaIUwQBDw8PHjuueeIsj1EFvEGs8WGejRnjMHWrwzr169n+vTphIeH4+vrC4Cvry+9e/dm/fr1BeP27NnDe++9x507d8jLyyMlJYVRo0YBFNvcpjJMmzaN48ePExERUeo4QRB4//33y6xBpK3DqSv7nmbatGkcOXKEBw8elDjm+PHj9OnTh8OHDxfUB9UHwcHBLF68uMr1OX19fYmMjCxzXFXW2bBhA7t37+b8+fNERUUxderUQt+zskhKSmLJkiXs2bOH2NhY3NzcGDZsGEFBQdStW7fQ2O+//57PPvus4Ls9f/58Xn311UJjevfujUql4o8//ij0+AcfaOrIlud7JlM5JBtLYvZ8gPWxv8ga8lyV56vrY0uLnm4071m1zr41FbVKRJmrxtLWjCadXHU+fxYJ+NEXMwxbpubQoUNcunSJN954A3t7e4Paok9cXV3p2rUrLVu2rPJcxfmvWgxZnsbGxoamTZsyePBgva4jIyMjoyv0KvhJkrRBn/PLVJ28bBUW1qb4tqrdO8dqtZqvFmxiQN2yxT4tjewU9K0HR1NEprwaWKl1p742HqVFOl+9updZfsWLftUh9mVnZxMSEoKtrS3t2xfeyX7aaTpy5EjBDmhtE/u0F+ROTk5MnDjRwNboD0mSMDc3Z8wYjch2jv3Y42kwe9IpWfypTezYsaPQhZZKpWLSpEl069aNFStWYG5ujp2dHStXrjSglTK6ZseOHeTl5RXcnzt3Lmq1mlWrVulsjR9//JHExEQGDBhQbPpZaUiSxIgRI7h9+zZLliyhWbNmXL9+nQ8++IALFy5w+vTpgnSN77//ntmzZ/Puu+/Sv39/jh49yty5c5EkqeCiuCTefvtt/vvf/xYIfjL6Q7Iwq7LYp1JqmouZWZjQqk99XZhVI7lwIJqHt9MZ+lpzzC11m+yTRzrWuOBM5evI6YIrV65w7tw5unTpYrRinyRJCIJQxP+sKqWJflqqS+zTvkZPT09eeOEFva0jIyMjo2tqT0tOGZ2TEJnB7z/do/uLDXBrULudkKdTbL2tKZfodzdD5HCCyPzPy5/K+yzZPGLuy/NxjOvM0qAPmNWgsOhXHWKfJEns2LGDjIwMZsyYUWxzB+3aQUFBtVLsAwgNDeXhw4eMGjWqVnUTrgjR0dEcOHCA8ePH4+joaGhzjIpnC6THxMSQkZHB+PHj6dmzZ8Hjxpxu9Xfk2c/d3t4elUpFly5ddLbGwYMHC6KNf/311wode+fOHU6fPs2qVat45ZVXAE2EnkKhYM6cOdy+fRt/f39UKhXvv/8+U6ZM4cMPPwSgT58+PHz4kA8++ICXX3652JpgkiQxb948vvrqKz777DPeeuutKr5aGX0jSRLn90WRGp/DgJn+mJgaZyR7eFgS9y8m0ax7PZ2LfRISuaTSjLEoDFg1KDExkT179uDt7a3XiGhDolQq2bhxI126dKFFixY6n7800a86I/v27t2LhYUFAwYMMNpGcTIyMsaJXrwIQRBMBUEYIgjCBEEQ6j/1eF9BEH4QBGGvIAgLBUGo3SqTgRCycqs8R06mktNbw7GyM8PZw0YHVhmeaa+9yPzlE1kTKXI3Qyx17N0MkTURGrGvoqm8WtQoEVHjQScWLlzIB4uX8v19kTuP164OsQ/g5MmT3L17l8GDB+Ph4VHiuIULF5KXl1crxb7IyEiOHDmCJEmVFmdrOllZWWzdupWcnBwsLS0NbU6VCQ4ORhAEbt68yaBBg7CxscHb25t169YB8MMPP9C0aVNsbW3p06cP9+7dK3S8Uqlk4cKF+Pr6Ym5ujq+vLwsXLkSpVBYad//+fYYNG4a1tTV169Zl3rx5hSK6tPj6+jJt2rQC27SpvjNnzkQQhIJU2d69exf8X8ujR4+YM2cOHh4eWFhY0LRpU7777rsiaxw9epT27dtjaWlJw4YNKxxFJkkSH374IZ6enlhZWdGzZ0/CwsJKPSY3N5f58+fTsmVLbG1tcXNz4/nnn+fmzZtFxoaHhzNlyhTc3NwKUuPnzZtX6vzr1q3DzMyMTz75pNDjaWlpTJs2jTp16mBvb8+kSZNISkoqNCY9PZ3XX3+d+vXrY2Fhgb+/P8uXLy+SPnvp0iV69OiBpaUlHh4eLF26tMiYVq1aMXr06CL2HT9+HEEQOHjwYKmvQ59UpbRAfn4+QJHIH63gL4qa80loaCiJiYlMnjy50LgpU6aQlJRUJH0XNN+nV199la+//pqvv/5aFvtqCfcvJRFxORmPJg5GK/alxudwfl8Urr62eolgzCIRZ/yxw3Cp0Pn5+WzZsgVzc3PGjRtnlL6LJEns27ePBw8eYGFhobd1Fi5cyJIlS5gzZ07BebU6xb7Lly9z8eJFTExMZLFPRkam1qHzMBlBEOyA34B2aJpyZAuC8DzgBIQAuY/XHQpMEAShsyRJmbq2w5jxtx0PPO7WWwlEUSJ0WzjKXDW9JzfGzMJ4nBCteLf8cV29krr0VlXsA8giHk+6YIEt8GQXcmnQBwx2o6BBh74dEU9PTzp16kSHDh3KHFsbI+MyMzPZunUrTk5OjBgxwiidLVEU2b59O1lZWcycOdMoBD8tgYGBzJo1i//7v/9j5cqVzJgxgzt37nD8+HE++eQTlEol8+bNY+LEiZw9e7bguKlTp7Jlyxbee+89unfvTmhoKMuWLeP+/fts2rQJ0FxQDRgwgJycHFasWIGrqyurVq1i+/btpdr08ssv07JlSwIDA1m4cCHDhg0rMdUqPT2dgIAAcnJyCA4Oxs/Pj4MHDzJnzhzy8vJ44403ALhx4wZDhw6lQ4cObN68mby8PIKDg8nMzCz3hd7GjRvx9vbm66+/Ji8vj0WLFtGvXz/u3LmDk1PxZRfy8vLIyMhg4cKFuLu7k5yczMqVK+nSpQs3b97EzU1zwRseHk6nTp2wtrZm8eLFNG7cmOjoaA4dOlTsvAAff/wxQUFBfP/99wViqZY333yT/v378/PPP3Pnzh3ee+89Hj58yG+//QZovtPDhg3j4sWLLFmyhFatWrFv3z7eeustEhMT+eijjwCNmNq3b1/c3NzYsGEDFhYW/Oc//yEqKqrQenPmzGHevHk8fPiQ+vWfCASrVq3Cz8+PgQMHlus9Lg1JklCr1WWOEwRBZxfvLVq0oGfPnixdupRGjRrRtGlTrl+/zpIlSxgyZAjNmjUD4Nq1awBFamNpI2quX79eqGO5KIpMnz6dH374ge+//56ZM2dW2DZj/Furb5oKI4DK+2cpsdlc2B9NvQZ2tOjlrkvTagzKPDWnttzHzNKUrmP9dN4oTkSFhAoPOul03opiYmJCo0aNaNKkCXZ2dga1RV9cunSJy5cv07NnTxo1aqTXtQxVniY+Pp69e/fi6+tb6G+sjIyMjKGoqH+mj6v/t4BWwDtABPAh8CWQD4wHtj9e91VgOfBPYLEe7JApgSvHHpIQkUnnUT441jNsIWN9oBXxvnhrM9O9xUKin67EPiXZmGGNK4UvvrSOx7LgRXoX+0RRRKFQ0KBBAxo0aKC3dQyJKIps27aN3NxcJk+erNcdZENy4sQJ7t+/z/PPP4+7u3Fd5L399tu89NJLAHTo0IE9e/awatUqwsPDC0S22NhY5s2bR2RkJD4+Ply9epWff/6ZoKCgguLcAwcOxMTEhA8++IAFCxbQunVrNmzYwP379wkNDS1I0RwyZAitWrUq1SZPT0/atm0LQMOGDUtN7/ziiy+IjIzkypUrNG6sqQXVv39/UlNTWbx4MXPmzMHU1JRly5ZhZ2fHoUOHsLHRRE1369aNhg0bFhKoSiMnJ6fQ8Z07d6Zx48YsX76cpUuXFnuMg4MDq1evLrivVqsZNGgQ9erV4+eff2b+/PmAJp0/JyeHy5cvF7Jn6tSpReYURZF58+axdu1aduzYwbBhRZtDtWjRoiBac/DgwTg5OTF58mSOHj1Kv3792L9/P3/88Qfr1q0rEAsHDhxIVlZWQWqpi4sLy5cvJysri4MHD+LtreloOmDAAHx8fAqtN2XKFBYsWMCaNWv44IMPAI1YuH37dhYvXqwTcerEiRPluqDr1auXzpqmCILA/v37mTJlCh07dix4fNiwYYXqASYnJwNQp06dQsdrhWDt81pCQ0MJDQ3lgw8+qJTYJ1P95Oeq+CPkPhbWpnQd46tzIaymIEkS9q6W+HdxxcpW943iMkmgPh2wxHBJRKIoYmJiwqBBgwxmg76JjY1l//79NGjQgF69elXLmtVdniYvL48tW7ZgaWnJ2LFjjbZRnIyMjHGjj79cgcB6SZL+K0nSVjQCYAvgmCRJWyVJEiVJypck6UtgDzBKDzYYNTel3ZXePZYkCUmChu1d8GvjrGPLagaSJDHttReZ978XC6X33s0QWRNZtthXngiPLB7hTQ9MKOqsLly4kMzcfL06Imq1mo0bN3Lq1Cm9rVETSE5OJj4+nuHDh1OvXj1Dm6MX1Go1d+7coU2bNkXqjRkDQ4YMKfh/nTp1cHV1LVK8vGnTpoCmhiHA77//DlAkfVF7/8SJE4BG1PDy8iok2CkUCsaPH68z+3/99Vc6d+6Mn58fKpWq4DZo0CCSkpK4fv16gS1Dhw4tEOsAvLy8CAgIKPdazx7v6+tLly5dCA0NLfW4LVu20LlzZxwdHTE1NcXGxobMzExu3bpVMObQoUMMHz68TPFRpVLx4osvsmnTJo4cOVKs2AcUeY8DAwNRKBQFtv7+++8oFAomTJhQaNzkyZPJz88vGKcVa7ViH2i6ID7//POFjrOzs2Py5MmsXr26IM113bp1SJLE9OnTS31N5eW5557j3LlzZd4q0/BDFMVC3x/tawCYNWsWZ86c4dtvv+XEiRN8++23nD9/nnHjxhWM06Y4l1fY9Pf3p1GjRnz99ddcunSpwvZq19TeZMpHVfwzZZ6IhZUpAYF+WNroXgirCUiShLmlKT1eaIirj+6j3pTkYIoF9Sh900efxMTEsGLFChISEgxmQ3Vw584dbGxsGDNmTLUKYdVZnubhw4dkZmYybtw4bG1t9b6ejIyMTHmoqH+mjwg/H+CLp+5ffvzv6WLGngCW6MEGmRIQBIG2AzyM1oFXq0VO/HSPRs+5FErvHVAXDieKzF9euti3fsVmvlqwiTc+KXlcDinY40Ed/EqcR9+ps0eOHCEyMrJcaby1GRcXF9544w2srIwvElWLiYlJgWBhjCl0z0YkmZubF/sYaOrRwZNopWejHbXpqdrnY2NjixWCdSkOJyQkcPfu3WIbIgAFdetKsyU8PLxca5V0vDadszj27NnDCy+8wNSpUwkKCsLFxQWFQsHQoUML3k+tnZ6eZXd7Tk9PZ9++ffTt25dOnUpOiXvWVu3nGhMTA2g+IycnpyJRucV9hs+mqRY3P2g67H7zzTfs37+fYcOG8d133zF69Gidfd62trYFkZ+lUZnf6YwZM9iwYUPB/alTp7J+/Xr27dvHzz//zJEjR+jXrx8APXv2pEGDBgwcOJA9e/YwcuTIQpF8T/8utO/jsynfLi4ubNq0iZ49ezJw4EB+++23Yt9nmZqDjYM5A172N8rzAEBiVCaXj8TQbZwf1vbmelkji0QaMQhT9DN/WWRnZxdE5hprGq+Wnj170rFjR4P4Z9VVnsbPz48333zTqH1QGRkZ40cfWzIiFGqJlfP437RixmYidwquFtQqkd9/vkdilKZcorE6lGGHYkgIz0B4/M3WNvL4Lb18Yt/y+Zvoba9g+fxNrF+xucgYCZF8MvEmAAHDvIc3btzgzJkzdOzY0Wgv4FJSUjh16hSSJBmto6VSqTh27Bh5eXmYmZmVKCj9HdGKF3FxcYUe1953dtZEJ7u7uxMfH1/k+OIeqyzOzs5069atxGgvreiuC1tKOr60ZjybN2+mUaNGrF+/nqFDh9KpUyfatGlTJMXTxcWlQIwrDScnJ/bt28dvv/3GhAkTUKlU5bI1Pz+flJSUAludnJxITk4uaEqhpSqfYcuWLenRowerVq3i6NGj3L17t1DHxqpy4sSJgt9iaTetMFcRgoODC31vtKnqV65cASiUzgsUiK03btwAntTqe1b81UaYFtdd2tvbm2PHjmFpaUn//v0LRXzK1BwSIjI4vTUcZZ7aaH2z3CxNo7jcTBWm5vqJBsslFTvcqINhSpxIksSOHTvIzMxk/PjxRuu7XLhwgYcPHwIY7WuMiori8mVNvIqxvkYZGZm/D/o46z4EvJ66nwm8ARRtGaiJBkzUgw0yz3DxwAMe3k4jP6f4izdjIPJqMnf+TMS/iytezZ5EEE177UX+TN1RLrFvurcJvV1NmO5tUqzol0UirrTAhrp6ex2lkZSUxK5du/Dw8NBJkfqaiEqlIiQkhD/++IOMjAxDm6M3Dh06xMmTJ4mMjDS0KTUObT2gzZsL//5++uknQBNZANC1a1eio6M5c+ZMwRhRFNmyZYvObBk8eDA3b97E29ubDh06FLlpozi6du3K/v37ycrKKjg2Ojq6Qmn3zx4fERHBmTNn6Nq1a4nHZGdnF4l2+OGHH4qUJhg4cCB79+4lNja2TDt69+7NgQMHOHDgAC+++GKxot+z73FISAiiKBbY2qtXL0RRLFSHDjSfobm5eUEadteuXTlz5kxBOjdoOlbv2bOnWNvmzp3LgQMHCA4OpkmTJvTt27fM11Ne9JnS6+vrW+h7o+0SrY14/PPPPwuN1zaw0QqoXbt2xcXFpeA3oOXHH3/EycmpxNTxBg0acPToUQRBoF+/fkW6YcsYlpwMJae3hZMSl21oU/SGplFcBHnZKgLG+2Fuqft9fgmRXNLxpjsKvVzalM3Jkye5e/cugwcPLnfd1tpGREQE+/btK9Rgy9jIyspi69atnDhxAqVSaWhzZGRkZKqMPqLrLgAFVyeSJOUBK0oYOwCoXHEZmXITfjmJexcf0SygHh7+joY2Ry+kJeZwbncULl42tOlfNBqmtI6KT4t9DR83+Ghop2C6tyYdGDSioRolEiLuPKefF1EOHj58iJmZGePGjauVHXfLw4EDB4iNjeXFF18ssXNqbefq1aucO3eOrl270qRJE0ObU+No0aIFEyZMIDg4GJVKRbdu3QgNDWXp0qVMmDCB1q1bA5q0yE8++YQxY8bw0Ucf4erqyrfffkt6errObJk/fz6//PILPXr0YP78+fj7+5OVlcXNmzc5efIku3btAjR1hUJCQhg4cCBvv/02+fn5BAUFVSjd1MrKquD4vLw8goKCsLe3L2i8URyDBw9m586dzJ8/n+HDh3PhwgW+/PJLHB0dC41bvHgx+/bto1u3brz33ns0atSImJgYfv31V3788cci8/bo0YNff/2VIUOG8MILL7B58+ZCUajXrl1j+vTpvPjii9y+fZv333+fXr16FUS/DRkyhO7du/Pqq6+SmJhIixYt2L9/P6tXr+bdd9/FxcWl4P1duXIlAwcOJDg4uKBLb0lRFWPHjuXNN9/k1KlTfPbZZ+V+b8uDnZ1dpcokXL9+vSDSLicnh8jISLZu3QpohM+6dUveIBozZgzvv/8+L730Eh988AFNmzbl5s2bLF68GC8vL0aPHg2AmZkZS5cuZe7cuXh4eNC/f3+OHTvG2rVr+eqrrwrS4oujSZMmHD16lN69e9O3b19+//33Ik1RZKofUZQ4vS0cZa6a3lMaY2ahm87PNY1rJ2KJD8+g4/Pe1HGz1ssaWSRSl6bYYphav5IkERUVRatWrXjuOcP5iPokIyODrVu34uTkxNChQw1tjl7QNorLyclh5syZcuaFjIyMUaAPxeBdKPuMKwiCK3Ad2KYHG2Qekxqfw/m9UdT1saVVX+PccQR4eDsNEzMF3cb5oTApf0pMcWKflmdFvzGvdceTrlhguMK9rVq1wt/fv9SLu9rM5cuXuXjxIgEBAfj7+xvaHL2QmJjI7t278fLyqlRq4N+FDRs20KBBA9auXcuyZcuoX78+77zzDkFBQQVjzM3NOXz4MK+//jpz587FxsaGiRMnMmzYMF599VWd2OHg4MDp06dZsmQJn376KTExMTg6OuLv78/YsWMLxjVr1oz9+/fz9ttv88ILL+Dh4cE777xDaGhouTu6vvTSS9jY2PD666/z6NEjOnbsyObNm4vUZ3uaWbNmER0dzdq1a1m1ahUdO3Zkz549BUKRFl9fX86ePcvChQt59913ycjIwMPDg5EjR5Y4d0BAAAcPHmTw4MEEBgYWiur74osv2L17Ny+88AJqtZrnn3+eL7/8suB5hULBvn37eO+99/j0009JSkrC19eX//3vf7z55psF41xcXDh69Cjz5s1j6tSpODs78+qrr6JSqViypGiJXzMzM0aOHMmGDRuK7TBsCLZs2cLixYsL7h8/frzgM//tt9/o3bt3icfa29tz5swZgoOD+fe//01sbCzu7u48//zzBAcHFyoU/+qrryIIAp999hn/+c9/8Pb25uuvv2bu3Lll2ti8eXMOHz5M37596devH7///rvRRiHVFq4ce0hiZCadR/ng6GqcaYNqlciDG6n4tXWmYXsXvawhokJEhQcl1xzVN4IgMHHiRNRq40zL1gpheXl5vPTSS0VqsxoLJ06cIDw8nBEjRhREX8vIyMjUdgRjbd5gLAiCUOQDqkgHuPP7onhwM5VBs5thZau7nSq1Wl1q1JwhyM1SVqizXWli39PcyxBZF6XmH1+N4ePZm4vtzKtvLl++jLm5Oc2aNav2tauLnJwcPv/8c+rXr8+UKVOqtetbdbJ+/XoePXrEK6+8Uq4IxutsJwvd1aSrKDbUozljDLa+jMzTqFQqGjVqRI8ePfjhhx8Mbc7fhuJEDEmSjE/ZqABV8c/yclTs//o6ns0c6Tjcu+wDajHKfI0IZmqmn3N6OjF40In6tNfL/KWhVqs5fPgwAQEBRt2k4/z58+zbt49Ro0bRpk0bQ5ujFxITE1m5ciVt27YtdSNMRkZGpiZRHv9MFvxqOFUV/CRJIis1H9s6utuNK08n2+oi4koy9s6WONWvWJpIecU+LfcyRNZGqPkgeCkLFy6srLmVIjY2ljVr1uDj48PkyZONcvdYS2RkJM7OzoWiWoyN9PR00tPTy9UxVUZGRkN6ejpXr15l06ZNfPPNN1y4cKFcHXVldIMs+BWlqv5Zdno+FtammJga3+aWWiVy41Q8TbvV05vQB6AkByXZtGKiQTrzHjx4kDNnzhAYGFhs4xxjQRRFbt26ZdSbzgC3b9/Gz89PTuWVkZGpNZTHPzOYlyEIgpsgCGsFQVhjKBuMmahrKWSn5yMIgs7FvrI62VYXyQ+z+HNXJNdPll2E/mnUajVfLdhE/7qKcol9oEnvHVBPwbLgRSV2rdQHubm5hISEYG1tzZgxY4xS7JMkqaB7qI+Pj9GKfQ8fPkSSJOzt7WWxT0amgmhT/UNCQvjiiy9ksU+mVqJWidw9n4gkSVjbmxul2AcQdiiGq8djSYjQb+OtbB7hQw+DiH3Xr1/nzJkzdOrUyWjFvtTUVDIzM1EoFEYr9qlUqoLu8U2aNJHFPhkZGaPDkJ6GAzDt8U1GhzyKziR0ezhXfnuo03mfRMUp6OOqYLq34US/vBwVf2wJx9LWjI4jKlZ83MTEhDc+mciRRJF7GWK5jrmXIXI4TmRh8JJqa5YhSRI7d+4kLS2NwMBAbGxsqmXd6ubs2bOsXr3aqLvVxsTEsHbtWn7//XdDmyIjUyvp3bs3kiQRHx/P66+/bmhzZGQqxcUDDzi/L5qkB1llD66lRF5J5s65RPy7ulK/sYPe1sklFVvq4Yif3tYoiaSkJHbt2oWHhwcDBw6s9vWrA5VKxS+//MLGjRsx5mywQ4cOsXr1alJTUw1tioyMjIxeMKTgdw/wAxoY0AajIzdLyamt4Vjbm9NukO6iiJ4W+xo9joprZFd9op9arS74vyRJnNkRQW6GkoBAPyysKi7ATXvtReYvn8i6KHWZot+9DJG14Wo+WFy96bx3797l1q1bDBgwAC8vr2pbtzqJjo7m8OHD+Pv74+1tnHWMsrOzCQkJwdbWlk6dDFdUXEZGRkbGcIRfTuLexUc0614PFy/jjGRPS8zh3J4oXLxsaNPPQ2/rSIjkkYE33VEY4FLm8OHDmJiYEBgYWOPqWeuKAwcOEBcXR79+/YwyuwTgypUrnDt3jk6dOhXpbC8jIyNjLBhM8JMkSSVJUqQkScYb1lPNiKJE6PYI8rJUdB/fAHNL3USiFSf2aakO0W/9is10chhdMH/E5WRi76TTbrAnzh6Vj3orj+hnKLEPoHHjxkyZMoXOnTtX67rVRVZWFiEhITg4ODBq1CijdCi1UZqZmZkEBgZiZWWcnRhlZGRkZEomNT6H83ujcPW1pVUf4+yOLEkS5/ZEYWKuoNs4PxQm+junZ5GIC02xpZ7e1iiNUaNGMWnSJBwc9BfBaEjCwsIKyij4+/sb2hy9kJiYyJ49e/D29qZfv36GNkdGRkZGb1RPbqJMtXDnbALx9zPo+Lw3ddwr1sSiJEoT+7RoRD9YPn8TgE4beWjX7+eiKJj/pTkvoDAR8G5Zp8rza23VvEYK1fS7lyGyLrL6xb7MzEyys7NxdXWlQQPjDICVJInt27eTnZ3NzJkzsbS0NLRJeuGPP/7gzp07DB06FA8P/UU7PEtMTAznz5/n1q1b5ObmYmlpib+/Px06dKhWO2RkZGT+7oiiROi2cMwsTek61g+Fwvg2t0BTOLzLaF9yM5VY2+uvpp6ICgk19emgtzVKIioqivr162NpaWm059L4+Hj27duHr68vffv2NbQ5eiE/P58tW7Zgbm7OuHHjjDZKU0ZGRgZkwc+oaNDeBYWpggbtnHUyX3nEPi36EP2060/1NqGhrQJPa0EvomJxot+9DJF10WreCwqqVrFPFEW2bdtGQkIC8+bNw9y8+gtRVxfNmjWjZcuWuLu7G9oUveHj40OXLl3o0EH/Fya5ubls2rSJlStXcuHChRLHPffcc8ydO5eJEycardAqIyMjU1NQKAQ6DNeUrLCyNc6GAClx2TjWs8K2joVOG8UVRxYJuPMcltjrdZ1niY2NZePGjXTo0IHBgwdX69rViZ2dHS1atKB///4oFMbZVMbU1JRmzZrh5+eHnZ2doc2RkZGR0SuCIQuxCoLQA+gjSdISgxlRwxEEocgHdFPaXeh+TqYSMwsTTM10d2JWq9V0chxNb3tNg47y8luCyPF0kT9Td1Rpx+xZsU/LvUyRDVFq5i+fqFPR7+k1+9dVcPSRyNvL5rHk7c91ukZZHDlyhFOnTjFq1CjatDMPc1cAAJmmSURBVGlTrWtXF2q12uh3U6v7NZ46dYrp06dz586dch/TuHFj1q1bR0BAgB4tk5GRMQaKK7kgSZJxhqqVk/L4Z5mpedg66lcAMzRJMVkcXXubVn3cadbdTa9rqcgjjzRaMQkzqm/DKjc3l++++w61Ws0rr7xilE3UJElCFEXZP5ORkZGpRZTHPzP01k1PIMjANtRq1GqRk5vvceKnuzrtovV0J9u75exkezdD5EiiyBufTNSL2AfQ0FbBVG8TvdQM1Nb0O54h8o/l4wl++386nb8sbt26xalTp2jfvr3Rin1paWl89dVXFRKmahtqtZqNGzdy/Pjxallv+fLl9OjRo8Lv6Z07d+jRowfLly/Xk2UyMjIyf18eRWey/6vrRPyVbGhT9EZetopTIeFY2pnR4DkXva+XRSJedKtWsU9bizctLY1x48YZpdgHcPbsWdavX09ubq6hTdEbMTExfPXVV8TGxhraFBkZGZlqQ07preWEHYwhOSabgEA/nTc9eDbVtbS03rsZIuuixCpH3pUm9mnRiH76qRk49bUXGDG7My1Mx1Vr57fU1FR27tyJm5sbQ4YMqbZ1qxOVSkVISAi5ubk4OTkZ2hy9ceTIEaKioujYsaPe11q+fDlvvfVWkccFwNsaPK0FrE0hWwUPsiWisuHpbQFJkgqOnz9/vt7tlZGRkfk7kJul5FRIONYO5tRvUr2pp9WFJEmc2RFBbqaS/jOaYGGl30uKfDKxxAFnmuh1nWcJDQ3l1q1bDB48GC8vr2pdu7qIiori8OHDNGnSBAsL44xIzc7OJiQkBEEQ5I68MjIyfyt0rmgIgrC2vDdgjK7X/zsReTWZO+cS8e/iilfzqjewKI5pr71I93GtWRtecqRfdYp9WvQV6ZdDEi6mjbGnervo2dnZ0b59e8aPH4+pqXHq8IcOHSImJoaRI0fi7KybOpM1jRs3bnDmzBk6depEy5Yt9brWqVOn+Oc//1nk8S7OAu81N2GevyljvUwY4m7CWC/N/feam9DFuejGwD//+U9Onz6tV3sNxfHjxxEEodoiLrVMmzYNX1/fMscJgkBwcLBO1oyIiEAQBFavXq2z+YKDg7l//36R53x9fZk8eXKl5g0ODkYQBFQqVVVN1Anr169HEAQiIiIMbYqMESCKEqHbI8jPUREw3g9zS+M8p18/GUfs3XTaDfLEqb7+o96yScab7iio3nTMxo0bExAQQKdOnap13eoiKyuLrVu34uDgwMiRI3UePFATkCSJHTt2kJmZSWBgIFZWVoY2SUZGRqba0IcXMg1NEEl5zxiGKyJYi0lLzOHc7ihcvGxo019/ncLWr9jMH1v/op2jwJpwkZl+hSP9dCX2qdVqvnpH0423LLFPS0NbBf1cJL56ZxNTXg2sck0OETVKcvGgc5XmqSj5+fmYm5szYMCAal23Orl69Srnzp2jS5cuNGvWzNDm6IWkpCR27dqFh4cHAwcO1Otaubm5TJ8+vVAav7kCpvoqaOZQ8u/H2UJgvLcJrRxENkSI5D/W8CVJYvr06Vy+fFlu5FHNhIaG4unpaWgziiUiIoLFixfTvXt3o+0YLiOja66diCX+fgadRnhTx83a0OboDWdPG5p0qkujDvpP5c0hGQc8caD6Iuzy8/MxMzOjbt269O/fv9rWrU5EUWT79u3k5OQwc+ZMoz3/nzx5krt37zJs2DDq16/eDX0ZGRkZQ6OPnMV4YB9gVY6b3KyjkigUAs5eNnQb54fCRPe7cfn5+Sx868OCiLsxXqYMclOw5qlIP63Y9/zrnZk4q2rBmiYmJrzx6USOPhK5l1m+moH3MkWOPhJ549Oq1QzUkkUC9WiFNdWXbnr58mVWrlxJampqta1pCB4+fIiXl5fROs0A8fHxmJubExhYdfG5LDZt2lSkZl9ZYt/TNHNQMNW38Njbt2+zadMmndlYHHl5eXqdvzbSpUuXGiv4ycjIVBxrB3MadXChQTv9C2GGQBQ1G01uDexpP8RL7xFhEiL5ZOFFN4RyxxJUDVEU2bRpE/v27auW9QxFVlYWaWlpDB06FDc3/TZcMRSSJPHw4UNatWrFc889Z2hzZGRkZKodfQh+54H2kiTllXUDlHpY3+iRJAk7Z0v6TGmMtb25zue/cf0645+fxp6vzxZKr+1R10Qj+t0X+S1BZG2EiGMz+OvOWf7xxhvcuH69Sutqm2ZsiFKXKfrpuluv+vFX0Z12VZ5LS1npavHx8ezdu5c6depgb2+cNX60DBw4kClTphh1Z7TmzZvzxhtv4ODgoPe1Vq5cWeh+F2eh3GKflmYOiiLpvc/OWxW0aZtXr15l0KBB2NraMn78eEBTS+edd97Bz88Pc3Nz/Pz8+PDDDxHFJ7/7zMxM3njjDby9vbGwsKBevXr079+fmzdvFoxJT0/n9ddfp379+lhYWODv78/y5ctLbWA0d+5c6tWrV+T3mZeXR506dXjzzTcLHnv06BFz5szBw8MDCwsLmjZtynfffVdkzqNHj9K+fXssLS1p2LAhq1atKvf79GxKr/Z9u3PnDsOGDcPW1hYfHx+WLFlS6P0pjfz8fN566y1cXV2xtrZm+PDhRdJVlUolCxcuxNfXF3Nzc3x9fVm4cCFKpeZv4fHjx+nTpw8AAwYMQBCEYlOjN2/eTLNmzbCxsaFDhw788ccf5X7tN27coE+fPlhbW+Pu7s6iRYsKvcbc3Fzmz59Py5YtsbW1xc3Njeeff77QdwCepOSeOXOGSZMmYW9vT/369fnHP/5RpAD9/fv3GTZsGNbW1tStW5d58+YVK0Rv2rSJdu3aYWtri4ODA61atarQ5yrz96Vhexc6DPM2tBl6QVRL/LbhDjdOxVXbmlkk4kIzbKhbbWsePXqUyMhIo63Zp8XOzo7Zs2fTrp3ufN+ahiAIvPDCC4wYMcIo05VlZGRkykIfgt8FoL4gCO7lGJsGROnBBqMmdFsEKmX5Lvwqyq5du3hj5gLCj2UWW0uvR10TBrkrOBwn4mUFGTchLhQi7sSyYMECdu3aVaX1p732Iq8tm8SPDxQlin66FvsAsojHg06Yo5s6NMuWLcPCwoJly5YV+3xeXh5btmzB0tKSsWPHolAYumG27pEkicOHDxMXp7kwMDMzM7BF+iEsLIwrV64A1fMaY2JiuHDhQsF9AehXr3Lfn371FIXiJS5cuEBMTEzVDHyGkSNH0qtXL3bv3s38+fNRqVQMGjSI1atXM2/ePA4cOMDLL7/M0qVLefvttwuOmz9/Plu2bCEoKIjDhw/z7bff0rZt24JoWFEUGTZsGOvWreOf//wne/bsYfDgwbz11lu8//77Jdrz0ksvkZCQwKFDhwo9vnfvXlJTU5kyZQqgERMDAgLYt28fwcHB7Nu3j+eff545c+bw1VdfFRx348YNhg4dipWVFZs3b+ajjz7i888/5+jRo1V630aPHk3fvn3ZuXMno0aNIigoiA0bNpTr2I8//pg7d+6wbt06VqxYwYULFxg4cGCBmAcwdepUPvnkE1566SX27t3L9OnT+fTTT5k6dSoA7du3Z8WKFQB8+eWXhIaGEhoaSvv27QvmOHnyJJ999hlLly7ll19+Qa1WM3z48HJHLI8aNYr+/fuzc+dOJk6cyNKlS1my5Engf15eHhkZGSxcuJB9+/bxzTffkJubS5cuXQr+rjzNlClTaNiwIdu3b2fOnDmsWLGCjz/+uOD5/Px8BgwYwKVLl1ixYgXr168nPDy8yN/pP/74g8mTJ9OrVy927txJSEgIs2bNMvpIbJmqE3UtxdAm6JXLR2JIjMrExkH3m83FIaJCRIUHHaplPYCbN29y+vRpnnvuOdq0aVNt61YnqampHDhwAKVSabS+mVqtZt++faSmpiIIgtHWx5aRkZEpC3389fsPsA54VNZASZK+Br7Wgw1GjTJPjYmp7nepdu3axVefrCHhHEzzLblxRo+6JtS3EvgpQs0L3goe5sJvJ0WcW8Oa1WsAzUV+ZcjPVeFu2YIXpkxgw4aNTPWmkB36EPuUZGOGNa600Ml8y5YtY9GiRYwdO5ZFixYBsHDhwoLnJUli9+7dpKSkMHXqVGxtbXWybk3j/PnznD59GktLS6NNFYmNjWXv3r34+PjQsmXLatk9Pn/+fKH73taa2nyVwdlCwMsaorKfPHbhwgU8PHRXF/Qf//gH8+bNK7j/ww8/8Mcff3DixAl69uwJQL9+/QBYvHgx77zzDq6uroSGhjJp0iRmzpxZcOzo0aML/r9//37++OMP1q1bx7Rp0wBNJGlWVhafffYZb731Fi4uRVPqunTpQuPGjfnhhx8YOnRoIbuaNWtWkPLzxRdfEBkZyZUrV2jcuDEA/fv3JzU1lcWLFzNnzhxMTU1ZtmwZdnZ2HDp0CBsbzYZBt27daNiwYZVqBf3zn/9k+vTpBeseO3aMn3/+ueCx0rCzs2PXrl0FGwlNmjShe/fubNy4kZkzZ3L16lV+/vlngoKCCqILBw4ciImJCR988AELFiygdevWNG/eHIBmzZrRpUuXIuukp6cTFhZGnTqaplFubm507NiR/fv3M3HixDLtnDVrFgsWLChYPz09nc8++4w333wTR0dHHBwcCjUgUavVDBo0iHr16vHzzz8X6Sw9ceJEFi9eXPCenT17lp9//rngsQ0bNnD//n1CQ0MLXs+QIUNo1apVoXnOnDmDo6Mjn3/+ecFj+q7LKWMcCMa3d1dA9PUUbp1JoHGnuni3rJ7SJ1kkUJ8OWGBXLeslJyezc+dO3N3dGTx4cLWsWd2oVCq2bt3Ko0eP6Ny5M05O1VfGpjo5cuQI58+fx9fXV+7KKyMj87dG566JJElZkiRFSpIkp+vqiS6jfXUuLNy4fr1cYp+WhrYKJvmasCVKxNNKYLafKalXIOMhrF2zhhs3blTYBkmSOLszkuy0fGYuGlwkvVcfYh9ANkl4EYAJVd/l1Ip933zzDSEhIXzzzTcsWrSoUASJUqkkOzubfv364ePjU+U1ayIxMTEcPHiQRo0a0b17d0Oboxdyc3MJCQnB2tqaMWPGVFuqyK1btwrd97Su2rpezxz/bLpkVXlapAP49ddf8fHxoVu3bqhUqoKbNgLtzJkzAHTs2JH169fz0Ucfcf78edRqdaF5fv/9dxQKBRMmTCj0+OTJk8nPzyc0NLREmyZPnsyuXbvIyMgANBd5Bw4c4KWXXipkZ+fOnfHz8ytk56BBg0hKSuL64xIGoaGhDB06tEDsA/Dy8iIgIKAS79YThg0bVuh+y5YtiYoqX0D8uHHjCkUNBwQE4OnpWfCe/P777wBFuuxq7584caJc63Tt2rVA7AMKhLPy2qlN8dby4osvkpmZydWrVwse27JlC507d8bR0RFTU1NsbGzIzMws8juAou9Zq1atCtkSGhqKl5dXIfFSoVAUsaNjx46kpKQwefLkgshPGZny4NWsTtmDaiHpSbmc3RWJs4c1bQfqr1Hc06jIQ4Ep9WhV9mAdkZaWhrW1NYGBgUYbEXbo0CFiYmIYOXKk0Yp9169f58yZM3Tq1IkWLXSzmS8jIyNTW6mQ4CcIQh9BEJIFQdgvCIKFvoySKR0La906Ifn5+Xz+xRckXYb+rhXrktvLVcHuGDXuVgIv+5qS9BfkZ2miY/Lz8ytkR162ivRHubQd4ImLl22hmn4nEtR6EfvySMeautSh6h0onxb7Zs+eDcDs2bOLiH7m5uZMmTKFbt26VXnNmkh2djYhISHY2toyevRoo6yZIkkSO3fuJC0tjcDAwEJij755tiZZVf8cWD9TVvHZ+auKu3vh6g4JCQlERkZiZmZW6NapUydA0+0Y4KuvvmL27NmsXbuWjh074urqyvz588nO1oQjJicn4+TkhIVF4VORNpo0OTm5RJumTJlCbm4uW7duBTR16JRKJZMmTSpk5++//17EzsDAwEJ2xsbGUq9evSJrFPdYRXj2QszCwqLcn01J9mjTtbXvzbOfTXneu7JshPJ/h561U3tfa+eePXt44YUXaNasGZs2beLs2bOcO3eOunXrFrtGcfY8XZ+vvJ9Vr169CAkJITo6mtGjRxd06fzrr7/K9bpkZIyN5IfZmJor6BbYABOT6gljzCIBLwIwpfouN/z8/Hj99dcLbWQYE1euXOHcuXN07dqVZs2aGdocvZCUlMSuXbvw8PCQI7NlZGRkqHhKbz/AEch93HSjCIIg2ACLgB6ADXAd+F6SpGNVsFNGj5w4cYLYh7EIZnAsXsTTWiiX6HcvU+REgsiLPhrFwN1KoI+LgtDLImbWDzlx4gQDBgwotx2WNmYMeqUpJmZP1taKe1+9s0nnYp+ERA4pNGMMiioGuxYn9mnR3p87dy7x8fF8/PHHNSqNV6VS6XQnOzQ0lIyMDGbMmIG1tbXO5q1J3L9/n1u3bjFo0KBqL+ptaWlZ6H526b1hyiS7cOBckfmryrOCr7OzM35+fmzZsqXY8b6+vgDY2try8ccf8/HHHxMZGcnWrVtZsGAB5ubmfPrppzg5OZGcnEx+fj7m5k/qSWlruzk7O5dok5+fHwEBAfz4449Mnz6dH3/8kd69exf6LJ2dnXF1deWLL74odg5/f39AI5rFx8cXeb64x6qLkuxp27Yt8EQYi4uLo2HDhgVjyvPe6ZL4+HgaNGhQ6D5QkFK+efNmGjVqxPr16wvGKJXKcguSz+Lu7s61a9eKteNZxo0bx7hx48jMzOT48eO88847DB48mAcPHhhlzVUZmdLwbeWEp78DpubV03grn0wsccSZxtWy3uXLl8nKyqJr165G+/tWqVQcPnwYb2/vgjIaxsixY8cwMTEhMDDQqBvFycjIyJSXip7VegASsLm4JwVBsARCgf8DOgMtgfHAYUEQPq+8mTL6ZP/+/eSlA7kwwUfBTxHl65L7U4SaF30Kp/92r6tAlQ556Zp5y0NOppJLBx+gUoqYmpsUEQimvfYif6bt0KnYB5BDEk40xJ7K19mC0sU+LbNmzeL1119n7dq1fPLJJ1VaT5eU1VykMvTu3Ztp06bptA5cTaNhw4ZMmzaNzp07V/vaWqFJy4PskjvSlofoZ45v2rRpleYri8GDBxMdHY2trS0dOnQociuu7p6Pjw///Oc/adWqVUG6Z69evRBFkZCQkEJjf/rpJ8zNzYutOfc0U6ZM4fjx4xw/fpzQ0NBC6bxaO2/evIm3t3exdtrZaWpKde3alf3795OVlVVwbHR0NKdOnarU+6MLtm7dWqjb7alTp3jw4AFdu3YFNO8daAS1p/npp58ACmoraiP2cnJy9GLns6Lv5s2bsbW1pWXLloAmWvjZzYgffvihSHp3eenatSvR0dEFaeOgaf5SkvgMGuF5+PDhzJ49m9jY2ILIThmZvwPhl5N4cDMVoNrEPoBskvGhBwr0v2Z8fDx79+7lzp07pXZ4r+2YmpoydepUxo0bZ9RC2MiRI5k8eTIODg6GNkVGRkamRlDRsB7tFXxJBX5eRSPyASiBaMANsAbeEAQhRpKk/1TYShm9kZSUxL2798iIgk6OAo3tTHjRR9OQY5IvxUb6lST2AZgIAp2cBK5ESdyzv0dSUlKp0SKiKHF6azjJMVk0aO+MQ12rYsfp2jkRUaMkBw+qJtiUJvYFBwcXFMQ/ceIETk5OvPPOOwQHB2NpaVmokYchKKu5SEWJiYnB0dERGxubao96qy4yMzPJyMjA3d3dYPUXO3Qo3K0wKhuS8qRKNe5IypOIzi78mLZphb6YNGkS69ato1+/fvzzn/+kTZs25Ofnc+/ePXbv3s3OnTuxtrama9eujBgxglatWmFra8uJEye4fPlyQRfZIUOG0L17d1599VUSExNp0aIF+/fvZ/Xq1bz77rvFCodPM378eP7xj38wefJkrKysGDt2bKHn58+fzy+//EKPHj2YP38+/v7+ZGVlcfPmTU6ePFnQkXzhwoWEhIQwcOBA3n77bfLz8wkKCqpySm9VyMjIYNSoUcyePZvExETeffddGjduXCBqtmjRggkTJhAcHIxKpaJbt26EhoaydOlSJkyYQOvWrQFNsw9TU1PWrl1bkD7t7+9fIHZWle+//x5RFOnYsSMHDx5k9erVBAcHFxRYHzx4MDt37mT+/PkMHz6cCxcu8OWXX1a6ALu2M/GYMWP46KOPcHV15dtvvyU9Pb3QuEWLFhEfH0+fPn2oX78+Dx484Msvv6Rt27bUrVu3iq9aRqZ2kBybzbk9Ubj62uHh71Bt5TlySMYBL+zx1Ptaubm5bNmyBUtLS8aOHWuU0X2SJHH37l0aNWpUbdHbhiAiIgIPDw/Mzc2r1DBLRkZGxtio6JnNFciSJKmkXCVt+8C7QENJkhoBdYFvAAEIEgTBONt11lLu3rkDgDIZGj0W7xraKnjRx6TYSL/SxD4tjWwU5Kc8nv/u3VLXv3LsIYmRmXQY7l2i2KcPskigHq2xpvIFi1UqFUFBQYwdO7ZYsW/x4sUEBwdz9+5dfv/9d9q2bcsHH3zA2LFjCQoKQqWqYi5mFShPc5GKkJ6ezqZNm9ixY4eOLa05iKLI1q1b2bhxY6G6YNWNh4dHIVFOAo7Glx6RWxJH40Wejmd47rnn9B6ZaWZmxsGDB5k1axbfffcdQ4cOZdKkSWzYsIFu3boVpOf27NmTLVu2MGnSJIYNG8bWrVtZvnx5QcdfhULBvn37mDp1Kp9++inDhg1j3759/O9//+PDDz8s0w5HR0eef/55YmJiGDVqVBERy8HBgdOnTzN06FA+/fRTBg0axIwZM9i1axd9+vQpGNesWTP2799PdnY2L7zwAgsWLODNN980aMrUu+++S6NGjZg2bRpz586lffv2HDx4EDOzJ42JNmzYwDvvvMPatWsZOnQoa9as4Z133mHDhg0FY5ydnfn666+5fPkyvXr1omPHjly4cEFndu7atYvDhw8zYsQIfvzxRxYuXMgHH3xQ8PysWbN4//33+eWXX3j++efZt28fe/bsqXTkhrm5OYcPH6Zt27bMnTuXqVOn4ufnV2Sjo3PnzkRERDB//nwGDBjAO++8Q69evdi3b1+VXq+MTG0hP0fFqS33sbAxpesY3TeKKwkJkXwy8aIrAvpdU5Ikdu/eTUpKCuPGjatRpVZ0yfnz59m0aZPOG3LVJGJjY/nxxx85fPiwoU2RkZGRqXEIFQlfFwQhB039viLVbAVB8ASi0Fx/zpIkae0zz/8BdAUWyFF+5UcQhCIf0E1pt87m37ZtGxvWb+DefnivmSlWJk8crHuZIpsj1Ux63LW3PGIfQI5a4qMbKhoOhanTphaJnNEScyuVk5vv07C9Cx2f99bZayoLNUqyeURrJmFO1ZotlJXOK0kSq1evRq1WM3PmTNauXcucOXNYsmSJwSL8SrJ51apVlbJNrVazYcMG4uLimDVrltFGwBw5coRTp04xatQo2rRpY1Bb1q5dy8yZMws9NquBgmYO5d/DuZEm8v39wkLhmjVrmDFjhk5slJGRMR6KE3wkSTK+jkwVQN/+maGQJIk/frnPwztp9Jvuj4tn9TWlyiSeOjSkAX3KHlxFYmJiWLNmDf379zfaJmoxMTGsXbuWhg0bMmHCBKNsopaTk8N3332HKIq88sor1dpETUZGRsbQlMc/q2hKbxLgLgiCrSRJmc8811u7BrCrmGP/A+wABjz+v0wN4NDPF7i9V/N/i2e0Ak2kH/wUoaaXq1TQoKOshh4WClA/1hGUSmWxY0S1xIUDD6jjbkX7IfpP23iaLBLxoGOVxT54kgI7Z84cgCKinyAITJ48mby8vBot9sET27Wvpbw2HjlyhOjoaMaOHWu0Yt+tW7c4deoU7du3N7jYBzBx4kQ++eQT7jyO0AXYECEy1ZdyiX430kQ2RBQW+5o0acLEiRN1baqMjIyMTC0i9k46MbfSaD/Ys1rFPhE1Ikrqo9+yElo8PDyYNWtWQXdyYyM7O5uQkBDs7e0ZPXq0UYp9kiSxc+dO0tPTmTZtmiz2ycjIyBRDRQW/vwB3oBtw6Jnn+j7+95okScVVtf798b8tKrimjB4ZOOE5YvOucm8/5Ilg9UypPK3otzum7Mg+LXkimDwe9nQK2dMoTAT6vNQIQRAwMa2+mikq8jDBDFcdfg1LEv2uX79OkyZNsLKyYuPGjTVa7NNSUdHv1q1bnDlzho4dOxYU2jc20tLS2LlzJ+7u7gwZMsTQ5gCaTrrr1q2jR48eBUXG80X4/r5IF2eJfvUUxdb0S8qTOBovciapcGCKIAisW7dO5x16ZWRkZGRqF/WbONB7SiPq+emmVmd50ZRaaYsl9vpdJyuroEO5u7u7XtcyFFohLDMzkxkzZmBlVX0lc6qTM2fOcPv2bQYPHmy0taNlZGRkqkpFBb9fgcHA2zwl+AmCYAoMQxPd91txB0qSlCIIQhZQJB1YxnB4Pq7XZW0LsTkSDWyLigQNbRXM9y+/KBebI2H92E/09CwavRd3P516fnbYOVW/uJBNIj70whQLnc77rOgXEBDAtm3bGDRoEJcvX64VYp+Wioh+Xl5edO3alb59+5Y4prZjZ2dHp06daNu2bZGOoYYkICCAzz77jLfeeqvQ42eSJM4mqfGyBi9rAWsTyFZruvFGZ0NxRRz+97//GW1Kk4yMjIxM2eRkKsnPVuHgaoVbA/2Kbs+iRpMN4oZ+I+hFUWTbtm08ePCAefPmGW1EmCAIdOrUiebNmxt1Awt/f39ycnLo1KmToU2RkZGRqbFUtIafA5qGHE7A90AwkAwsfHyTgMGSJBVbNVUQhDTAQpIkOYyknOi7RkxSUhLTp03///buOz6Kan38+OekNwgdQgIkdKRI7xCRFkM3BJWOekVsiP4s94o0EeX6tV8LiIINIRB6UaSEjqKigHTpSAkhISQhZbPn98dm1/S6yW6W5/16zSvZmTMzz24mu2efOYXrh6HVbUW/miVPaGy6auCQp6ZqC1i4aGGWWcHO/BHDT6vO0XlYIIGtij9hRnGkkUQ6abTgQZyLnOsunNmzZzNjxgzGjRtHt27dSElJ4cknn7Rpss9gMODu7s7999/PsmXLsmwzzyJs/plZeHg4K1asICUlJUeiy2AwmFpnWnn2ZHuTkpKCu7t1k8PW9u677/L8889TlPdyM6UU77zzDs8++6z1AxNCOAwZwy8nRxrDz2jUbPvqJPHRyQya3BwXt7L9bI/nEgF0wo82pXqerVu3snPnTgYPHkybNqV7LlspD/WWkkpJScHNzc0huykLIURRFKZ+VqS+lFrrm8ATGQ//BVwCbgOvYEr2XQC25BGML1ABuFmUc4rSVbVqVRo0bECFuvBzrCa9GEmDzNK15ucbGp+60KBhgyzJvrirt/ll3XlqBPpQt0XZN/RMIoY6dC21ZB/Aiy++yIQJE/juu+9Yv369zZN9AC4uLsycOZPIyEjmzZuXZduMGTNyTfbNmzePyMhIZs6cmSPZp7Vm/fr1fPXVV6Snp5dm6Db1xx9/8NFHH3Hjxg1bh5KvKVOmsGvXLho3blyk/Ro3bsyuXbsk2SeEEHe4Q1v/JvpcAm36+5d5ss9AMs64U72UR/w5duwYO3fupHXr1g6b7IuPj+d///sfv/32m61DKTVGo5HvvvuO1atzGy5eCCFEdkUePE1rvQx4GEgEVKYlHXhOa23MY1dzf7GzRQ9TlKbQ0FDcK4JLBdh1Pa8/X+HsijbiUhHcK5qOa5aWks7uiNO4ejjTJSwIJ6eyvSuXQjxeVKMSgaV6nu+//546derw7LPPsmrVKpsn+8ymTp3KrFmzmDRpUo6kX3YFzdZ74MABfv/9dwIDAx22hd/Vq1dZt24dVatWpVKlSrYOp0Bdu3bljz/+4PPPP6ddu/wHPG/Xrh2ff/45f/zxh3TjFUKIO9yl43Ec3X2Vhu2qEdiqasE7WFki0dShCy64ldo5ZsyYQffu3bl06VKWuqkjSU9PZ/ny5aSmplK3bl1bh1Nqtm7dyrlz56hfv76tQxFCiHKhWE2dtNZfKqU2AuFAU0yt9lZqrX/NZ7cHMLUCdNzbTuVUcHAwkcuXk9rqMtt2Gmns44SfZ9ETcn/f1my7bsS/J9T2r01wcLBl2/6150mITaHXuEZ4+uQ+kUdpSuYmTRmCU9Fz3EXSpUsX/P39adeuHbNmzbKrMd8KmlEYCk72Xb58mQ0bNlC/fv0sf19HkpKSQkREBB4eHoSFheHkVHaTypSEh4cHDz/8MA8//DCXLl3i119/5dixYyQnJ+Ph4UHTpk1p164d/hnjdgohhLizJcalsG/VOSr7edEmJOeYy6UtlUTcqUgVGpbaOWbPns2sWbMYNGgQX3zxBXXr1rWLG7HW9uOPP3LhwgXCwsKoVq2arcMpFcePH2f37t20a9eOVq1a2TocIYQoF4qdjdBaXwM+KkxZpZQfMCLjYa5dfoXtuLm5MXnyZF5++WWqtoIFhww8GuhSpKTf37c1n581ULUVuHnD5MmTcXP7525tUOuqVK/rQ416ZTvrG8BtblCRACpQegMXJyUl4enpSfXq1alevTqAXSX7zPJL+hWU7EtOTmbZsmV4e3tz//33WyURZjAY7Op10lqzZs0aYmNjGTduHD4+PrYOqVj8/f3x9/dn8ODBtg5FCCGEnfKo4EqDtlVp2L46zi5lf3PrNjE0IrRUx1WePn26ZcIycz0H8p+QrLw5cuQIP/30Ex07dqRFixa2DqdUxMbGsnLlSvz8/AgJCbF1OEIIUW6U1ad7NWABsAvYUEbnFEXQ7K67ePiRR6hQGyq1hHlnDGy/ll7gmH7pWrP9Wjrzzxio1BIq1IZHHnmEZs2aAWBINY3x5tewIo06Vi/155GdRpNKIgF0RlE63YiTkpKYP38+W7duLZXjW1tu3XsLSvYBJCYm4uLiwvDhw60ys93s2bNxd3dn9uzZJT6WtRgMBlJTU+nduzf16tWzdThCCCFEqTCkpuPs7ETrvgH4VC77SR5MQ63UwJfS+aydPXs2M2fOZPz48QwZMgQw3eT85JNPmDZtml3VPUoqISGBunXr0q9fP1uHUmpu3bqFj48PI0aMsKsbxUIIYe/K5B1Ta30IeKYsziWKz1wh+uLzz3H3hb0Hjew8ZqRjFUVDb1M3X3cnSDHC5duaU4lGfr6hcakI/j1NLfseeeQRBmccJzkxjU2fHeeu7jVp2L7sk30ASVynCo3woUapHF9rzcqVK0lISKBp06alco7SkLml3+bNm4mMjCxwvMGqVavy+OOPW6Vl3+zZs5k2bRphYWFMmzYtS0y25OrqysiRI20dhhBCCFFqzvwew+Htl7l3XCO8K9lmRtfSHGpl9uzZzJgxg3HjxtG9e3dLzwv4p2eDI7X069ixI+3bty83Q5AUR926dXniiScc+jkKIURpkHdNkcWQIUN4c+5cAhvXplYXqN4FDnlqlsakM+eogamHDMw5amBpTDqHPDXVu0CtLlCvUW3enDuXwUOGkJ6ejtGo2bviLMkJaVT1L3lrsOIwkk46KfjTodTOsXPnTk6dOkX//v3L3dho5pZ+K1asyDfZd+7cOdatW4fBYLBqsu+TTz5h2bJldnG3PTExkYiICG7evIlSKtcpzkX5FBUVhVKKqKioMj3v+PHjCQwMLLCcUirXmbKLy3z9mpdKlSrRsWNHFi9ebLVzFEVhX/9vvvmGbt26Ub16ddzd3QkMDOTRRx/lwoULZRNoJosWLUIpxdmzZ8v83EKUtrirt/ll/Xm8K7nhWbH0JsrITxIx+FK3VIZaMXfj/de//kWzZs0YPnx4jgnGHKGln9aajRs3cvz4cQCHTYT98ccfbN++Ha21wz5HIYQoTdImWuTQrFkzPvjgA7Zv386GDRv4q+JfeZZt0LABoaGhBAcH4+bmxqKPlvDBS4uZ8MwYqrs3oMOgulT28yrD6P+RRDQ1aIknlUrl+KdPn2bbtm20bNmS9u3bl8o5StvUqVN5+eWX8+wekZCQwPLly3F3dyc9Pb3E3SgyJ/vMd9ltfbfdaDSyYsUKzp07R48ePfD19S3T84s72969ewkIsO5g+ePHj7f8X8XGxvLVV18xatQo3NzcGD58uFXPZS0xMTH07t2bF198kUqVKnH8+HFee+01fvjhB44cOUKFCmU//qsQjiYtJZ3dEadx9XCha1gQTk5lf3NLYySNJALoZPWhVsx1jOeee46KFSsSFhaW53uHreseJfXbb7/x888/4+npSZMmTWwdTqm4evUq69atIyAggB49esjNWCGEKAZJ+Ilcubm50bdvX/r27UtMTAynTp3i4sWLpKWl4erqSkBAAA0bNqRq1aqWfRZ9tIR3pyzmnqpOLHx7CWOfepD6bdrYJH4jBjSaWrQutXMYDAbq1KnDwIEDy3UlJK8kntFoZPny5SQnJzNmzBjc3UvW7Se3ZJ+ZLSve27dv5/Tp0wwaNAg/P78yO29ZuHz5MsE9urNj125q1apl63BISUkp8XXkaDp37mz1Y/r7+2c5bv/+/dm9ezfLli2z24Tf5MmTszwODg6mXr16hISEsGnTJsLCwmwUmRCOQWvNT6vPkRCbQq9xjfHwcbVJHEnEUJXGeGPdoV4MBgPTp08nLCyMHj16UKVKFYKCgvLdZ+LEiWzevJnp06fne/PT3ly+fJmNGzfSoEEDevbsaetwSkVycjIRERF4eHgQFhYmrfuEEKKY5N1TFKhq1ap06tSJsLAwHnzwQcLCwujUqVOuyb5RAc50r+7Mg/5GFn74NV9+vNQmMSdyDT/a4U7pzbLauHFjJkyYkGU2YkeydetWzp07x8CBA6lRo2RjIOaX7DOzRRebkydPsmPHDlq3bk0bGyWnS9Oc2a9x6fxZ5sx+rczPPWPGDJRSHD58mP79+1sG2wbTRDcvvfQSQUFBuLm5ERQUxOuvv47RaLTsn5CQwNNPP03dunVxd3enZs2a9OnTh2PHjlnKxMfH89RTT1G7dm3c3d1p0qQJ7777LjqfyYaeeOIJatasicFgyLI+JSWFypUr8+yzz1rWXb9+nUmTJuHv74+7uztNmzZl/vz5OY65ZcsW2rZti4eHBw0aNLBMhlMY2bv0ml+3kydPMmDAAHx8fKhXrx6zZs3K8voUhZOTEz4+PqSlpWVZP336dNq2bYuvry/VqlXj3nvvZd++fVnKmLvkrlmzhqeeeopq1apRvXp1Ro8eTVxcXJay0dHRjBw5kooVK1KpUiXGjh2bo0xRmD9jXF0LTkz8/PPP9OnTBx8fH7y9venduzc///xzljLjx48nICCAAwcO0KNHD7y8vGjUqBGffvppvsceOHAgbdu2zbH+zJkzODk5FenvLYStGNKMpN42cHcff2rUs80M9KahVlKpjfV7Rbi4uDBz5kwiIyO5cuUK3bt3L3CfefPmERkZycyZM8tNsu/27dtERETg7e3N/fff75CJMK01a9asITY2luHDh+PjY5vrVQghHIHjfUqUA0opH6XUDKXUOqXUFaWUVkotsnVcxZU52RfkY7qkgnycGBXgzLtTFrPooyVlGo+BFBTO1KC5ZZ2Hhwdt27bl999/t6wr7rhZP/74I3v37gUo1y378pOYmMgvv/xCu3btuPvuu0t0rPySfdn/BmWZ9NNas3PnTmrWrEloaKjD/S0vX77Ml4sW8Xh9xZeLFnLlyhWbxDFkyBCCg4NZs2YNU6ZMwWAw0L9/fxYsWMDkyZPZuHEjjz76KK+99hovvPCCZb8pU6YQERHB9OnT+fHHH/n0009p3bq1JYFkNBoZMGAACxcu5Pnnn2ft2rWEhITw3HPP8corr+QZz9ixY7l27RqbNm3Ksn7dunXExcUxZswYwJRM7NatG+vXr2fGjBmsX7+eQYMGMWnSJD788EPLfkePHiU0NBRPT0+WLFnCnDlzeO+999iyZUuJXrdhw4Zx7733smrVKoYOHcr06dP58ssvC7Wv1hqDwYDBYCA6Opq33nqLo0eP8sADD2Qpd+nSJaZMmcKqVatYtGgRNWrUoGfPnhw8eDDHMSdPnoxSisWLFzNt2jQiIyNztMq7//77WbduHXPmzGHp0qW4uLjw9NNPF+l5p6enk5KSwsGDB3nuuee46667Cpx58uDBgwQHBxMbG8uiRYv46quviI+PJzg4mD/++CNL2fj4eEaOHMno0aNZvXo1HTp0YNKkSWzbti3P4z/xxBMcOHAgRwJx/vz5eHt7y0Q/olxwdXPmnjGNaNKldCYxK4xErlGzlIZaSUpKol69erzyyitMmjQp15szmc2bN49JkyYVOGGZvTl48CDx8fGEh4fj5WWbIXNK25UrVzh+/Dh9+vShXr3SmcVZCCHuFOXjdpbjqQZMBy4DvwADbBtO8eWW7DMzJf3g3SmmweLHP/lgmcSURDT16IkrHpZ1KSkpALRt25bWrVvzxRdfMHPmzCIn/Y4cOcKePXvo0KH0JgKxB97e3jz22GNUrFixRMfJ3MUmt2RfbgP5l1UXG6UUo0aNIjk5uVAtiMqbObNfo30lTYCXop2vZs7s1/jgfx+VeRzPPPNMlsTQ119/za5du9i+fbulK1Lv3r0BmDlzJi+99BI1atRg7969jBo1ikceecSy77Bhwyy/b9iwgV27drFw4ULGjx8PQL9+/UhMTOTtt9/mueeeo1q1ajni6dy5M40aNeLrr78mNDQ0S1zNmjWjXbt2ALz//vucO3eOQ4cO0ahRIwD69OlDXFwcM2fOZNKkSbi4uDB79mwqVKjApk2b8PY2TVDUtWtXGjRoQO3axR+Q/vnnn2fChAmW827dupXvvvvOsi4/c+bMYc6cOZbHTk5OzJo1K0fCb8GCBZbf09PTCQkJoXnz5nz++ee8//77Wcr27NnTkujs168fx48fZ8GCBZYJLn788Ud27drFd999x4MPmt7r+/fvz3333cfFixcL/bxr1qxJTEwMAO3bt2fz5s14eHjku8+sWbNwd3dny5YtVKpUCYC+ffsSGBjIzJkzWbFihaXsrVu3+Pjjj+nVq5fleW3atInvvvvOsi67kJAQ6tevz7x58+jYsSMAaWlpLFy4kFGjRsn4gsKuJSem8dv3F2nTPwBPG3XjBUjH1MK4NIZa0VqzcuVKzp07x6RJk3B3d7cMEZJbr4LymuwD04y8QUFBJe55Yc/8/PyYOHFiltmVhRBCFI+08LONy0CA1ro2YJ8DKhVCfsk+s7Ju6ZdGEq54UZXGObb99ttv/PbbbwCW7lmZW/wVJCYmhtWrV+Pv70///v2tEq+9MRgMHDp0CK01VapUKXGyLXMXm+zd3vJK+JVFF5tDhw6RlpaGu7u7Q07SYW7dF1zF9AUruEqazVr5ZU7SAXz//ffUq1ePrl27WlqhGQwG+vXrR1pamqVLaYcOHVi0aBFz5szhl19+IT09PctxduzYgZOTEw899FCW9aNHjyY1NdXSCjc35tZdt27dAuDGjRts3LiRsWPHZomzU6dOBAUFZYmzf//+xMTEcOTIEcA06UZoaKgl2QdQp04dunXrVoxX6x8DBmS9D9SiRQvOnz9fqH0ffvhh9u/fz/79+9m6dSuvvPIKs2bN4q233spSbvPmzfTq1YuqVavi4uKCq6srJ06csMz6mF88LVu2JCUlhatXrwKm18HZ2TnHWHvm5F9hbdmyhT179vD5558TFxdH3759C+wWvGPHDgYOHGhJ9gFUrFiRwYMHs3379ixlvby8siT23N3dadSoUb6vrZOTExMnTmTJkiXcvHkTgFWrVnH16tU8hygQwh4YjZq9kWe5dCyO5IS0gncoRYlEU5v2uOFdcOEi2rFjB6dOnSIkJITatWszdepUZs2axaRJk3LUPcprsu/ChQtER0ejlHLYZF9iYiInTpwAoEaNGg7X80IIIWxBEn42oLVO0VpfsnUcJVGYZJ9ZWSb9koghgK44k/td7NatW+dI/GXv6pubtLQ0IiIicHZ2Jjw8HGdnZ2uHbhc2btzIihUruHz5stWOmV/FO7uyqIgfPnyYFStW5Oie50jMrfsqupoqyxVd/2nlV9ayT4Ry7do1zp07h6ura5bF3HLK3Lrrww8/ZOLEiXzxxRd06NCBGjVqMGXKFJKSkgBTkq5KlSo5JgExT05y48aNPGMaM2YMycnJLF++HIAlS5aQlpbGqFGjssS5Y8eOHHGGh4dnifPy5cvUrFkzxzlyW1cUVapUyfLY3d2d5OTkQu3r5+dH+/btad++Pb169WLWrFk89thjvPrqq8TGxgKmGyChoaH4+Pjw+eefs2/fPvbv38/dd9+d63lyiwewlL18+TKVK1fO0Vq2qK/D3XffTZcuXXj44YfZtGkTR44cKXCMvRs3buQ64U6tWrUsz9escuXKOcoV5rV95JFHMBqNfP311wB8+umndOzY0SHH/hSO48/tl7l65hbtQutQuZbtun8aSMEZlyxDrVjL6dOniYqKomXLlpYW2pB73aO8Jvtu3brF0qVLWblyZb5j1JZnRqORyMhIli1bRkJCgq3DEUIIhyFdekWRpaen88FLptl4C0r2mQX5OHFPVc0HLy1mzOOlkzBL4RaeVKEKDQos27p1a8D0pffhhx/O0tXXvC2z06dPWwakd8QWYQB//PEHv/32G926dStRV8TcmCvWtu5iEx0dzZo1a6hTp06pzI5qD8yt+56vnwb8c3c8uEoa7yxayH+mvlqmM/Zmv0NftWpVgoKCiIiIyLV8YGAgAD4+Przxxhu88cYbnDt3juXLl/Pyyy/j5ubG3LlzqVKlCjdu3CA1NTXLxDnmVoyZJxXKLigoiG7duvHNN98wYcIEvvnmG+655x7q1KmTJc4aNWrk6Npq1qRJE8CUXDO3cssst3W21Lx5c1JSUjhx4gSdOnUiMjISFxcXVqxYkSVJFxsbm6WlXGH5+fkRGxtrmcndrCSvQ1BQEFWqVOHUqVP5lqtSpUqurVevXLmSI1FZXFWrViU8PJx58+bRv39/tm3blqVLtBD25u+TN/lzxxWCWlelfpucwxuUpSSuU48euGD9Wdp//vlnqlevzsCBA3N83mSue2zevJnIyMhyl+wzJ8JSU1MZOnSow7Z62759O2fOnGHw4MEySYcQQlhRuW/hp5TyUkrdp5SaqpRaoZQ6lzEJhlZKzSjkMSpkTKJxSCmVoJS6qZTar5R6XinlmFOwloCzszPPzB1JVIyRMwmFmzXyTIKRqBgjz8wdWSrJvg9nLOZuNYpW6iGclTNKqSwLkOu6Nm3acODAAbTWHDhwgDZt2uQop5Tiu+++4+mnn6Zhw4ZWj90eXL16lXXr1hEYGMi9995bKuewdReb1NRUIiIicHV1Zfjw4Q7bSjN76z4zW7byyywkJIQLFy7g4+NjaYWWeclt3L169erx/PPP07JlSw4fPgxAcHAwRqORZcuWZSn77bff4ubmVmBCd8yYMURFRREVFcXevXuzdOc1x3ns2DHq1q2ba5zmcdu6dOnChg0bSExMtOx74cIFdu/eXazXp7SYJ+Iwj4mUlJSEs7Nzli+PW7duLXS34ey6dOlCeno6kZGRWdYvWVL8Vt1//vknMTExNGiQ/02c4OBg1q9fb+miDaYWMWvXriU4OLjY58/uiSee4PDhwzz66KNUrFixyN2VhSgrWmsObfubSjU9aRdap+AdSlEaSbjhTVWalMrxw8PDGT16dJYbP5mZ6x4rVqwod8k+MA1zcO7cOQYMGOCwXXlPnjzJjh07aN26tbSaFkIIK3OEFn4dgQ3F3VkpVQ+IAgIzViUB7kD7jGWUUqq31jo2l33dgcJ+MiVprXNOfVhOmSfgMHXrJd+WfmcSjHx7MZ0p744stYk7/jUjlCdnPEBThqDIefdTKZWjG4RSigMHDvDwww/z+++/06ZNGxYuXEirVq0sZS5fvszt27epX79+qcRtD9LT01m+fDkeHh6EhYXh5FR69wFya+lXVl1svv/+e2JiYhg9enSJJyOxV3m17jOzVSu/zEaNGsXChQvp3bs3zz//PHfffTepqan89ddfrFmzhlWrVuHl5UWXLl0YPHgwLVu2xMfHh+3bt/PHH38wbtw4AO677z66d+/O448/TnR0NM2bN2fDhg0sWLCAf//737kmDjMbMWIEzzzzDKNHj8bT0zPH2HNTpkxh6dKl9OjRgylTptCkSRMSExM5duwYO3fuZPXq1YDpml62bBn9+vXjhRdeIDU1lenTp5e4S29JXLp0yTIW4q1bt4iKimLBggWEhoZa3stCQkJ47733GD9+PBMmTODEiRO89tpr+Pv7F+ucffv2pXv37kycOJHr16/TqFEjli5daknQFqR79+4MGzaMpk2b4uHhwcGDB3n77bcJCAjgX//6V777vvrqq6xbt47evXvz0ksvoZRi7ty5JCUlMW3atGI9n9x07tyZtm3bsmPHDp5++mmHnSFTlH9KKe4Z04i0lHRcXG17bz+JGBrSH2crf+U4cOAATZo0wcvLq8DP9KlTp5bqJGCl5fTp0+zZs4d27dpx99132zqcUpGUlMTKlSupWbNmlom0hBBCWEf5+uTLWyzwW6blXaDAb7NKKWdgLaZk32VgrNZ6s1LKCQgHPsOU0PsWyO1TyA/Ie2T4rP4EWhSyrN27cTmJYSOGAPkn/coi2QeQQjz16ZNrsi835jH72rZtS5s2bfj999+zJPrANDbVsmXLMBqNPPXUU+WuolhYzs7O9OvXDzc3tzLpRmGrLjbdunWjTp06Dp28zat1n1nmVn62mLEXwNXVlR9++IE333yT+fPnc+bMGby9vWnQoAEDBgywtNLo2bMnERERvPnmmxgMBurXr8+7777LM888A5gmUli/fj3/+c9/mDt3LjExMQQGBvLOO+/w7LPPFhhHpUqVGDRoEMuXL+ehhx7KMdOqr68ve/bsYdasWcydO5dLly5RqVIlmjRpkiU52KxZMzZs2MALL7zAAw88gL+/Py+99BJ79+7NdVKasrBo0SIWLVoEmCapCAoKYtasWVlel/79+/PBBx/wzjvvEBkZSYsWLfjqq6+YPXt2sc+7YsUKnnnmGf7973/j7OzM4MGD+d///sfQoUML3LdTp04sWrSIs2fPorWmbt26PPTQQ7zwwgsFJm9btWpFVFQUr7zyCuPGjUNrTefOndm+fbvVvyQPHz6c3377TSbrEHbr/J+x+Df1xd3TBXdP29ZbUknAk8pUIsiqxz1y5Ahr1qyhZ8+eec6unV15rMPVrVuX3r17O+wQJACenp707duXevXq5RgDVgghRMmp8j74q1LKWWudnm3dWaAeMFNrPSOffR8BzIPwdNVa7822/SFgccbDPlrrLdm2uwMdChlqotb6QC4xeAC3gS+11uNz2Z7jD3RMrynkKUtHSpKBH+Yfw9XdiZDHm/Hlx0tzncCjrJJ9t4nFk8o0ZmCeCT9zC7/ff//d0qJPa80ff/yRI9EHpu4wS5cu5eTJk4wfPz7L2F6O5NatWzkSHWVl9uzZTJ8+nZkzZ5Zqsi8hIQFvb2+HHfcms3p1Ajh/seD5gOoG+HPuwsUyiEgIx9KtWzecnJzYuXOnrUMpU7m9f2qtHf9NNR/2WD87e+gG+1acpU3/AJp0tn33z5tcoBH3UdmKCb+YmBjmz59PjRo1GD9+vEMOz5GWlkZ6ejoeHh62DqVU2bIOKoQQjqAw9bNyP4Zf9mRfEY3L+Lkte7IvwxLgTMbvY7NvzJhtd1chlxzJvvJIa82+lWdJTkij05B6KKUY/+SDTHl3JN9eTLeM6VdWyT6NJpUE/OlYYOs+84y8SilLC7/ckn0Ae/bs4fjx4/Tt29dhk30XLlzggw8+4OjRozY5/9SpU0lJSSnVZF9SUhILFizghx9+KLVz2JNzFy6itS5wkWSfEIWXkpLC3r17ee2119izZw8vvPCCrUMSIoeb0bfZv/Y81ep606hDdVuHQwq38KIavtSz2jHT0tKIiIjA2dnZocfi3bhxI/Pnzyc1NdXWoZSaQ4cO8eGHH/L333/bOhQhhHBo5a99u5UopbyAbhkPN+ZWRmutlVLfA5OAfmUVmz07svMKl0/F0y60DlVqe1vWZx7T756qmqgYY6kn+wBuc4PKBOFD/uNlubu7WxJ9eSX5zK5evcqWLVu466676NSpkzXDtRuJiYksW7aMChUqEBRk3a42RVGaXWy01qxcuZKEhIQC/+ZCCJGXy5cv07VrVypVqsR//vMfBg8ebOuQhMgiLTWd3RGncXFzotvwIJycbd/4MplYGjMIJyu2LdiyZQvXrl1j9OjR+Pr6Wu249uT333/nwIEDdO/ePc+JSMq76Oho1q5di5+fn03HuxVCiDvBHZvwA5rxTwvH/EYVN2+rpZSqorW+YY2TK6WeAirxz9+glVLK3NRph9Z6R177NlV5f9koze4k1y8kcDjqMvVaVqZh+5xjKpmTex+8tLhMkn0aTRpJ1KZ9gWWTk5NzrJs+fXquZWvUqMHAgQNp3ry5Q3YDNRqNrFixgqSkJB599FGH7TKyc+dOTp06RWhoKLVr17Z1OEKIciowMDDHpE+OxhE/6+4kv228yK2YFO4Z0wjPCrZPEqUQjw+18MW6PSS6d+9O7dq1C5y5u7y6evUq69evJzAwsNBjE5Y3qampRERE4Obm5tCtNIUQwl7cyQm/zBmA/Aa9yrytNmCVhB/w/yBLP4c2/DPj70wgz4SfrVT286J5sB9NutTI88vB+CcfZMzj4WXyAZ7EdarQEG+K13VlxowZWR4bjUZu3bqFr68vbdu2tUKE9mn79u2cPn2aQYMG2Wym1tJ2+vRpoqKiaNmyJe3bF5wQFkIIIcqrpl1qUK2ONzWD7GM8tGRu0pR7Cj2RWkFu3rxJhQoV8PHxcdgW+8nJyURERODh4UFYWBhOTuV+1KUctNasXbuWmJgYxowZI+P3CSFEGbiTE36ZP2WS8imXeZvVPpm01oHWOlZpM6ZrDGnpuHm40CLYr8DyZZHs0xgxkFyo1n2FtXXrVn755ReeeOIJKlasaLXj2hs3NzfatGnj0ElNMM1uN3DgQGm5IoQQwiGlJBlw93LBt4YnvjU8bR0OAMnEUYHaVMA6Letv377NokWLqFOnDvfff79VjmmP0tPT8fX1JTg4GB8fH1uHUyq01nh6etKrVy+bDicjhBB3kjs54ScK6Y/Nl7h4PI7+jzXDzcM+mt4nEUM1muBFFasc7/jx4+zevZu2bds6dLIPTLNMOnr3tPr16xMUFCTJPiGEEA4pJcnAD/OPEdiyMq16+9s6HIsU4qlPH6u07tNas2rVKuLj4+nYsaMVorNf3t7ejBkzxqHrLU5OToSGhjp8HVQIIezJnZzwu5Xpd698ymXedivPUmWoNMfpy+7C0ViO77tGo47V7SbZZ27d50c7qxwvNjaWlStX4ufnx3333WeVY9obg8HA0qVL6dSpEw0bNnTYCuWPP/6Iu7s7PXr0cNjnKIQQ1lbQF3B5P7UvWmv2rTxLckIaAc0q2Toci9vE4ktdfLDOcCG7d+/mxIkThISEEBAQYJVj2pvz58+zc+dOhg0bhpdXfl9Hyq+kpCQiIiLo378/fn5+8n4ihBBlyPEGiCi8zPPA53drNPO2O2ru+Fsxyfy8+hxV/b1o3c9+7h4nEk0NmuNJpRIfy2AwEBERgVKK8PDwUp011pY2bdrEqVOnSEtLs3UopebIkSPs2bOHxMREqUwKIYRwWH/uuMLlU/G0DQmgSm1vW4cDmCZSSyUBfzpapXXf2bNn2bp1K82bN3fY1n2JiYksX76cmJgYhxyzD0zJ6ZUrV3Lx4kVp2SeEEDbgmJ8uhXMUMGb83iKfcuZtV6w1Q295YEgzsnvZGZSTomt4fZyd7eNSMZJOOmnUssxvUjJaa2rVqsXQoUOpXLmyVY5pbw4dOsT+/fvp3LkzzZo1s3U4pSImJobVq1fj7+9Pv379bB2OEEIIUSqunI7ncNRl6rWsTIN21WwdjsVtblCZIHyoaZXjubu706BBAwYNGuSQN/GMRiORkZHcvn2bESNG4OHhYeuQSsWOHTs4deoUISEh1K5tnXEdhRBCFJ59ZHFsQGudBOzOeBiSWxllqmH0z3i4qSzisheG1HTcPJ3pcn8g3r5utg7HIonr1KQVHpR8nD2tNa6urgwZMoQmTZpYITr7Ex0dzdq1a6lTpw59+vSxdTilIi0tjYiICJydnQkPL5sZooUQQghbSDdoqtXxpsPAunaTCNNo0kiyykRq5lZgfn5+jBo1Cnd39xIf0x5FRUVx5swZQkNDqVXLOl2g7c1ff/1FVFQUrVq1ol076wzDI4QQomju2IRfhi8zfvZSSnXKZXs4UD/j96/KJiT74OHtSq+xjfBr6GvrUCyMpGMkjVq0KvGxrl69ymeffUZMTIwVIrNfBw8exM3NjeHDhztsIuzcuXNcv36d+++/H19f+7lehX2IiopCKUVUVFSZnnf8+PEEBgYWWE4pxYwZM6x2XqVUlqVSpUp07NiRxYsXW+0cRVHU1/+rr76iQ4cOeHl5UblyZbp3786hQ4dKN8hsFi1ahFKKs2fPlul5hSgM/8a+9J7QGBc3+/lMT+I6VWiIN9VLfKwtW7awfv16h+7+mZqaysGDB2ndujVt2linx4o9+u2336hevToDBgywm+S0EELcaRxiwDKlVGUgc83HnMj0Ukpl7u+QrLVOyPT4S2Ay0BKIVEqN01pvUUo5AWHAZxnlNmqtt5RS+HYl9nISh7b9Tcch9fDwdrV1OFkkco1atMGdCiU6TkpKChEREaSmpjrsnWOze++9lw4dOjj0zMMNGzZk8uTJDv0chePau3ev1QejHz9+PBMnTgRMkxJ99dVXjBo1ypL8t1f/+c9/eO+993jxxRf573//S1JSEj///DNJSUm2Dk0Im/v9x4t4VnCjSecadpU8MU+kVtsKE6kdP36c3bt3065dO7t6jtbm5ubGY489hqurfdWzrS0sLIzExETc3Oynp5AQQtxpHCLhBxwA6uWy/oWMxexLYLz5gdbaoJQaDGwDAoHNSqkkTAlD82AaB4BR1g+5+JqqwYD1Z+tNTTawa9lpjOn2d1fViAGAmrQs0XG01qxZs4bY2FjGjRuHj4+PNcKzO4cPH6ZWrVpUq1bNYRNhly9fJj4+niZNmjjscyyqenUCGDx4MP+Z+ip+fn62DieHlJQUh0+yF1Xnzp2tfkx/f/8sx+3fvz+7d+9m2bJldpvw27t3L2+++SYrVqxg6NChlvUDBgywXVB3OEdOuJSW0qqfXTgSy7E912jUseQt6KwtiRiq0QQvqpboOLGxsaxcuRI/Pz9CQnIdaafcMxgM7N+/n44dOzrsjLwAv/zyC02bNsXHx4cKFUp2k14IIURWRa2f3eldetFanwVaAbOAw4AG0oBfgf8HdNZax9oswDKiteanVedIuplKt+FBdte6L4Fr+NEGN0o2G91PP/3EkSNH6N27N/Xq5ZYjLv8uXbrEypUry7wLY1lKTk5m2bJlbNiwwaFnHi6q8xcv8eeqhTRp2ICnn3yCy5cv2yyWGTNmoJTi8OHD9O/fHx8fH0aMGAFAUlISL730EkFBQbi5uREUFMTrr7+O0Wi07J+QkMDTTz9N3bp1cXd3p2bNmvTp04djx45ZysTHx/PUU09Ru3Zt3N3dadKkCe+++26+XcGeeOIJatasicFgyLI+JSWFypUr8+yzz1rWXb9+nUmTJuHv74+7uztNmzZl/vz5OY65ZcsW2rZti4eHBw0aNGDevHmFfp2yd+k1v24nT55kwIAB+Pj4UK9ePWbNmpXl9SkKJycnfHx8cvyvTJ8+nbZt2+Lr60u1atW499572bdvX5Yy5i65a9as4amnnqJatWpUr16d0aNHExcXl6VsdHQ0I0eOpGLFilSqVImxY8fmKJOXTz75hKCgoCzJvqL4+eef6dOnDz4+Pnh7e9O7d29+/vnnLGXGjx9PQEAABw4coEePHnh5edGoUSM+/fTTfI89cOBA2rZtm2P9mTNncHJyKtLfW4iiio9J5qfV56jq70Xrfv62DicLc+s+vxK27jMYDERERKCUYsSIEbi4OEp7hKx++OEHNm3axLlz52wdSqn5888/Wb9+fY73XyGEELbhEAk/rXWg1loVYhmfx/63tNbTtdYttdY+WuuKWuv2Wuu3tdapZfx0CnRMr7H63eNje65x6fhNWvcNoFod+2r1lk4aCkWNfCdTLpjRaOTIkSM0adKErl27Wik6+5KUlMSyZcuoUKGCw7aM0VqzatUqbt68yfDhwx2+S0xRDapp4Pn6qXaT+BsyZAjBwcGsWbOGKVOmYDAY6N+/PwsWLGDy5Mls3LiRRx99lNdee40XXvinQfaUKVOIiIhg+vTp/Pjjj3z66ae0bt3akkAyGo0MGDCAhQsX8vzzz7N27VpCQkJ47rnneOWVV/KMZ+zYsVy7do1Nm7LOw7Ru3Tri4uIYM2YMYEomduvWjfXr1zNjxgzWr1/PoEGDmDRpEh9++KFlv6NHjxIaGoqnpydLlixhzpw5vPfee2zZUrJRIIYNG8a9997LqlWrGDp0KNOnT+fLL78seEdM/yMGgwGDwUB0dDRvvfUWR48e5YEHHshS7tKlS0yZMoVVq1axaNEiatSoQc+ePTl48GCOY06ePBmlFIsXL2batGlERkYyefLkLGXuv/9+1q1bx5w5c1i6dCkuLi48/fTThYp5165d3H333fz3v//F398fFxcXWrRowbJlywrc9+DBgwQHBxMbG8uiRYv46quviI+PJzg4mD/++CNL2fj4eEaOHMno0aNZvXo1HTp0YNKkSWzbti3P4z/xxBMcOHAgxxfY+fPn4+3tzciRIwv1HMsbrbVlEYVj7fqZIc3I7ojTODkruobXx9nZvqrtiURTg+Z4UqlEx7ly5Qo3btxg2LBhVKpUsmPZq0OHDvHLL7/QpUsX6tevX/AO5dD169dZs2YNAQEBBAcH2zocIYRwSEWtnznmLTRRJOkGI6d+jabOXZVo3Mkeu4tEU5sOuOJZouM4OTkxduxY0tPTHbKrktaalStXkpCQwMMPP4ynZ8leL3u1Z88ejh8/TkhICHXq1LF1OHapoqtiUE0DwVU021ctpMmiRYwbP94mXX2feeaZLImhr7/+ml27drF9+3Z69uwJQO/evQGYOXMmL730EjVq1GDv3r2MGjWKRx55xLLvsGHDLL9v2LCBXbt2sXDhQsaPHw9Av379SExM5O233+a5556jWrXMQ7iadO7cmUaNGvH1118TGhqaJa5mzZpZZhJ8//33OXfuHIcOHaJRo0YA9OnTh7i4OGbOnMmkSZNwcXFh9uzZVKhQgU2bNuHtbWqB3LVrVxo0aEDt2rWL/bo9//zzTJgwwXLerVu38t1331nW5WfOnDnMmTPH8tjJyYlZs2blSPgtWLDA8nt6ejohISE0b96czz//nPfffz9L2Z49e1oSnf369eP48eMsWLDAMsHFjz/+yK5du/juu+948MEHAVNX4vvuu4+LFy8WGPPff//N9evXOXDgAG+99RbVq1dn/vz5jBgxglWrVjFkyJA89501axbu7u5s2bLFkizo27cvgYGBzJw5kxUrVljK3rp1i48//phevXpZntemTZv47rvvLOuyCwkJoX79+sybN4+OHTsCptnBFy5cyKhRo6TLmig1V0/HEx+dTM+RDfH2ta9x0Iykk04atSj5pBMBAQFMnjzZYbu5RkdHs3btWurWrWv5vHM0aWlpLFu2DGdnZ4eeKE4IIcob+7pVKGzC2cWJfo82pePgenaXCEsnFYUz1bmr2McwGo1ERUVx+/ZtXFxcHHYMsV9//ZVTp07Rv3//EiUa7Fl0dDRbtmyhefPmli/eIm/mxJ8tW/xlTtIBfP/999SrV4+uXbtaWqEZDAb69etHWlqapUtphw4dWLRoEXPmzOGXX34hPT09y3F27NiBk5MTDz30UJb1o0ePJjU1lb179+YZk7l1161btwC4ceMGGzduZOzYsVni7NSpE0FBQVni7N+/PzExMRw5cgQwjT0XGhpqSfYB1KlTh27duhXj1fpH9ha6LVq04Pz584Xa9+GHH2b//v3s37+frVu38sorrzBr1izeeuutLOU2b95Mr169qFq1Ki4uLri6unLixAmOHz9eYDwtW7YkJSWFq1evAqbXwdnZmbCwsCzlzMm/ghiNRm7dukVkZCQjR46kb9++LF26lObNm2dJXuZmx44dDBw4MEvLoIoVKzJ48GC2b9+epayXl1eWxJ67uzuNGjXK97V1cnJi4sSJLFmyhJs3bwKwatUqrl69apkcRYjS4N+kEgOebo5fQ/sbpzaJaGrSEg+KH9vVq1f59ddf0Vo7bLLPfDPWPGmSoybCtm3bxrVr1wgLC8PX19fW4QghhMggCb87mNGoOfHzNdLTjbh7ueDqbn+VkESiqU17XC1zqBTd9u3b2b59OydPnrRiZPandevWDB48mPbt29s6lFJTrVo1hg4dyqBBg+wuOW3PzIm/f9VJ5YvP5hHco3uZnTt7i8Jr165x7tw5XF1dsyzmBG5MTAwAH374IRMnTuSLL76gQ4cO1KhRgylTplhmbL1x4wZVqlTJkcCvVauWZXtexowZQ3JyMsuXLwdgyZIlpKWlMWrUP/MzXbt2jR07duSIMzw8PEucly9fpmbNmjnOkdu6oqhSpUqWx+7u7iQnJxdqXz8/P9q3b0/79u3p1asXs2bN4rHHHuPVV18lNtY0JO1vv/1GaGgoPj4+fP755+zbt4/9+/dz991353qe3OIBLGUvX75M5cqVc3SxL+zrULVqVapUqZJlrDwnJyd69+7N77//nu++N27cyLXlaq1atSzP16xy5co5yhXmtX3kkUcwGo18/fXXAHz66ad07NiRNm1K3rpJiOxiLydx5XQ8AD6V7e8mpZF0jBioxd3FPkZycjIRERFERUWRkpJixejsi1KKIUOGMGLECIduDdyjRw/CwsJo0KCBrUMRQgiRiXTpvYMd2vo3R3dfxdvXDf8mlWwdTg4GUnDGleo0K/YxTp48yY4dO2jdujWtWrWyYnT2IyEhARcXFzw8PBz2y6fRaCQuLo4qVao47N+xNMWnabbfcOXXm4pHHpvAf6a+Wmbnzp6YrVq1KkFBQURERORaPjAwEAAfHx/eeOMN3njjDc6dO8fy5ct5+eWXcXNzY+7cuVSpUoUbN26QmpqKm9s/Xd2uXLliOU9egoKC6NatG9988w0TJkzgm2++4Z577snSRbxq1arUqFEjR9dWsyZNmgCm5Jq5lVtmua2zpebNm5OSksKJEyfo1KkTkZGRuLi4sGLFiixJutjY2GKNoeXn50dsbCxpaWlZjlfY16F58+a5Jva01gUm96tUqWL5u2d25cqVHInK4qpatSrh4eHMmzeP/v37s23btixdooWwltTbBnZFnEZrGPDUXTi72N+9+USuUYs2uFO8BJbWmjVr1hAbG8u4cePw8Cj+TV17dv36dapVq1biG0D2LDY2looVK+Lp6UmLFiUba1sIIYT12V8tQpSJS8fjOLr7Kg3aVbPLZB+YuosE0BkXind3Oy4ujpUrV1KzZs0sY3U5kvT0dCIiIvjyyy8demD1rVu38umnn1q604nCiU/TrL3qwjtn3Ggx7GGOnzrNB//7yNIKzhZCQkK4cOECPj4+llZomZfcxt2rV68ezz//PC1btuTw4cMABAcHYzQac0zq8O233+Lm5kbnzp3zjWPMmDFERUURFRXF3r17s3TnNcd57Ngx6tatm2uc5pYaXbp0YcOGDSQmJlr2vXDhArt37y7W61NazBNxVK9uGqc1KSkJZ2fnLMm0rVu3FrrbcHZdunQhPT2dyMjILOuXLFlSqP2HDRtGTEwMv/zyi2Wd0Whk8+bNdOjQId99g4ODWb9+vaWLNpjG6lu7dq1VB45/4oknOHz4MI8++igVK1YsdHdlIQpLa82+VedIik+l6/Agu0z2GTHNcF6TlsU+xr59+zh69Ch9+vShXr161grNrly6dIlPPvmE/fv32zqUUnP79m2++uqrLOOkCiGEsC/Swu8OlBCbwr6V56js50nbkABbh5MrA8m44ElVGue+3WDAxSX/y/f777/HaDQyYsQIh53JdfPmzVy4cIGwsDCH7eJ6/Phxdu/eTbt27WRcmELK3KJv3PgJLJ76qk2TfJmNGjWKhQsX0rt3b55//nnuvvtuUlNT+euvv1izZg2rVq3Cy8uLLl26MHjwYFq2bImPjw/bt2/njz/+YNy4cQDcd999dO/enccff5zo6GiaN2/Ohg0bWLBgAf/+979zTRxmNmLECJ555hlGjx6Np6dnjrHnpkyZwtKlS+nRowdTpkyhSZMmJCYmcuzYMXbu3Mnq1asBmDp1KsuWLaNfv3688MILpKamMn36dJu26Lh06ZJlLMRbt24RFRXFggULCA0NtcwOGRISwnvvvcf48eOZMGECJ06c4LXXXsPf379Y5+zbty/du3dn4sSJXL9+nUaNGrF06VJLgrYgjzzyCB999BFhYWHMnj2batWqMX/+fI4fP55jRuXsXn31VdatW0fv3r156aWXUEoxd+5ckpKSmDZtWrGeT246d+5M27Zt2bFjB08//bTDjjkmbOfY7qv8feImbUMCqBbgXfAONpDANWrTFjeKF9/NmzfZvHkzTZs2pUuXLlaOzj4kJSWxbNkyKlas6LCt3rTWrFq1ivj4+Byfn0IIIeyH/d06FKVKa82+lWdBQbfw+nZ59xggiesE0AlncibqZs+ejbu7O7Nnz873GAMHDuTBBx+0Wpcue3PkyBH27dtHhw4dHLZCGRsby6pVq/Dz8yMkJMTW4ZQL9taiLztXV1d++OEH/vWvfzF//nxCQ0MZNWoUX375JV27drV0z+3ZsycRERGMGjWKAQMGsHz5ct59913LjL9OTk6sX7+ecePGMXfuXAYMGMD69et55513eP311wuMo1KlSgwaNIhLly4xdOjQHGMr+fr6smfPHkJDQ5k7dy79+/fn4YcfZvXq1VkmfWjWrBkbNmwgKSmJBx54gJdffplnn33WpjMxLlq0iC5dutClSxeGDh3K6tWrmTVrVpbWkP379+eDDz5g9+7dDBw4kC+++IKvvvqKhg0bFvu8K1asIDQ0lH//+9888MADGAwG/ve//xVqXw8PD7Zs2UKPHj2YPHkyw4YN48qVK2zcuLHA17JVq1ZERUVRsWJFxo0bx5gxYyxJ4rvvLv4YY7kZPnw4gEzWIawu7moSB7f+TZ3mlWjUsbqtw8lVOmkoFDUofp3D19eXBx98kCFDhjjkjUrzJB0JCQmEh4fj6elp65BKxe7duzlx4gT9+vUjIMA+Gw8IIYQA5cjdAB2BUirPP9AxvaZYx4y7mkRygoFaDexv1jeANG5j4DYtGYVztkaos2fPZtq0aYSFhREZGcmsWbOYOnVqljJXrlyhRo0aODnZZzLTGmJiYpg/fz7Vq1dnwoQJDjnrm8Fg4IsvviA2NpbHHnss18H2RVb16gQwZMgQ/mNHLfqEcCTdunXDycmJnTt32jqUUldQMkZr7XjZmiKwdv1Ma83p32Ko26KyXU6iBnCLv6lNB2rTtuDC2RiNRq5du+bwn03bt28nKiqKAQMGOOwkamfPnuWrr77irrvucugeJkIIYY+KWj+TLr13kITYFHwqu1OpphfY8fjBSVynPn3yTPZ98sknTJw4kXnz5jFp0iQAS9IvOjqaL774gvbt29OvX78yj72suLq6EhQUxH333eeQyT4zf39/goODJdlXSOcuXLR1CEI4nJSUFH777Tc2b97Mnj17LN25hbAGo1Fz+1Ya3r5uNGiX/1AEtpROKgpnqnNXsfaPiopi9+7dPP7445axRB1R9erVad++Pe3atbN1KKXGy8uLxo0bM2jQIEn2CSGEnZMWfnYutzvIxblzHHf1Nj8uOEar3v406VzDKrGVhjRuk04KLXgoS8Ive7LPzJz0mzVrFi+++CKfffYZt2/fZuLEiTm66DkC8/+ro1ewCjMzpxBClIWzZ88SFBREpUqVeOKJJwrVZdzR5PZ+LC38rFM/+/3HS/z163Xue6IZXhXdCt7BRuK5RACd8aN1kfc9efIkixcvpnXr1gwZMsT6wdmBO6Hecic8RyGEKE8KUz+TFn53gLSUdHZHnMbVw4W6Ley7pdRtYgjk3kIl++CfcZQmTZpk6co7ZswYh0z2ARw4cIAjR44QHh6Ou3vxZi+2d1evXmXFihWEhYVRo4b9JqeFEHeGwMBAh54FXdjOxWNxHNtzlQbtqtl1ss80dp8z1Wha5H3j4uJYsWIFNWvWJDQ0tBSis7309HS++eYbWrRo4dAt+zZv3kxSUhKDBg1y6GFzhBDCkci7tYPTWvPT6nMkxKbQdXggnj72O1utgWRc8aIKDSzr8kv2mU2cOJHp06ezcOFCbt68SVBQUFmFXKYuX77Mhg0b0Fo77KzDycnJREREkJSUJDNgCiGEcFi3bqTw06pzVPbzom2IfU96kMg1/GiLKx5F2s9gMLBs2TK01owYMcJh6y4//vgjZ8+excOjaK9PeXLs2DH27NmDs7OzJPuEEKIckXdsB3fip2guHo2jVW9/atSz71ZvSVynNh0srfvyS/bNmDEjy+NHH32Up556infffbfA2XvLo9u3bxMREYG3tzf333+/Q1a2tNasWbOG2NhYhg8fjo+Pj61DEkIIIazOkGZk97LTKAXdRgTh7GK/n+lGDBkz8xZ97D5nZ2eaNGnCkCFDqFKlSilEZ3tHjhzhp59+omPHjjRv3tzW4ZSKGzdusGrVKvz8/AgJCbF1OEIIIYrAfmsYwiq8fF0JvLsKTbvad9dIAyk4405VGmEwGDAYDEyfPp2wsDAmTpzIjBkzUEpZlpkzZ1p+nzFjBv7+/sydO5ewsDCmT5+OwWCw9VOyGq01q1evJj4+nuHDh+Pt7W3rkErFTz/9xNGjR+nTpw/16tWzdThCCCFEqalU05POwwLxqWTfw3P807rPs0j7paeno5SiZ8+eNGvWrJSis62YmBhWr15NQECAw04Ul5aWxrJly1BKMWLECFxcZDQoIYQoTyTh56DM4w3VaVaZzkMD7X6QXXPrvjdmz8Xb3Y0333yTmTNnEhkZybx585gxYwZaa8sCYDQa+eabb+jWrRtgmsAjMjKSmTNnOlSF5NatW1y+fJm+fftSp04dW4dTKrTWnDhxgqZNm9KlSxdbhyOEEEKUCq01Lq5OdB4aSO3GvrYOJ19G0tFQ5Jl5o6Oj+fDDD7lw4ULpBGYnzpw5g6urK8OHD8fZ2dnW4ZSK6Oho4uLiGDZsGJUqVbJ1OEIIIYpIZum1c8WZBc5o1Oxc8hf+jX1p2L56qcVmLemkkkwc62ZfYPb0mfSs7sSOaCPTZr4GkGu33hkzZnDvvfeybds2BgwYwK+//mqZrXfq1Km2eiqlJjk5GXd3d7tP3JaE0WjEYDDg5ma/A5cLIcSdSGbpzak49bO4q0n8tPo8XcMCqVDV/sd7u8VlatCSuhT+RlxKSgoLFizg9u3bTJw40WEnUTNLTk526LH74M54jkIIUR4Vpn4mLfwc0J/bL3P5ZDzKqXzUxRO5zop3fmP29Jk8UNeZLtWdeaCuM7OmvwrArFmzmDRpEvPmzbPsM3bsWLZt20bLli355ZdfHDLZl5CQQFRUFOnp6Xh4eDhkss9oNLJlyxYSExNxcnKSZJ8QQgiHlJqczu6IM9y+lYaru/23BjO17jNSk5aF3kdrzbp164iJiSEsLMxhk30HDx7k7NmzAA6bCLt69So//fQTWmuHfY5CCHEnkISfg/n75E3+3HGFoNZVadC2mq3DKVA6aUTM38h/X/iYB+o6E+hjuiQDfZzyTPrFx8cTGRlJ9erVuXLlCk888YTDJfuMRiPLly9n9+7dxMbG2jqcUrN9+3Z27drFqVOnbB2Kw3Kk8SyFEKI80lrz85pzJMSm0C08CA8f+5+tNpFoatASdwo/gdb+/fs5fPgwvXr1IigoqBSjs53Lly+zZs0a9uzZY+tQSk1ycjIRERHs2rWL5ORkW4cjhBCiBCThVw41VYNpqgbnWJ8Yl8K+lWepVNOTdqHlY6y3Lz5bxAdPrs6S7DPLK+n38ccfo5QiNTWVp556yuGSfQBbt27l3LlzDBw4kGrV7D9xWxwnT55kx44dtG7dmrvvvtvW4Tik1atXU8m3IqtXr7Z1KA7lnnvu4Z577inTc549exalFIsWLcq3nHmCI2sZP348AQEBVjveokWL+OKLL3Jdr5QqdvJfKWVXnwOBgYGMHz/e1mGUSOaJskTh5FU/O7HvGhePxnF3H3+q17X/GehNrfvSi9y67+LFizRu3Jju3buXYnS2c/v2bSIiIvD29mbo0KG2DqdUaK1Zs2YNsbGxDB8+HE/Pok3WIoQQonQVtX4mCT8HcuX0LbSGbuFBuLja/5924ceL+d9TaxkRkDPZZ5Zb0u8///kP+/bt47nnnnPIZN/x48fZvXs3bdu2ddhEWFxcHCtXrqRmzZqEhobaOhyHtHr1aiaMHsmAailMGD1Skn53iEcffZS9e/faOow85ZXwE8JRGY2aC0fjCGjqS5MuNWwdTqEkcZ3q3IUHFQu9j1KKYcOGMXz4cIdMEmutWbVqFfHx8YSHh+Pl5WXrkErFvn37OHr0KH369KFevXq2DkcIIUQJ2X9WSORwTK/JdWDoBm2rMfDp5uViIOhFHy3hvSlLCK+dd7LPzJz0mz1jOvHx8cyaNYuVK1c6ZLLPYDCwbt06/Pz8uO+++2wdTqnZtGkTRqOR8PBwXF3tv2tTeWNO9o33T6FzVSfG+ztm0i89PV26LGcTEBBA586dbR2GcABaa8siCie3+pmTk6LX2EZ0GhpYLhJhGiPppFKTVoUrrzU//PADN27cQCnlsJ/pR48e5cSJE/Tr18+qrZ7tSXx8PFu2bKFp06Z06VL4iVqEEEKUnaLWzyTh5wAuHI3l6plbALh7udg4moKlp6fzwcuL6V7ZqcBkn1mgjxPdq8GCeZ/w4osvkpKS4nDJPgAXFxdGjRpFeHg4Li72/7csroEDB/LQQw9RtWpVW4ficDIn++p4mb5c1vFSZZ70Gz9+PIGBgTnWZ+8OGxUVhVKKNWvW8NRTT1GtWjWqV6/O6NGjiYuLy7KvUopXXnmFN998k6CgINzc3Dh06BBgGg+yd+/eVKhQAW9vb/r378/hw4ez7P/DDz/QtWtXfH198fHxoUmTJsyaNStLme+//54uXbrg6emJr68vQ4cO5fjx43k+z8uXL+Pi4sKHH36YY9vcuXNxdXUlOjrasm7FihV07twZLy8vKlWqRHh4OOfPn8+yX1JSEk888QRVq1bFx8eHwYMHc/HixTxjyCy3Lr3m7q4ffPABQUFBVKhQgeDgYP78889CHRNgz549dOjQAQ8PDwIDA3N9vj///DN9+vTBx8cHb29vevfuzc8//2zZfs8997B9+3Z2795t6YqQvWv09evXGTVqFBUrVqR27do888wzhR5DSmvN66+/TkBAAJ6envTs2ZPff/89S5lNmzYRGhqKn58fXl5etGjRgrfffpv09PQs5QIDAxk9ejRLliyhWbNmeHt70759e3bt2pXjvO+//z6BgYF4eHjQvn17du7cmaPMlStXGDduHLVr18bd3R0/Pz8GDhzItWvXCvXcRPljNGoOR10m9bYBZxencjFRB5ha91WjCZ5UKlT5HTt2sG/fPs6cOVO6gdlYs2bNeOCBB+jYsaOtQyk1FStWZNSoUQwZMqRcJKeFEEIUTBJ+5dzN6Nv8tPIch7dfLjd34Z2dnXninSHsjDFyNsFYqH3OJhjZE+vE088+h5ubm0Mmwy5cuABArVq1qFy5so2jKR1///036enpeHl5SVeRUpBbss/MFkm/opg8eTJKKRYvXsy0adOIjIxk8uTJOcotWrSI9evX83//93+sX7+e2rVrs379enr37o2Pjw/ffPMNixcv5tatW/To0cPyf3X69GkGDx5MUFAQS5cuZc2aNTz33HMkJiZajv39998zYMAAfHx8WLp0KZ988gmHDx+me/fuXLp0Kde4/fz86NOnD19//XWObd988w0hISFUr14dgE8//ZSwsDDuuusuli9fzrx58zh8+DDBwcHcunXLst/EiRNZsGABzz33HCtWrKBJkyaMHDmyRK/vN998w/r163n//fdZuHAh58+fZ8iQIYVqIRkfH88DDzzAuHHjWLVqFffccw/PPPNMlvEEDx48SHBwMLGxsSxatIivvvqK+Ph4goOD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",
      "text/plain": [
       "<Figure size 1368x576 with 4 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "import seaborn as sns\n",
    "import matplotlib\n",
    "import matplotlib.cm as cm\n",
    "from scipy.interpolate import CubicSpline\n",
    "\n",
    "temp_yso_arr_w51e = np.array(temp_yso_arr_w51e)\n",
    "temp_yso_arr_w51n = np.array(temp_yso_arr_w51n)\n",
    "print(temp_yso_arr_w51e)\n",
    "#temp_yso_arr_w51e[temp_yso_arr_w51e>500]=np.nan\n",
    "#temp_yso_arr_w51n[temp_yso_arr_w51n>500]=np.nan\n",
    "\n",
    "#nonan_w51e = np.where(np.isfinite(temp_yso_arr_w51e))\n",
    "#nonan_w51n = np.where(np.isfinite(temp_yso_arr_w51n))\n",
    "\n",
    "#nan_w51e = np.where(~np.isfinite(temp_yso_arr_w51e))\n",
    "#nan_w51n = np.where(~np.isfinite(temp_yso_arr_w51n))\n",
    "\n",
    "\n",
    "\"\"\"\n",
    "w51e_b3_flux_rescaled_err_nonan = np.array(list(zip(w51e_b3_flux_rescaled_int.to(u.Jy).value[nonan_w51e]-w51e_b3_flux_low_rescaled_int.to(u.Jy).value[nonan_w51e],\n",
    "                                              w51e_b3_flux_upp_rescaled_int.to(u.Jy).value[nonan_w51e]-w51e_b3_flux_rescaled_int.to(u.Jy).value[nonan_w51e])))\n",
    "w51e_b3_flux_rescaled_err_nonan = np.array([[w51e_b3_flux_rescaled_int.to(u.Jy).value[nonan_w51e]-w51e_b3_flux_low_rescaled_int.to(u.Jy).value[nonan_w51e]\n",
    "                                             ,w51e_b3_flux_upp_rescaled_int.to(u.Jy).value[nonan_w51e]-w51e_b3_flux_rescaled_int.to(u.Jy).value[nonan_w51e]]]).T\n",
    "\n",
    "w51e_b6_flux_rescaled_err_nonan = np.array(list(zip(w51e_b6_flux_rescaled_int.to(u.Jy).value[nonan_w51e]-w51e_b6_flux_low_rescaled_int.to(u.Jy).value[nonan_w51e],\n",
    "                                              w51e_b6_flux_upp_rescaled_int.to(u.Jy).value[nonan_w51e]-w51e_b6_flux_rescaled_int.to(u.Jy).value[nonan_w51e]))).T\n",
    "w51e_b6_flux_rescaled_err_nonan = np.array([[w51e_b6_flux_rescaled_int.to(u.Jy).value[nonan_w51e]-w51e_b6_flux_low_rescaled_int.to(u.Jy).value[nonan_w51e]\n",
    "                                             ,w51e_b6_flux_upp_rescaled_int.to(u.Jy).value[nonan_w51e]-w51e_b6_flux_rescaled_int.to(u.Jy).value[nonan_w51e]]]).T\n",
    "\n",
    "w51n_b3_flux_rescaled_err_nonan = np.array(list(zip(w51n_b3_flux_rescaled_int.to(u.Jy).value[nonan_w51n]-w51n_b3_flux_low_rescaled_int.to(u.Jy).value[nonan_w51n],\n",
    "                                              w51n_b3_flux_upp_rescaled_int.to(u.Jy).value[nonan_w51n]-w51n_b3_flux_rescaled_int.to(u.Jy).value[nonan_w51n]))).T\n",
    "w51n_b3_flux_rescaled_err_nonan = np.array([[w51n_b3_flux_rescaled_int.to(u.Jy).value[nonan_w51n]-w51n_b3_flux_low_rescaled_int.to(u.Jy).value[nonan_w51n]\n",
    "                                             ,w51n_b3_flux_upp_rescaled_int.to(u.Jy).value[nonan_w51n]-w51n_b3_flux_rescaled_int.to(u.Jy).value[nonan_w51n]]]).T\n",
    "w51n_b6_flux_rescaled_err_nonan = np.array(list(zip(w51n_b6_flux_rescaled_int.to(u.Jy).value[nonan_w51n]-w51n_b6_flux_low_rescaled_int.to(u.Jy).value[nonan_w51n],\n",
    "                                              w51n_b6_flux_upp_rescaled_int.to(u.Jy).value[nonan_w51n]-w51n_b6_flux_rescaled_int.to(u.Jy).value[nonan_w51n]))).T\n",
    "w51n_b6_flux_rescaled_err_nonan = np.array([[w51n_b6_flux_rescaled_int.to(u.Jy).value[nonan_w51n]-w51n_b6_flux_low_rescaled_int.to(u.Jy).value[nonan_w51n]\n",
    "                                             ,w51n_b6_flux_upp_rescaled_int.to(u.Jy).value[nonan_w51n]-w51n_b6_flux_rescaled_int.to(u.Jy).value[nonan_w51n]]]).T\n",
    "\n",
    "\n",
    "w51e_b3_flux_rescaled_err_nan = np.array(list(zip(w51e_b3_flux_rescaled_int.to(u.Jy).value[nan_w51e]-w51e_b3_flux_low_rescaled_int.to(u.Jy).value[nan_w51e],\n",
    "                                              w51e_b3_flux_upp_rescaled_int.to(u.Jy).value[nan_w51e]-w51e_b3_flux_rescaled_int.to(u.Jy).value[nan_w51e]))).T\n",
    "\n",
    "w51e_b6_flux_rescaled_err_nan = np.array(list(zip(w51e_b6_flux_rescaled_int.to(u.Jy).value[nan_w51e]-w51e_b6_flux_low_rescaled_int.to(u.Jy).value[nan_w51e],\n",
    "                                              w51e_b6_flux_upp_rescaled_int.to(u.Jy).value[nan_w51e]-w51e_b6_flux_rescaled_int.to(u.Jy).value[nan_w51e]))).T\n",
    "\n",
    "w51n_b3_flux_rescaled_err_nan = np.array(list(zip(w51n_b3_flux_rescaled_int.to(u.Jy).value[nan_w51n]-w51n_b3_flux_low_rescaled_int.to(u.Jy).value[nan_w51n],\n",
    "                                              w51n_b3_flux_upp_rescaled_int.to(u.Jy).value[nan_w51n]-w51n_b3_flux_rescaled_int.to(u.Jy).value[nan_w51n]))).T\n",
    "\n",
    "w51n_b6_flux_rescaled_err_nan = np.array(list(zip(w51n_b6_flux_rescaled_int.to(u.Jy).value[nan_w51n]-w51n_b6_flux_low_rescaled_int.to(u.Jy).value[nan_w51n],\n",
    "                                              w51n_b6_flux_upp_rescaled_int.to(u.Jy).value[nan_w51n]-w51n_b6_flux_rescaled_int.to(u.Jy).value[nan_w51n]))).T\n",
    "\"\"\"\n",
    "cmap = sns.color_palette(\"YlOrBr_r\", as_cmap=True)\n",
    "norm = matplotlib.colors.Normalize(vmin=0, vmax=100, clip=True)\n",
    "mapper = cm.ScalarMappable(norm=norm, cmap=cmap)\n",
    "color_w51e = np.array([(mapper.to_rgba(v)) for v in temp_yso_arr_w51e])\n",
    "color_w51n = np.array([(mapper.to_rgba(v)) for v in temp_yso_arr_w51n])\n",
    "\n",
    "fig = plt.figure(figsize=(19,8))\n",
    "ax1 = fig.add_axes([0.1,0.15,0.4,0.77])\n",
    "ax2 = fig.add_axes([0.55,0.15,0.4,0.77])\n",
    "\n",
    "sc=ax1.scatter(w51e_b3_flux_rescaled_int.to(u.Jy).value, w51e_b6_flux_rescaled_int.to(u.Jy).value,s=0,\n",
    "              c=temp_yso_arr_w51e,vmin=0,vmax=100,cmap=cmap)\n",
    "\n",
    "def plot_flux_flux_temp(ax, b3flux, b6flux, b3fluxerr, b6fluxerr, color, idxlist, lws=[4,1,1,1],\n",
    "                        label='W51-E', markerlist=['o','^', '>', 'D'], sizelist=[20,10,10,10], uplimarr=[False,True,True, True], lolimarr=[False,False,True,True]):\n",
    "    for idx, marker, size, uplim, lolim, lw in zip(idxlist, markerlist, sizelist, uplimarr, lolimarr, lws):\n",
    "        for x, y, xerr, yerr, c,  in zip(b3flux[idx], \n",
    "                                    b6flux[idx],\n",
    "                                    b3fluxerr[idx],\n",
    "                                    b6fluxerr[idx],\n",
    "                                    color[idx], \n",
    "                                   ):\n",
    "            ax.errorbar(x,y, \n",
    "                    xerr=xerr, \n",
    "                    yerr=yerr,\n",
    "                    fmt=marker, c=c, \n",
    "                    ecolor='k', elinewidth=1, mec='k',ms=size,zorder=50)\n",
    "            ax.scatter(x,y, edgecolor='k',lw=lw, marker=marker,zorder=0,s=size**2,c=c)\n",
    "\n",
    "idxlist_w51e = [w51e_b3_res_b6_res, w51e_b3_res_b6_unres, w51e_b3_unres_b6_res , w51e_b3_unres_b6_unres   ]\n",
    "\n",
    "plot_flux_flux_temp(ax1, w51e_b3_flux_rescaled_int.to(u.Jy).value, w51e_b6_flux_rescaled_int.to(u.Jy).value, \n",
    "                    w51e_b3_flux_err_rescaled_int, w51e_b3_flux_err_rescaled_int, color_w51e, idxlist_w51e,\n",
    "                        label='W51-E',)\n",
    "idxlist_w51n = [w51n_b3_res_b6_res, w51n_b3_res_b6_unres, w51n_b3_unres_b6_res , w51n_b3_unres_b6_unres   ]\n",
    "    \n",
    "plot_flux_flux_temp(ax2, w51n_b3_flux_rescaled_int.to(u.Jy).value, w51n_b6_flux_rescaled_int.to(u.Jy).value, \n",
    "                    w51n_b3_flux_err_rescaled_int, w51n_b3_flux_err_rescaled_int, color_w51n, idxlist_w51n,\n",
    "                        label='W51-IRS2',)\n",
    "\n",
    "axins1 = inset_axes(\n",
    "    ax1,\n",
    "    width=\"30%\",  # width: 50% of parent_bbox width\n",
    "    height=\"5%\",  # height: 5%\n",
    "    loc=\"upper left\", borderpad=2.5\n",
    "    )\n",
    "axins1.xaxis.set_ticks_position(\"bottom\")\n",
    "axcbr = fig.colorbar(sc, cax=axins1, orientation=\"horizontal\", ticks=[0, 50, 100])\n",
    "axcbr.set_label('Temperature (K)')\n",
    "axins2 = inset_axes(\n",
    "    ax2,\n",
    "    width=\"30%\",  # width: 50% of parent_bbox width\n",
    "    height=\"5%\",  # height: 5%\n",
    "    loc=\"upper left\",borderpad=2.5\n",
    "    )\n",
    "axins2.xaxis.set_ticks_position(\"bottom\")\n",
    "axcbr = fig.colorbar(sc, cax=axins2, orientation=\"horizontal\", ticks=[0, 50, 100])\n",
    "axcbr.set_label('Temperature (K)')\n",
    "\n",
    "\"\"\"\n",
    "b3freq = 92982346121.91989 \n",
    "b6freq = 226691598706.70853\n",
    "spectral_indices=[-1,0,1,2,3,4]\n",
    "for si in spectral_indices:\n",
    "    ax1.plot([1e-5,1e-1],10**(np.log10([1e-5,1e-1]) - np.log10(b3freq/b6freq) * si), c='grey',ls='dashed')\n",
    "ax1.text(1e-3,3e-2,r'$\\alpha=4$',rotation=50,fontsize=14,c='gray')\n",
    "\n",
    "ax1.text(1.5e-2,5e-3,r'$\\alpha=-1$',rotation=50,fontsize=14,c='gray')\n",
    "\"\"\"\n",
    "b3flux_1 = get_bb_intensity(freq93, surf_den, 1*u.K)\n",
    "b6flux_1 = get_bb_intensity(freq225, surf_den, 1*u.K)\n",
    "\n",
    "b3flux_lowlimit_curve_over1 = get_bb_intensity(freq93, surf_den[-1], np.arange(2,80,1)*u.K)\n",
    "b6flux_lowlimit_curve_over1 = get_bb_intensity(freq225, surf_den[-1], np.arange(2,80,1)*u.K)\n",
    "b3flux_lowlimit_curve = np.concatenate((b3flux_1.value, b3flux_lowlimit_curve_over1.value))\n",
    "b6flux_lowlimit_curve = np.concatenate((b6flux_1.value, b6flux_lowlimit_curve_over1.value))\n",
    "b3flux_80 = get_bb_intensity(freq93, surf_den, 80*u.K)\n",
    "b6flux_80 = get_bb_intensity(freq225, surf_den, 80*u.K)\n",
    "\n",
    "interp = CubicSpline(b3flux_80.value, b6flux_80.value)\n",
    "\n",
    "ax1.fill_between(b3flux_lowlimit_curve, b6flux_lowlimit_curve, interp(b3flux_lowlimit_curve), color='chartreuse', alpha=0.3,label='modified blackbody T=1-80K')\n",
    "ax2.fill_between(b3flux_lowlimit_curve, b6flux_lowlimit_curve, interp(b3flux_lowlimit_curve), color='chartreuse', alpha=0.3)\n",
    "\n",
    "\n",
    "b3flux_20 = get_bb_intensity(freq93, surf_den, 20*u.K)\n",
    "b6flux_20 = get_bb_intensity(freq225, surf_den, 20*u.K)\n",
    "\n",
    "b3flux_40 = get_bb_intensity(freq93, surf_den, 40*u.K)\n",
    "b6flux_40 = get_bb_intensity(freq225, surf_den, 40*u.K)\n",
    "\n",
    "b3flux_60 = get_bb_intensity(freq93, surf_den, 60*u.K)\n",
    "b6flux_60 = get_bb_intensity(freq225, surf_den, 60*u.K)\n",
    "\n",
    "b3flux_80 = get_bb_intensity(freq93, surf_den, 80*u.K)\n",
    "b6flux_80 = get_bb_intensity(freq225, surf_den, 80*u.K)\n",
    "\n",
    "ax1.plot(b3flux_20, b6flux_20, c='r', ls='dotted',lw=3)\n",
    "ax1.plot(b3flux_40, b6flux_40, c='magenta', ls='dotted',lw=3)\n",
    "ax1.plot(b3flux_60, b6flux_60, c='orange', ls='dotted',lw=3)\n",
    "ax1.plot(b3flux_80, b6flux_80, c='dodgerblue', ls='dotted',lw=3)\n",
    "\n",
    "ax2.plot(b3flux_20, b6flux_20, c='r', ls='dotted',lw=3)\n",
    "ax2.plot(b3flux_40, b6flux_40, c='magenta', ls='dotted',lw=3)\n",
    "ax2.plot(b3flux_60, b6flux_60, c='orange', ls='dotted',lw=3)\n",
    "ax2.plot(b3flux_80, b6flux_80, c='dodgerblue', ls='dotted',lw=3)\n",
    "ax2.text(1.2*b3flux_20[-1].value,0.95*b6flux_20[-1].value, '20K', fontsize=20,color='r')\n",
    "ax2.text(1.2*b3flux_40[-1].value,0.95*b6flux_40[-1].value, '40K', fontsize=20,color='magenta')\n",
    "\n",
    "ax2.text(1.2*b3flux_60[-1].value,0.95*b6flux_60[-1].value, '60K', fontsize=20,color='orange')\n",
    "ax2.text(1.2*b3flux_80[-1].value,1.05*b6flux_80[-1].value, '80K', fontsize=20,color='dodgerblue')\n",
    "\n",
    "#ax1.text(1.5e-3,7e-3,r'$T=100\\,{\\rm K}$',c='dodgerblue',fontsize=13)\n",
    "#ax1.text(8e-4,3.5e-3,r'$T=50\\,{\\rm K}$',c='magenta',fontsize=13)\n",
    "#ax1.text(3e-4,1e-3,r'$T=20\\,{\\rm K}$',c='r',fontsize=13)\n",
    "ax1.set_xscale('log')\n",
    "ax1.set_yscale('log')\n",
    "ax1.set_xlabel(r'$S_{\\rm 3mm}$ $({\\rm Jy\\,arcsec^{-2}})$')\n",
    "ax1.set_ylabel(r'$S_{\\rm 1.3mm, conv}$ $({\\rm Jy\\,arcsec^{-2}})$')\n",
    "ax2.set_xscale('log')\n",
    "ax2.set_yscale('log')\n",
    "ax2.set_xlabel(r'$S_{\\rm 3mm}$ $({\\rm Jy\\,arcsec^{-2}})$')\n",
    "#ax2.set_ylabel(r'$S_{\\rm int, 1.3mm}$ (Jy)')\n",
    "\n",
    "ax1.set_title('W51-E', fontsize=40)\n",
    "ax2.set_title('W51-IRS2', fontsize=40)\n",
    "ax1.set_xlim(1e-2,5e1)\n",
    "ax1.set_ylim(5e-2,1e1)\n",
    "ax2.set_xlim(1e-2,5e1)\n",
    "ax2.set_ylim(5e-2,1e1)\n",
    "\n",
    "#ax1.set_xlim(1e9,1e13)\n",
    "#ax1.set_ylim(1e10,5e12)\n",
    "#ax2.set_xlim(1e9,1e13)\n",
    "#ax2.set_ylim(1e10,5e12)\n",
    "ax2.set_yticks([])\n",
    "b3freq = 92982346121.91989 \n",
    "b6freq = 226691598706.70853\n",
    "spectral_indices=[-1,0,1,2,3,4]\n",
    "for si in spectral_indices:\n",
    "    ax1.plot([1e-2,1e2],10**(np.log10([1e-2,1e2]) - np.log10(b3freq/b6freq) * si), c='grey',ls='dashed')\n",
    "    ax2.plot([1e-2,1e2],10**(np.log10([1e-2,1e2]) - np.log10(b3freq/b6freq) * si), c='grey',ls='dashed')\n",
    "\n",
    "ax1.scatter([-1,-1],[-1,-1], c=mapper.to_rgba(10), s=20**2, lw=4, marker='o',label='resolved in both bands',edgecolor='k')\n",
    "ax1.scatter([-1,-1],[-1,-1], c=mapper.to_rgba(10), s=10**2, lw=1, marker='^',label='resolved in Band 3 only',edgecolor='k') \n",
    "ax1.scatter([-1,-1],[-1,-1], c=mapper.to_rgba(10), s=10**2, lw=1, marker='>',label='resolved in Band 6 only',edgecolor='k') \n",
    "ax1.scatter([-1,-1],[-1,-1], c=mapper.to_rgba(10), s=10**2, lw=1, marker='D',label='unresolved in both bands',edgecolor='k') \n",
    "\n",
    "ax1.legend(fontsize=16, frameon=False, loc='lower right')\n",
    "    \n",
    "    \n",
    "\n",
    "ax1.text(0.03,1.5,r'$\\alpha=4$',rotation=55,fontsize=20)\n",
    "ax1.text(1,0.3,r'$\\alpha=-1$',rotation=55,fontsize=20)\n",
    "ax2.text(0.03,1.5,r'$\\alpha=4$',rotation=55,fontsize=20)\n",
    "ax2.text(1,0.3,r'$\\alpha=-1$',rotation=55,fontsize=20)\n",
    "plt.savefig('fluxflux_temp.png')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 9,
   "id": "f440e565-33c2-46be-89fa-20ad790c3d05",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2025-07-15T14:40:43.738663Z",
     "iopub.status.busy": "2025-07-15T14:40:43.738471Z",
     "iopub.status.idle": "2025-07-15T14:40:43.966965Z",
     "shell.execute_reply": "2025-07-15T14:40:43.966469Z"
    }
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "19.044800469926937 30.456783222661855\n",
      "19.044800469926937 30.456783222661855\n",
      "16.537701467441174 30.10467021564039\n",
      "36\n",
      "125 44 94 6\n"
     ]
    },
    {
     "data": {
      "image/png": "",
      "text/plain": [
       "<Figure size 576x576 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "fig = plt.figure(figsize=(8,8))\n",
    "ax3 = fig.add_axes([0.15,0.15,0.83,0.83])\n",
    "tempbin = np.linspace(0,70,15)\n",
    "ax3.hist(temp_yso_arr_w51e[w51e_b3_res_b6_res], bins=tempbin,  histtype='step', color=sns.color_palette('colorblind')[0], label='W51-E (resolved)',lw=4, hatch='/')\n",
    "ax3.hist(temp_yso_arr_w51n[w51n_b3_res_b6_res], bins=tempbin,  histtype='step',color=sns.color_palette('colorblind')[1], label='W51-IRS2 (resolved)',hatch='\\\\',lw=4)\n",
    "\n",
    "unresolveds_w51e = np.logical_or(np.logical_or(w51e_b3_res_b6_unres, w51e_b3_unres_b6_res), w51e_b3_unres_b6_unres)\n",
    "unresolveds_w51n = np.logical_or(np.logical_or(w51n_b3_res_b6_unres, w51n_b3_unres_b6_res), w51n_b3_unres_b6_unres)\n",
    "ax3.hist(temp_yso_arr_w51e[unresolveds_w51e], bins=tempbin,   facecolor='cyan', alpha=0.4,label='W51-E (unresolved)')\n",
    "ax3.hist(temp_yso_arr_w51n[unresolveds_w51n], bins=tempbin,  facecolor='orange', alpha=0.4,label='W51-IRS2 (unresolved)')\n",
    "\n",
    "print(np.nanmean(temp_yso_arr_w51e), np.nanmean(temp_yso_arr_w51n))\n",
    "print(np.nanmean(temp_yso_arr_w51e), np.nanmean(temp_yso_arr_w51n))\n",
    "print(np.nanmedian(temp_yso_arr_w51e), np.nanmedian(temp_yso_arr_w51n))\n",
    "\n",
    "print(np.nanargmax(w51e_b3_flux_rescaled_int.to(u.Jy).value))\n",
    "print(len(temp_yso_arr_w51e), len(np.where(np.isfinite(temp_yso_arr_w51e))[0]), len(temp_yso_arr_w51n),len(np.where(np.isfinite(temp_yso_arr_w51n))[0]))\n",
    "ax3.legend(fontsize=20, frameon=False)\n",
    "ax3.set_xlabel('modified blackbody temperature (K)')\n",
    "ax3.set_ylabel('number')\n",
    "#ax3.set_yticks([5,10,15])\n",
    "\n",
    "plt.savefig('temp_hist.png')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 10,
   "id": "6f6d75dd-d89a-4501-af76-734726b73934",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2025-07-15T14:40:43.969420Z",
     "iopub.status.busy": "2025-07-15T14:40:43.969228Z",
     "iopub.status.idle": "2025-07-15T14:40:44.037920Z",
     "shell.execute_reply": "2025-07-15T14:40:44.037456Z"
    }
   },
   "outputs": [],
   "source": [
    "w51e_catalog['temp']=temp_yso_arr_w51e\n",
    "w51n_catalog['temp']=temp_yso_arr_w51n\n",
    "w51e_catalog.write(Path.w51e_dendro_matched_catalog_new,overwrite=True, format='fits')\n",
    "w51n_catalog.write(Path.w51n_dendro_matched_catalog_new,overwrite=True, format='fits')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "347f3747-871f-4958-8b78-bfe5b641e49c",
   "metadata": {},
   "outputs": [],
   "source": []
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "06780107-0b6e-44e0-8dbc-c99dc1df8e73",
   "metadata": {},
   "outputs": [],
   "source": []
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "15f73aa6-8ac2-455a-adfc-2cabdd5a27ba",
   "metadata": {},
   "outputs": [],
   "source": []
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "08e695ad-d944-4c12-b9d7-4bbc31b74637",
   "metadata": {},
   "outputs": [],
   "source": []
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "9a3b5342-33c9-4baa-9271-ccae77d19971",
   "metadata": {},
   "outputs": [],
   "source": []
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "0efcf1b5-cbb0-41a1-825d-906147ddd8ae",
   "metadata": {},
   "outputs": [],
   "source": []
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "81cc7c59-e310-4d0e-bc18-89d4ebeb61fa",
   "metadata": {},
   "outputs": [],
   "source": []
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "2ae45f32-a2c9-46b1-9db7-f01bd4ff5540",
   "metadata": {},
   "outputs": [],
   "source": []
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "37ef1397-aefa-4946-8fd2-215537a1a51a",
   "metadata": {},
   "outputs": [],
   "source": []
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "eb71fc70-dd00-4857-b54a-c4e9db608a2b",
   "metadata": {},
   "outputs": [],
   "source": []
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "35d6eaf1-cd5d-4801-a379-f88278d66ba6",
   "metadata": {},
   "outputs": [],
   "source": []
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "base",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.9.12"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 5
}
